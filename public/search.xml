<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/02/hello-world/"/>
      <url>/2021/11/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在浏览器输入 URL 到页面加载发生了什么？</title>
      <link href="/2021/11/01/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%BE%93%E5%85%A5URl%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/"/>
      <url>/2021/11/01/%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%BE%93%E5%85%A5URl%E5%88%B0%E9%A1%B5%E9%9D%A2%E5%8A%A0%E8%BD%BD%E5%8F%91%E7%94%9F%E4%BA%86%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<p><code>过程综述：</code></p><ol><li>DNS 解析</li><li>TCP 连接</li><li>发送 HTTP 请求</li><li>服务器处理请求并返回 HTTP 报文</li><li>浏览器解析渲染页面</li><li>连接结束</li></ol><h2 id="一-DNS-解析"><a href="#一-DNS-解析" class="headerlink" title="一. DNS 解析"></a>一. DNS 解析</h2><ol><li><p><code>wiki</code>介绍:</p><blockquote><p>域名系统（domain name system，缩写：DNS）是互联网的一项服务。它作为将域名和 ip 地址相互映射的一个分布式数据库，能够使人更方便的访问互联网。DNS 使用 TCP 和 UDP 端口 53.当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能朝服哦 253 个字符。<font color="red">最基本的作用就是将域名翻译成对应的 IP 地址</font></p></blockquote></li><li><p>域名解析过程</p><ul><li><p>检查缓存</p><ol><li>浏览器缓存<blockquote><p>用户通过浏览器访问某域名时，浏览器首先会在自己的缓存中查找是否有该域名对用的 ip 地址（若曾经访问过，没有被清除，就会存在）</p></blockquote></li><li>系统缓存<blockquote><p>检查系统的 hosts 文件有没有这个域名的映射，如果有，直接返回</p></blockquote></li></ol></li><li><p>ISP（互联网服务提供商）DNS 缓存</p><blockquote><p>如果 hosts 与本地的 DNS 解析器缓存都没有相应的网址映射关系，首先会找 TCP/IP 参数中设置的首选 DNS 服务器，在此我们叫它 DNS 服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。</p></blockquote></li><li><p>根域名服务器</p><blockquote><p>当以上均未完成，则进入根服务器查询，全球仅有 13 台服务器，1 个根域名服务器，其余 12 台为辅助域名服务器。根域名收到请求后会查询域名文件记录，若无则将其管辖的顶级域名（如： .com）服务器 IP 告诉本地 DNS 服务器</p></blockquote></li><li><p>顶级域名服务器</p><blockquote><p>顶级域名服务器收到请求后查看区域文件记录，若无则将其管辖范围内主域名服务器 IP 地址告诉本地服务器</p></blockquote></li><li><p>主域名服务器</p><blockquote><p>主域名服务器接收到请求以后查询自己的缓存，如果没有则进入下一级域名服务器查找，并重复该步骤直至找到正确记录</p></blockquote></li><li><p>保存结果到缓存</p><blockquote><p>本地域名服务器吧返回的结果保存到缓存</p></blockquote></li></ul></li></ol><p><img src="/chintdev.github.io/images/dns.jpg" alt="DNS"></p><h2 id="二-TCP-链接"><a href="#二-TCP-链接" class="headerlink" title="二. TCP 链接"></a>二. TCP 链接</h2><ol><li><p>第一次握手：CLient 将标识位 SYN 置为 1，随机产生一个值 seq=j，并将该数据包发送至 Server，Client 进入 SYN_SEND 状态，等待 Server 确认。</p></li><li><p>第二次握手：Server 收到数据包后由标志位 SYN=1 知道 Client 请求建立链接，Server 将标识位 SYN 和 ACK 都置为 1，ACK=j+1，随机产生一个值 seq=K，并将该数据包发送给 Client 以确认连接请求。</p></li><li><p>第三次握手：Client 收到确认后，检查 ACK 是否为 j+1，ACK 是否为 1，如果正确则将标志位 ACK 置为 1，ACK=k+1,并将该数据发送给 Server，Server 检查 ACK 是否为 k+1,ACK 是否为 1，如果正确则建立连接成功，Client 和 Server 进入 ESTABLISHED 状态，完成三次握手，随后 Client 与 Server 之间可以开始传输数据了。</p></li></ol><h3 id="三-HTTP-请求"><a href="#三-HTTP-请求" class="headerlink" title="三. HTTP 请求"></a>三. HTTP 请求</h3><blockquote><p>发送 HTTP 请求的过程就是构建 HTTP 请求报文并通过 TCP 协议中发送服务器指定端口（HTTP 协议 80/8080，HTTPS 协议 443）.<br>HTTP 请求报文由三部分组成： 请求头，请求行，请求体</p></blockquote><h4 id="四-服务器处理请求返回-HTTP-报文"><a href="#四-服务器处理请求返回-HTTP-报文" class="headerlink" title="四. 服务器处理请求返回 HTTP 报文"></a>四. 服务器处理请求返回 HTTP 报文</h4><blockquote><p>后端从在固定的端口接收到 TCP 报文开始，这一部分对于编程语言中的 socket。他会对 TCP 连接进行处理，对 HTTP 协议进行解析，并按照报文格式进一步封装成 HTTP Request 对象，供上层使用。<br>HTTP 响应报文包括三部分：状态码，响应报头，响应报文</p></blockquote><h5 id="五-浏览器解析渲染页面"><a href="#五-浏览器解析渲染页面" class="headerlink" title="五. 浏览器解析渲染页面"></a>五. 浏览器解析渲染页面</h5><blockquote><p>浏览器是一个边间谍西边渲染的过程。首先浏览器解析 HTML 文件构成 DOM 树，然后解析 CSS 文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。这个过程比较复杂。</p></blockquote><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      
      
      <categories>
          
          <category> Browser </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
            <tag> HTTP </tag>
            
            <tag> TCP </tag>
            
            <tag> URL </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
