{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/images/dns.jpg","path":"images/dns.jpg","modified":1,"renderable":0},{"_id":"source/images/themes/top_img.jpg","path":"images/themes/top_img.jpg","modified":1,"renderable":0},{"_id":"source/images/themes/top_img1.png","path":"images/themes/top_img1.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-matery/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","path":"css/barrager.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/bb.css","path":"css/bb.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","path":"css/gallery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","path":"css/gitment.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/matery.css","path":"css/matery.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","path":"js/crypto-js.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my.css","path":"css/my.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","path":"js/gallery-encrypt.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","path":"js/jquery.barrager.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/js/matery.js","path":"js/matery.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","path":"medias/comment_bg.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","path":"medias/icp.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","path":"medias/logo.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/logo1.png","path":"medias/logo1.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","path":"libs/background/canvas-nest.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","path":"libs/background/ribbon-dynamic.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","path":"libs/background/ribbon-refresh.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","path":"libs/background/ribbon.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","path":"libs/instantpage/instantpage.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","path":"libs/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","path":"libs/prism/prism.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","path":"libs/minivaline/MiniValine.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","path":"libs/others/sakura-half.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","path":"libs/others/sakura-reduce.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","path":"libs/others/sakura-small.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","path":"libs/others/sakura.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","path":"libs/others/star.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","path":"libs/twikoo/twikoo.all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","path":"libs/twikoo/twikoo.all.min.js.LICENSE.txt","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/11.jpg","path":"medias/banner/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/10.jpg","path":"medias/banner/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/7.png","path":"medias/banner/7.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/8.jpg","path":"medias/banner/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/banner/9.jpg","path":"medias/banner/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","path":"medias/barrager/0.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","path":"medias/barrager/close.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","path":"medias/barrager/2.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","path":"medias/barrager/1.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","path":"medias/images/01.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","path":"medias/images/02.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","path":"medias/images/03.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","path":"medias/reward/alipay.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","path":"libs/awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","path":"libs/awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","path":"libs/awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","path":"libs/awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","path":"libs/awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","path":"libs/awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","path":"libs/awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","path":"libs/awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","path":"libs/awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","path":"libs/awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","path":"libs/awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","path":"libs/awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","path":"libs/awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","path":"libs/awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","path":"libs/awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","path":"libs/awesome/css/all.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","path":"libs/awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":1,"renderable":1}],"Cache":[{"_id":"source/about/index.md","hash":"b7d6763df4134c5d6ca880ebb340bda857bab44f","modified":1635820088558},{"_id":"source/_data/friends.json","hash":"bc64b8babe34e8be86775a02bcf718521c7a0913","modified":1635818342570},{"_id":"source/_posts/10.29EventLoop.md","hash":"3fa38863ab0949718017c3f2841214e5f9eadea0","modified":1635836716994},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"source/_posts/npm机制.md","hash":"bb58ac40d672257d19ec37d528bda86674266ac4","modified":1635836722736},{"_id":"source/_posts/在浏览器中输入URl到页面加载发生了什么.md","hash":"1de6d54aa6812b287222319ac009ae723e9320e0","modified":1635837599200},{"_id":"source/categories/index.md","hash":"ccd1e7fc9b89341dc5254a70a599e2c4230c6c5a","modified":1635820093355},{"_id":"source/contact/index.md","hash":"9efb945b7f5fbe0c464308ee31fe4e5d4c64c4cd","modified":1635820109790},{"_id":"source/404/index.md","hash":"13f2bf3cb972924bacfa283d01f046218de9ab90","modified":1635820083377},{"_id":"source/friends/index.md","hash":"f04290acdc19d232c5e115c2808a90f6ab6bfc6c","modified":1635820115056},{"_id":"source/tags/index.md","hash":"3694c6b09c663ea381a576d716ce97b3ba11b912","modified":1635820124964},{"_id":"source/images/dns.jpg","hash":"3844e7fab11de51890e67297c9017cfbd58727af","modified":1622442262412},{"_id":"source/images/themes/top_img.jpg","hash":"66e697ca7cd2dc703d3387f26dc026a89c364276","modified":1635749559021},{"_id":"themes/hexo-theme-matery/.gitignore","hash":"727607929a51db7ea10968f547c26041eee9cfff","modified":1635752745991},{"_id":"themes/hexo-theme-matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1635752745993},{"_id":"themes/hexo-theme-matery/README_CN.md","hash":"a2267aed16d52f4adeb13f555d36d076855387af","modified":1635752745994},{"_id":"themes/hexo-theme-matery/CHANGELOG.md","hash":"084ec8b110a20170d08a0aa5fd8accf601051835","modified":1635752745992},{"_id":"themes/hexo-theme-matery/README.md","hash":"ddaf6310154e314385d63041da61c418055314f6","modified":1635752745993},{"_id":"themes/hexo-theme-matery/languages/zh-HK.yml","hash":"51c06005927e8bde5b3e23353d2bf2c32ed855f3","modified":1635752745997},{"_id":"themes/hexo-theme-matery/layout/archive.ejs","hash":"cdac701de8370f9f3794a0eed4165983993a1ca7","modified":1635752746029},{"_id":"themes/hexo-theme-matery/_config.yml","hash":"36e079cf74a6825f523164457c420a7693f696dc","modified":1635829907157},{"_id":"themes/hexo-theme-matery/languages/zh-CN.yml","hash":"a2695fdb7579a77daec7773a9bb8e71b9edbf16b","modified":1635752745997},{"_id":"themes/hexo-theme-matery/languages/default.yml","hash":"94578d8515cabb45070f2a4e68cf91f702e93262","modified":1635752745996},{"_id":"themes/hexo-theme-matery/layout/404.ejs","hash":"36f8d3e530e8144bf80d0772284edd9b0da362fe","modified":1635752745998},{"_id":"themes/hexo-theme-matery/layout/bb.ejs","hash":"21959d702f17a3d98b716daf44c8b5eecd59c7c5","modified":1635752746029},{"_id":"themes/hexo-theme-matery/layout/about.ejs","hash":"99a74316aed478efb0db823c4460ee2e660f101c","modified":1635752746028},{"_id":"themes/hexo-theme-matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1635752746030},{"_id":"themes/hexo-theme-matery/layout/contact.ejs","hash":"a777733e03d954ac265a3d0523245bd191732130","modified":1635752746031},{"_id":"themes/hexo-theme-matery/layout/category.ejs","hash":"00019bca11fb46477f22017cb1f5ad8444da0580","modified":1635752746031},{"_id":"themes/hexo-theme-matery/layout/friends.ejs","hash":"51e5369ec6b017cc702a8d957fc052c59dd4c3d7","modified":1635752746032},{"_id":"themes/hexo-theme-matery/layout/galleries.ejs","hash":"a25fbf875b13f355d757b3dbb8620f4f8f925b5b","modified":1635752746032},{"_id":"themes/hexo-theme-matery/layout/gallery.ejs","hash":"2b8bce28e64e5ee38c82234761bb5f443a62be1f","modified":1635752746033},{"_id":"themes/hexo-theme-matery/layout/index.ejs","hash":"1656c2db90e24a360282d15c71144b4f14edb43d","modified":1635752746033},{"_id":"themes/hexo-theme-matery/layout/layout.ejs","hash":"94df745a5c3d6e05f162ef4e1027547a6a95ee98","modified":1635752746034},{"_id":"themes/hexo-theme-matery/layout/post.ejs","hash":"3d4f40121dbb75bcb71837c35ec5ee17cdffae31","modified":1635752746035},{"_id":"themes/hexo-theme-matery/source/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1635752746042},{"_id":"themes/hexo-theme-matery/layout/tag.ejs","hash":"85a4b05bd8a6ad0f17ff2e97dae56949b379c204","modified":1635752746035},{"_id":"themes/hexo-theme-matery/source/favicon.ico","hash":"cc47a2cce0ba273b3fa6a1a820fa26cc80b11df4","modified":1606824759908},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-analytics.ejs","hash":"3bbcdb474ca1dcad514bdc4b7763e17c55df04fd","modified":1635752746000},{"_id":"themes/hexo-theme-matery/layout/_partial/back-top.ejs","hash":"47ee36a042bb6d52bbe1d0f329637e8ffcf1d0aa","modified":1635752745999},{"_id":"themes/hexo-theme-matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1635752746036},{"_id":"themes/hexo-theme-matery/layout/_partial/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1635752746001},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1635752746002},{"_id":"themes/hexo-theme-matery/layout/_partial/background.ejs","hash":"acd18121108659b3dd7a94c10943e5f6a4938239","modified":1635752746000},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-cover-content.ejs","hash":"c35e4254ff0738878f65251a657b4fdcafc4b270","modified":1635752746001},{"_id":"themes/hexo-theme-matery/layout/_partial/bg-video.ejs","hash":"963422029eb5158eb5f5bc97ce19b66e5399db97","modified":1635752746002},{"_id":"themes/hexo-theme-matery/layout/_partial/footer.ejs","hash":"7c87e0eb2cf662c2a9b9b0e1e5d228b0fac2622e","modified":1635752746004},{"_id":"themes/hexo-theme-matery/layout/_partial/disqus.ejs","hash":"b2dc2c8b5ed56815e55cc2ea54a6dc4eeba2375d","modified":1635752746004},{"_id":"themes/hexo-theme-matery/layout/_partial/changyan.ejs","hash":"cd919d31564e118c2ee8d5cbfb7d51ee6da15d82","modified":1635752746003},{"_id":"themes/hexo-theme-matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1635752746005},{"_id":"themes/hexo-theme-matery/layout/_partial/gitalk.ejs","hash":"2aa8fbb04b046fa7679092a48372d7e036835dff","modified":1635752746005},{"_id":"themes/hexo-theme-matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1635752746006},{"_id":"themes/hexo-theme-matery/layout/_partial/head.ejs","hash":"d860d1c550f9e12441ef2d9fef0886e5efaf7d8d","modified":1635752746007},{"_id":"themes/hexo-theme-matery/layout/_partial/header.ejs","hash":"59e38c70f3d8e7165e686e5e84a627835f4321b0","modified":1635752746007},{"_id":"themes/hexo-theme-matery/layout/_partial/gitment.ejs","hash":"90f6218512ef2eab63ada7ad2fc766ae635a2297","modified":1635752746006},{"_id":"themes/hexo-theme-matery/layout/_partial/minivaline.ejs","hash":"738b83cd90fe1b26971d803fc89c56193323da1e","modified":1635752746009},{"_id":"themes/hexo-theme-matery/layout/_partial/index-cover.ejs","hash":"bf96ff47df2d81bf2edb2a8c6737e36b8b08aca3","modified":1635752746008},{"_id":"themes/hexo-theme-matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1635752746008},{"_id":"themes/hexo-theme-matery/layout/_partial/mobile-nav.ejs","hash":"52de0cf3ce13a3477b0a1659d2b8aa41db1f622d","modified":1635752746009},{"_id":"themes/hexo-theme-matery/layout/_partial/navigation.ejs","hash":"cda18036a6c782dee122a33f3bba759f3377a68c","modified":1635752746010},{"_id":"themes/hexo-theme-matery/layout/_partial/post-cover.ejs","hash":"d1c873c5de54498c722e155aadb8c0ec39485dfa","modified":1635752746011},{"_id":"themes/hexo-theme-matery/layout/_partial/paging.ejs","hash":"e2df12cf92a82b1a7a7add2eac1db1d954bc5511","modified":1635752746011},{"_id":"themes/hexo-theme-matery/layout/_partial/post-statis.ejs","hash":"04889f9031743c6b081d02fa4027b0dbfcc45ecf","modified":1635752746013},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail-toc.ejs","hash":"3ff94aff01936242a9f4e1f31adb9b43bfab8d53","modified":1635752746012},{"_id":"themes/hexo-theme-matery/layout/_partial/post-detail.ejs","hash":"4002adc615f6d3959993dcb62004a07adfc3fe4f","modified":1635752746013},{"_id":"themes/hexo-theme-matery/layout/_partial/reprint-statement.ejs","hash":"0ce3f9361f558b99cc2f059c5e50b0e2a152ae38","modified":1635752746014},{"_id":"themes/hexo-theme-matery/layout/_partial/search.ejs","hash":"150529c9fb9aa8ddb42ec3e02645d301faa2503b","modified":1635752746016},{"_id":"themes/hexo-theme-matery/layout/_partial/reward.ejs","hash":"ffc55bc7e73bc698bfc58d8e3780c336b83282cf","modified":1635752746015},{"_id":"themes/hexo-theme-matery/layout/_partial/prev-next.ejs","hash":"c76b78782ea82340104fccc089417572e0adece4","modified":1635752746014},{"_id":"themes/hexo-theme-matery/layout/_partial/social-link.ejs","hash":"6f871bd3a70f720e4e451f1f4f625cbc6d8994a4","modified":1635752746017},{"_id":"themes/hexo-theme-matery/layout/_widget/artitalk.ejs","hash":"b14e486f12b9ac42a273b80e4d785fcb94cf04b2","modified":1635752746019},{"_id":"themes/hexo-theme-matery/layout/_partial/share.ejs","hash":"c941730a2471d6aab367cbb6e09ed08b56c83143","modified":1635752746016},{"_id":"themes/hexo-theme-matery/layout/_partial/twikoo.ejs","hash":"f9cb8c82b9d2a7cdb644e10718f1cdeb9400414c","modified":1635752746017},{"_id":"themes/hexo-theme-matery/layout/_partial/valine.ejs","hash":"045f3aaade1dc6749a1f824b0405b5fdb9e041e4","modified":1635752746018},{"_id":"themes/hexo-theme-matery/layout/_widget/category-radar.ejs","hash":"1d8747fda89a0b2ca3c7008867cbfeecad0578a6","modified":1635752746020},{"_id":"themes/hexo-theme-matery/layout/_widget/category-cloud.ejs","hash":"1b3df1009234c0112424b497b18b4ad8240b3bc7","modified":1635752746019},{"_id":"themes/hexo-theme-matery/layout/_widget/music.ejs","hash":"e9e3e327d5de9d7aeadbde32e1d558652d9e9195","modified":1635752746022},{"_id":"themes/hexo-theme-matery/layout/_widget/my-gallery.ejs","hash":"65a2d2f9722f84c7fd98f6bdf79087a14848ebd8","modified":1635752746022},{"_id":"themes/hexo-theme-matery/layout/_widget/dream.ejs","hash":"9a472ad5591100cdb65d0df9d01034163bd6dd9d","modified":1635752746021},{"_id":"themes/hexo-theme-matery/layout/_widget/my-skills.ejs","hash":"89a0092df72d23093128f2fbbdc8ca7f83ebcfd9","modified":1635752746024},{"_id":"themes/hexo-theme-matery/layout/_widget/my-projects.ejs","hash":"ef60b64021fa349b0048425d858dfcf6c906fede","modified":1635752746023},{"_id":"themes/hexo-theme-matery/layout/_widget/post-calendar.ejs","hash":"48821e644bc73553d7c5c56d2e8ee111a70cd776","modified":1635752746024},{"_id":"themes/hexo-theme-matery/layout/_widget/post-charts.ejs","hash":"ab5f986f428215941aeaa0c88aefd440c47d3bcf","modified":1635752746025},{"_id":"themes/hexo-theme-matery/layout/_widget/recommend.ejs","hash":"8551137e94ca4e2e3b8b63d5626255884cb60cb5","modified":1635752746026},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-cloud.ejs","hash":"fc42b72cddc231f7485cdc1fd6852b66be6add26","modified":1635752746026},{"_id":"themes/hexo-theme-matery/layout/_widget/tag-wordcloud.ejs","hash":"487aacb2454d6bf0d21cdb07ddd1fd5ddbca9038","modified":1635752746027},{"_id":"themes/hexo-theme-matery/layout/_widget/video.ejs","hash":"5e5ec78f8ab229d54786ef2e0ea2864af2dc459f","modified":1635752746027},{"_id":"themes/hexo-theme-matery/source/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1635752746037},{"_id":"themes/hexo-theme-matery/source/css/gallery.css","hash":"015097ca1271dd44e6d663332587dbe58ae2ade8","modified":1635752746038},{"_id":"themes/hexo-theme-matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1635752746039},{"_id":"themes/hexo-theme-matery/source/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1635752746038},{"_id":"themes/hexo-theme-matery/source/css/matery.css","hash":"9145d60753fd59278a63fe865047e50aafe66c23","modified":1635752746040},{"_id":"themes/hexo-theme-matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1635752746041},{"_id":"themes/hexo-theme-matery/source/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1635752746040},{"_id":"themes/hexo-theme-matery/source/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1635752746045},{"_id":"themes/hexo-theme-matery/source/js/gallery-encrypt.js","hash":"f611a391d62da17b71f75577a72ad246ef6c5a71","modified":1635752746044},{"_id":"themes/hexo-theme-matery/source/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1635752746046},{"_id":"themes/hexo-theme-matery/source/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1635752746046},{"_id":"themes/hexo-theme-matery/source/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1635752746155},{"_id":"themes/hexo-theme-matery/source/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1635752746173},{"_id":"themes/hexo-theme-matery/source/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1635752746046},{"_id":"themes/hexo-theme-matery/source/medias/logo1.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1635752746209},{"_id":"themes/hexo-theme-matery/source/medias/logo.png","hash":"615ca880e23060b6d470a03e332ed317eadc8aa7","modified":1606824760531},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1635752746049},{"_id":"themes/hexo-theme-matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1635752746049},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1635752746049},{"_id":"themes/hexo-theme-matery/source/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1635752746049},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1635752746089},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1635752746089},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1635752746089},{"_id":"themes/hexo-theme-matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1635752746089},{"_id":"themes/hexo-theme-matery/source/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1635752746089},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1635752746104},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1635752746099},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/prism/prism.css","hash":"f1a273e896538fa4e11cb70acc5ec7e88d8b6c4c","modified":1635752746136},{"_id":"themes/hexo-theme-matery/source/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1635752746129},{"_id":"themes/hexo-theme-matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1635752746129},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1635752746129},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1635752746133},{"_id":"themes/hexo-theme-matery/source/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1635752746134},{"_id":"themes/hexo-theme-matery/source/libs/others/sakura.js","hash":"b6ebe8f040c84f067300996a5f377846f01605fa","modified":1635752746134},{"_id":"themes/hexo-theme-matery/source/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1635752746135},{"_id":"themes/hexo-theme-matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1635752746137},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1635752746145},{"_id":"themes/hexo-theme-matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1635752746146},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1635752746150},{"_id":"themes/hexo-theme-matery/source/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1635752746170},{"_id":"themes/hexo-theme-matery/source/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1635752746172},{"_id":"themes/hexo-theme-matery/source/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1635752746172},{"_id":"themes/hexo-theme-matery/source/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1635752746171},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1635752746179},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1635752746184},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1635752746187},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1635752746188},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1635752746193},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1635752746195},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1635752746195},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1635752746195},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/medias/reward/wechat.png","hash":"1ea8293198268e7c96e15d10222ec37670065883","modified":1635754115191},{"_id":"themes/hexo-theme-matery/source/medias/reward/alipay.png","hash":"1ea8293198268e7c96e15d10222ec37670065883","modified":1635754115191},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.eot","hash":"670fb01e4930ae46fe8d6d2b75ead288f54e8e61","modified":1635752746064},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.ttf","hash":"c34acd6818df6db6be41a2e331886765d601f2eb","modified":1635752746064},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff","hash":"3ad4f4e4b1fb3edee3d4ba25e6cdfed2f0b88a54","modified":1635752746064},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.woff2","hash":"13517529affa39e2585c591acae6dc336b6aa917","modified":1635752746069},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.min.css","hash":"a57ee68d11601b0fd8e5037fc241ff65a754473c","modified":1635752746054},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1635752746138},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1635752746140},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1635752746140},{"_id":"themes/hexo-theme-matery/source/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1635752746144},{"_id":"themes/hexo-theme-matery/source/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1635752746143},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1635752746141},{"_id":"themes/hexo-theme-matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1635752746142},{"_id":"themes/hexo-theme-matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1635752746089},{"_id":"themes/hexo-theme-matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1635752746104},{"_id":"themes/hexo-theme-matery/source/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1635752746109},{"_id":"themes/hexo-theme-matery/source/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1635752746152},{"_id":"themes/hexo-theme-matery/source/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1635752746158},{"_id":"themes/hexo-theme-matery/source/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1635752746161},{"_id":"themes/hexo-theme-matery/source/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1635752746163},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1635752746176},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1635752746178},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1635752746181},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1635752746182},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1635752746185},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1635752746189},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1635752746191},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1635752746192},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1635752746194},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1635752746199},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff","hash":"1e1f02bfa89e179fe2dd1383273b8812aa873418","modified":1635752746064},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.woff2","hash":"0613c7ebba55ee47ef302c0f7766324692f899a7","modified":1635752746064},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff","hash":"a22acd7697f36e7d4cc31a853c70e776eac54bb1","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.woff2","hash":"0ccb2c814a7e4ca12c4778821633809cb0361eaa","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/awesome/css/all.css","hash":"8a4a55db46c5dbfef9c6703fa2d04e89cbfcf633","modified":1635752746054},{"_id":"themes/hexo-theme-matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1635752746174},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1635752746119},{"_id":"themes/hexo-theme-matery/source/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1635752746154},{"_id":"themes/hexo-theme-matery/source/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1635752746159},{"_id":"themes/hexo-theme-matery/source/medias/banner/10.jpg","hash":"9d353854a7365e1722cd9979a10f2586c9982837","modified":1635753859533},{"_id":"themes/hexo-theme-matery/source/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1635752746167},{"_id":"themes/hexo-theme-matery/source/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1635752746169},{"_id":"themes/hexo-theme-matery/source/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1635752746209},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.eot","hash":"d1ffd6340cdbf72890ccb67f32015eafc5df51a7","modified":1635752746054},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.ttf","hash":"8ab907083fecaaa2a9ec93b27f884ad74573705c","modified":1635752746059},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-regular-400.svg","hash":"326e1d8f0b23f6df95cd6784fdf330bc6414ecd0","modified":1635752746064},{"_id":"themes/hexo-theme-matery/source/js/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1635752746043},{"_id":"themes/hexo-theme-matery/source/medias/banner/11.jpg","hash":"84a86ba35bccf1f22518ffeacac9bd530ac59372","modified":1635753831998},{"_id":"themes/hexo-theme-matery/source/medias/banner/8.jpg","hash":"66e697ca7cd2dc703d3387f26dc026a89c364276","modified":1635749559021},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.ttf","hash":"eb8914f6b1797b45ee0883e6089d92695d9f9441","modified":1635752746079},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.eot","hash":"ea845c59bee4a5c6db774b8d8060f5641b789ae9","modified":1635752746069},{"_id":"themes/hexo-theme-matery/source/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1635752746165},{"_id":"themes/hexo-theme-matery/source/medias/banner/9.jpg","hash":"85cf717c5e4123a2b1e49c825716b836b15c9640","modified":1635753846747},{"_id":"themes/hexo-theme-matery/source/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1635752746209},{"_id":"source/images/themes/top_img1.png","hash":"aa1223a391acd8d74bf0d06a69092b138bd2474c","modified":1635749257347},{"_id":"themes/hexo-theme-matery/source/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1635752746150},{"_id":"themes/hexo-theme-matery/source/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1635752746209},{"_id":"themes/hexo-theme-matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1635752746099},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-brands-400.svg","hash":"907bfbbe295332750575900984a00136de0f0e90","modified":1635752746059},{"_id":"themes/hexo-theme-matery/source/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1635752746104},{"_id":"themes/hexo-theme-matery/source/medias/banner/7.png","hash":"aa1223a391acd8d74bf0d06a69092b138bd2474c","modified":1635749257347},{"_id":"themes/hexo-theme-matery/source/libs/awesome/webfonts/fa-solid-900.svg","hash":"d92687d30fa0d43f9ae71009398507bf813a6875","modified":1635752746069},{"_id":"public/atom.xml","hash":"08ee79246d1eb68bb32787f3ff24396db0c9fae6","modified":1635837811293},{"_id":"public/search.xml","hash":"849a37ce39bd9c79671cbdc440f10ad41e5fe729","modified":1635837811293},{"_id":"public/contact/index.html","hash":"8b49b3651fc04cae1a221d266d2508159d7e520b","modified":1635837811293},{"_id":"public/about/index.html","hash":"5ca5d96670cb83959977c445874fb19badd8b9c7","modified":1635837811293},{"_id":"public/404/index.html","hash":"fbafd670a0d5bdbb5b08ceeed138b6c32f249a95","modified":1635837811293},{"_id":"public/friends/index.html","hash":"59e4880f55038b47a434ed6ab61f5bcddbed7598","modified":1635837811293},{"_id":"public/tags/index.html","hash":"4c6387857eb622cfaabf9cc6409311a065a8609a","modified":1635837811293},{"_id":"public/categories/index.html","hash":"30f12ff2bd81e0b649adaeeba09198403b4d422a","modified":1635837811293},{"_id":"public/2021/11/02/10.29EventLoop/index.html","hash":"bd0d2ea734c773c23f0955e59b50afc24690bded","modified":1635837811293},{"_id":"public/2021/11/02/npm机制/index.html","hash":"0a0b2d5746964a92d8a2da179388b71c60ac4f92","modified":1635837811293},{"_id":"public/2021/11/02/hello-world/index.html","hash":"39ef9fd26baeac433dd3249e201336086de1d6b3","modified":1635837811293},{"_id":"public/archives/index.html","hash":"efb813243928d82d525c6f146ed055df013aa52e","modified":1635837811293},{"_id":"public/2021/11/01/在浏览器中输入URl到页面加载发生了什么/index.html","hash":"e496e6e28bd24e574321590de6174c9d20048e4e","modified":1635837811293},{"_id":"public/archives/2021/index.html","hash":"9f020c981e6c099c471b9741b97cee2ed2e84ddf","modified":1635837811293},{"_id":"public/archives/2021/11/index.html","hash":"49e9ec2e966d1033c06459ed6cb7b470a30a1972","modified":1635837811293},{"_id":"public/categories/EventLoop/index.html","hash":"8d4d6af610197678d9cb7a3d86449d28cd36cdb2","modified":1635837811293},{"_id":"public/categories/Browser/index.html","hash":"f99e6e8203688596a2ff6bfc01a08a573945efa3","modified":1635837811293},{"_id":"public/categories/npm/index.html","hash":"db39d9c4fba6ffb71e95f9dd3b45a73251b77337","modified":1635837811293},{"_id":"public/tags/promise/index.html","hash":"e3cd59474fb498ddb7dad8997f8706eecac8daf1","modified":1635837811293},{"_id":"public/tags/async/index.html","hash":"a6a818669a375bb2dcf9ca2c9427293b092bec3e","modified":1635837811293},{"_id":"public/index.html","hash":"7185a1bb0075bd4a60297b507856eade03042ba8","modified":1635837811293},{"_id":"public/tags/setTimeout/index.html","hash":"ccc30e46fe937e2bdf63d27c7472cbeeec7f43f9","modified":1635837811293},{"_id":"public/tags/synchronous/index.html","hash":"9cc503caef01c79aa8fe5996158802fe7cfdb0d2","modified":1635837811293},{"_id":"public/tags/asynchronous/index.html","hash":"7413078b630e4afc0b9fba6b595f11c62966b474","modified":1635837811293},{"_id":"public/tags/DNS/index.html","hash":"d3342db13f2851e05207c9abe0ee49d7e7995932","modified":1635837811293},{"_id":"public/tags/HTTP/index.html","hash":"881b55751457e102894b0c3b9203fc0a5279c28f","modified":1635837811293},{"_id":"public/tags/TCP/index.html","hash":"dfbc3285ad907a8c623983081c839973560a05b5","modified":1635837811293},{"_id":"public/tags/URL/index.html","hash":"5d8188ac01df07d2abc81abeacc6ca39e2f19b06","modified":1635837811293},{"_id":"public/tags/npm/index.html","hash":"eec1a1af17c14ca25968cd55da0434c5d48c8ece","modified":1635837811293},{"_id":"public/tags/node/index.html","hash":"e10700413be69917bc2c9dacb5d78499b1b508c2","modified":1635837811293},{"_id":"public/tags/dependencies/index.html","hash":"2302732f1f57ab6520a6ee4345779d394fe1493f","modified":1635837811293},{"_id":"public/tags/script/index.html","hash":"fd5491a1039f024cb4adb0b67986ce2b44588e12","modified":1635837811293},{"_id":"public/favicon.ico","hash":"cc47a2cce0ba273b3fa6a1a820fa26cc80b11df4","modified":1635837811293},{"_id":"public/favicon.png","hash":"774fee8c6d0be9dbb010b20f36c06848d06e3da0","modified":1635837811293},{"_id":"public/medias/avatar.jpg","hash":"2a6287308628881ce27b9a7de53ba15c2be00d02","modified":1635837811293},{"_id":"public/medias/comment_bg.png","hash":"dfc93d24081884fbc58cab0f8fd19e77d31d6123","modified":1635837811293},{"_id":"public/medias/icp.png","hash":"27a96f31f7d0413c6ade6f40e06f021f501151c7","modified":1635837811293},{"_id":"public/medias/logo1.png","hash":"d9095f5ea8719374d9d1ff020279426f5b2a1396","modified":1635837811293},{"_id":"public/medias/logo.png","hash":"615ca880e23060b6d470a03e332ed317eadc8aa7","modified":1635837811293},{"_id":"public/libs/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1635837811293},{"_id":"public/medias/barrager/0.png","hash":"b30416fd3b3aec5af3fa90823a7e2e9c0af4cda8","modified":1635837811293},{"_id":"public/medias/barrager/close.png","hash":"045346df61ee01abe5018c5d9ba805d2831ce7b1","modified":1635837811293},{"_id":"public/medias/barrager/2.png","hash":"52b2b13373fe611ad2327b9b40426d6dc05b69cd","modified":1635837811293},{"_id":"public/medias/barrager/1.png","hash":"b8c211690dba3addedfe7b928e3936cd487df0d6","modified":1635837811293},{"_id":"public/medias/featureimages/10.jpg","hash":"98e7f6fd9c97d4de9044b6871ca08ebf14db11b9","modified":1635837811293},{"_id":"public/medias/featureimages/13.jpg","hash":"35a320174f8e316e3eadaec658024276b651c6e9","modified":1635837811293},{"_id":"public/medias/featureimages/15.jpg","hash":"da0fbee3b7bde1607eace377ddf834c0be99edfe","modified":1635837811293},{"_id":"public/medias/featureimages/16.jpg","hash":"97a829c4bc94f9d2929b20a1a9b798c57b9f7205","modified":1635837811293},{"_id":"public/medias/featureimages/2.jpg","hash":"4bba691cf71a517ecaeaf42afd3e8f8b31e346c1","modified":1635837811293},{"_id":"public/medias/featureimages/21.jpg","hash":"b26edb128bb0bf58b23fd2f014e9555e89a2ca3b","modified":1635837811293},{"_id":"public/medias/featureimages/22.jpg","hash":"754579747a3e99747d890fca3162f370b96a7941","modified":1635837811293},{"_id":"public/medias/featureimages/23.jpg","hash":"7d7f37da3fa7128343adac23866449eb2c6a549a","modified":1635837811293},{"_id":"public/medias/featureimages/3.jpg","hash":"6ec646c2a70f5f11edacf225c1477f2200a37a96","modified":1635837811293},{"_id":"public/medias/featureimages/5.jpg","hash":"41ca20129a37fedc573eec28dd7d7b9e5b09228a","modified":1635837811293},{"_id":"public/medias/featureimages/7.jpg","hash":"7975141cd64e875122c0ea33daaca1a06bf00b8e","modified":1635837811293},{"_id":"public/medias/featureimages/8.jpg","hash":"8e4b7186352085483ca1174c7c0800114c48df8b","modified":1635837811293},{"_id":"public/medias/reward/wechat.png","hash":"1ea8293198268e7c96e15d10222ec37670065883","modified":1635837811293},{"_id":"public/medias/reward/alipay.png","hash":"1ea8293198268e7c96e15d10222ec37670065883","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-regular-400.eot","hash":"670fb01e4930ae46fe8d6d2b75ead288f54e8e61","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff","hash":"3ad4f4e4b1fb3edee3d4ba25e6cdfed2f0b88a54","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-regular-400.ttf","hash":"c34acd6818df6db6be41a2e331886765d601f2eb","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-regular-400.woff2","hash":"13517529affa39e2585c591acae6dc336b6aa917","modified":1635837811293},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1635837811293},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1635837811293},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1635837811293},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9c6632aeec67d3e84a1434884aa801514ff8103b","modified":1635837811293},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"2962e03ddbe04d7e201a5acccac531a2bbccddfc","modified":1635837811293},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1635837811293},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"9b72fc0f86a01467ed0b68c9cc4d604ec316d517","modified":1635837811293},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1635837811293},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"f8d11384d33b7a79ee2ba8d522844f14d5067a80","modified":1635837811293},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1635837811293},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"1d56c9d5db0273f07c43cc1397e440f98ba7827a","modified":1635837811293},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1635837811293},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1635837811293},{"_id":"public/images/dns.jpg","hash":"3844e7fab11de51890e67297c9017cfbd58727af","modified":1635837811293},{"_id":"public/medias/banner/0.jpg","hash":"69ec96cd9b4bc3aa631adc9da61353f50c39f031","modified":1635837811293},{"_id":"public/medias/banner/2.jpg","hash":"39fb2535460ce66cc0b34e07ffb9411db1405f09","modified":1635837811293},{"_id":"public/medias/banner/3.jpg","hash":"4ac047e92d0363b1a61ab756aca6dac13fb77494","modified":1635837811293},{"_id":"public/medias/featureimages/0.jpg","hash":"1c3300f029fc85d6dda6fa4f1d699551034cdaf7","modified":1635837811293},{"_id":"public/medias/featureimages/11.jpg","hash":"f55972ce7175684f2b11c3c9fc2b5b14bccbfae8","modified":1635837811293},{"_id":"public/medias/featureimages/12.jpg","hash":"8a4b2e7d92ae95c3b0c921db23c35aa9a41a7d58","modified":1635837811293},{"_id":"public/medias/featureimages/1.jpg","hash":"684ae89de8cb7acefae19f5aee6c612037c46393","modified":1635837811293},{"_id":"public/medias/featureimages/14.jpg","hash":"38e11221406785bcd93aa9cd23e568e164630ef1","modified":1635837811293},{"_id":"public/medias/featureimages/18.jpg","hash":"64829272ec85bb819d55ff89e5b5fd6f64aa436b","modified":1635837811293},{"_id":"public/medias/featureimages/17.jpg","hash":"42d47903551ee81885c1386022982cae165841c5","modified":1635837811293},{"_id":"public/medias/featureimages/19.jpg","hash":"eb250906fdbc0c408f42ae9933725bc1a05d79fb","modified":1635837811293},{"_id":"public/medias/featureimages/20.jpg","hash":"3b11f9b461168d907073f793190865fe621a8573","modified":1635837811293},{"_id":"public/medias/featureimages/4.jpg","hash":"e06c47de27619984be9d5d02947f8370a432dfea","modified":1635837811293},{"_id":"public/medias/featureimages/6.jpg","hash":"c8f2aa4bbb041158b4e73733a341e6a77c8583f7","modified":1635837811293},{"_id":"public/medias/featureimages/9.jpg","hash":"b956a2291a04b2132366b53666cf34858b8bdb1f","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff","hash":"1e1f02bfa89e179fe2dd1383273b8812aa873418","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-brands-400.woff2","hash":"0613c7ebba55ee47ef302c0f7766324692f899a7","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff2","hash":"0ccb2c814a7e4ca12c4778821633809cb0361eaa","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-solid-900.woff","hash":"a22acd7697f36e7d4cc31a853c70e776eac54bb1","modified":1635837811293},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1635837811293},{"_id":"public/css/bb.css","hash":"aa15633888c7cf9baea8bb48d796c68b57cf14bf","modified":1635837811293},{"_id":"public/css/gallery.css","hash":"79dfdf68d675c17782271647283c568d086e4b98","modified":1635837811293},{"_id":"public/css/barrager.css","hash":"862879d9313ed8d4c721fa32ef8f94ac2f0a28ae","modified":1635837811293},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1635837811293},{"_id":"public/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1635837811293},{"_id":"public/css/my-gitalk.css","hash":"af18dd29e58642c18bab9b89541767b494c468dd","modified":1635837811293},{"_id":"public/js/gallery-encrypt.js","hash":"18dcfa4a8da8847b64be75f287f45c0e830bbcab","modified":1635837811293},{"_id":"public/js/matery.js","hash":"b86de5fe3e9766b7ff80df12ea41c3a9e30825f7","modified":1635837811293},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1635837811293},{"_id":"public/js/jquery.barrager.js","hash":"19c8b2498ca1083e537f7f443172970912107f83","modified":1635837811293},{"_id":"public/libs/background/canvas-nest.js","hash":"65333d0dbb9c1173a1b13031b230161fc42c8b2f","modified":1635837811293},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1635837811293},{"_id":"public/libs/background/ribbon-refresh.min.js","hash":"6d98692b2cad8c746a562db18b170b35c24402f4","modified":1635837811293},{"_id":"public/libs/background/ribbon-dynamic.js","hash":"052b80c29e6bc585aa28d4504b743bdbac220a88","modified":1635837811293},{"_id":"public/js/search.js","hash":"5caa2d6e3d34c334ac68dfaafc81a583d6123382","modified":1635837811293},{"_id":"public/libs/codeBlock/codeLang.js","hash":"bac88b4d4e3679732d29bd037c34f089cf27cf05","modified":1635837811293},{"_id":"public/libs/background/ribbon.min.js","hash":"6a99d494c030388f96f6086a7aaa0f03f3fe532e","modified":1635837811293},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1635837811293},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"6d39a766af62e625f177c4d5cf3adc35eed71e61","modified":1635837811293},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"201e8cd761b4be557247bdaf1ebc7c11c83194f6","modified":1635837811293},{"_id":"public/libs/instantpage/instantpage.js","hash":"83ce8919b1a69b2f1809ffaf99b52a8627e650e9","modified":1635837811293},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1635837811293},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1635837811293},{"_id":"public/libs/prism/prism.css","hash":"f1a273e896538fa4e11cb70acc5ec7e88d8b6c4c","modified":1635837811293},{"_id":"public/libs/minivaline/MiniValine.js","hash":"f7f6cdc1b22297e02334e304444e9a8351acb455","modified":1635837811293},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1635837811293},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1635837811293},{"_id":"public/libs/others/star.js","hash":"cf32f8ce2a1a51ba65d3b6063fe2ee1482550190","modified":1635837811293},{"_id":"public/libs/others/snow.js","hash":"02b1eeaca737c47be637b304feb3d36d792ee0c4","modified":1635837811293},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1635837811293},{"_id":"public/libs/tocbot/tocbot.css","hash":"9ab8ef576c9a57115194152e79cca79b0a41dd70","modified":1635837811293},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1635837811293},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1635837811293},{"_id":"public/css/matery.css","hash":"9145d60753fd59278a63fe865047e50aafe66c23","modified":1635837811293},{"_id":"public/js/crypto-js.js","hash":"3dd73b6f13dc818a3a9c5c7424c1c4a9649b00a2","modified":1635837811293},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1635837811293},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1635837811293},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1635837811293},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1635837811293},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1635837811293},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1635837811293},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1635837811293},{"_id":"public/libs/gitalk/gitalk.css","hash":"61d71cb30f5f34cbb1f2b5bc469784d6cb908c22","modified":1635837811293},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1635837811293},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"d20252cf76c3be8af37a8415d13ad368c762b4d8","modified":1635837811293},{"_id":"public/libs/jquery/jquery.min.js","hash":"2115753ca5fb7032aec498db7bb5dca624dbe6be","modified":1635837811293},{"_id":"public/libs/materialize/materialize.min.css","hash":"a69d456e3345e7f59cd0d47d1b3e70fd4a496a05","modified":1635837811293},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1635837811293},{"_id":"public/libs/others/sakura-half.js","hash":"a41b64af88fdd0e2d3502752d059661c1bc743dc","modified":1635837811293},{"_id":"public/libs/others/sakura-small.js","hash":"3284a9ab71454e574d80663f3a05735cd12a6a05","modified":1635837811293},{"_id":"public/libs/others/sakura-reduce.js","hash":"f7527e9fb4e6fe2cc7c8880692d77bcda95900c7","modified":1635837811293},{"_id":"public/libs/others/sakura.js","hash":"9e196ab241799126e6a2dd23ee1708b1505ccbf0","modified":1635837811293},{"_id":"public/libs/valine/Valine.min.js","hash":"6cbdbf91e1f046dd41267a5ff0691a1fccba99df","modified":1635837811293},{"_id":"public/libs/valine/av-min.js","hash":"541efb9edc1ce425cbe3897cfc25803211fe6a05","modified":1635837811293},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1635837811293},{"_id":"public/libs/awesome/css/all.css","hash":"8a4a55db46c5dbfef9c6703fa2d04e89cbfcf633","modified":1635837811293},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1635837811293},{"_id":"public/libs/awesome/css/all.min.css","hash":"a57ee68d11601b0fd8e5037fc241ff65a754473c","modified":1635837811293},{"_id":"public/libs/share/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1635837811293},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"41367dcb857e02e3c417ebe68a554ce1d4430806","modified":1635837811293},{"_id":"public/libs/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1635837811293},{"_id":"public/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1635837811293},{"_id":"public/medias/banner/1.jpg","hash":"ab122a36998a4f62a61e61a4fc5e00248113413b","modified":1635837811293},{"_id":"public/medias/banner/10.jpg","hash":"9d353854a7365e1722cd9979a10f2586c9982837","modified":1635837811293},{"_id":"public/medias/banner/5.jpg","hash":"852418f4f09e796e12bc3bab7a1488d3f37d6486","modified":1635837811293},{"_id":"public/medias/banner/6.jpg","hash":"ed7282cc129c4ff9f322d2f2897fb4aac5c48589","modified":1635837811293},{"_id":"public/medias/images/02.jpg","hash":"a5b656606811f4d7e10307f48c0e3c373e0b886d","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-brands-400.ttf","hash":"8ab907083fecaaa2a9ec93b27f884ad74573705c","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-brands-400.eot","hash":"d1ffd6340cdbf72890ccb67f32015eafc5df51a7","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-regular-400.svg","hash":"326e1d8f0b23f6df95cd6784fdf330bc6414ecd0","modified":1635837811293},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1635837811293},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"564fc7c731d05fa70d71ef853a2c8cc7725739e2","modified":1635837811293},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1635837811293},{"_id":"public/images/themes/top_img.jpg","hash":"66e697ca7cd2dc703d3387f26dc026a89c364276","modified":1635837811293},{"_id":"public/medias/banner/11.jpg","hash":"84a86ba35bccf1f22518ffeacac9bd530ac59372","modified":1635837811293},{"_id":"public/medias/banner/8.jpg","hash":"66e697ca7cd2dc703d3387f26dc026a89c364276","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-solid-900.eot","hash":"ea845c59bee4a5c6db774b8d8060f5641b789ae9","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-solid-900.ttf","hash":"eb8914f6b1797b45ee0883e6089d92695d9f9441","modified":1635837811293},{"_id":"public/medias/banner/4.jpg","hash":"e5ac5033678afa9d69edffe9a61004f836cb5734","modified":1635837811293},{"_id":"public/medias/banner/9.jpg","hash":"85cf717c5e4123a2b1e49c825716b836b15c9640","modified":1635837811293},{"_id":"public/medias/images/03.jpg","hash":"2bd3815508a9f5b0ae79aa780bc02ac80b2a354e","modified":1635837811293},{"_id":"public/medias/images/01.jpg","hash":"6a81f437fb876666bafaa98b2a09bd8bd7f21832","modified":1635837811293},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-brands-400.svg","hash":"907bfbbe295332750575900984a00136de0f0e90","modified":1635837811293},{"_id":"public/images/themes/top_img1.png","hash":"aa1223a391acd8d74bf0d06a69092b138bd2474c","modified":1635837811293},{"_id":"public/medias/banner/7.png","hash":"aa1223a391acd8d74bf0d06a69092b138bd2474c","modified":1635837811293},{"_id":"public/libs/awesome/webfonts/fa-solid-900.svg","hash":"d92687d30fa0d43f9ae71009398507bf813a6875","modified":1635837811293}],"Category":[{"name":"EventLoop","_id":"ckvhrljlp00045su4dq9v69b3"},{"name":"Browser","_id":"ckvhrljlx000b5su4arqn4qro"},{"name":"npm","_id":"ckvhrljlz000f5su400m5fjxd"}],"Data":[{"_id":"friends","data":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}],"Page":[{"title":"contact","date":"2021-11-01T07:47:42.000Z","type":"contact","layout":"contact","_content":"","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2021-11-01 15:47:42\ntype: \"contact\"\nlayout: \"contact\"\n---\n","updated":"2021-11-02T02:28:29.790Z","path":"contact/index.html","comments":1,"_id":"ckvhrljlf00005su4cxrd4np4","content":"","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"about","date":"2021-11-01T07:47:32.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-11-01 15:47:32\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2021-11-02T02:28:08.558Z","path":"about/index.html","comments":1,"_id":"ckvhrljlm00025su41bc1dye8","content":"","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"404","date":"2021-11-01T07:48:31.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2021-11-01 15:48:31\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---\n","updated":"2021-11-02T02:28:03.377Z","path":"404/index.html","comments":1,"_id":"ckvhrljls00065su4f8y9221a","content":"","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"friends","date":"2021-11-01T07:47:47.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2021-11-01 15:47:47\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2021-11-02T02:28:35.056Z","path":"friends/index.html","comments":1,"_id":"ckvhrljlv00085su4fvcz2cdm","content":"","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"categories","date":"2021-11-01T07:46:52.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-11-01 15:46:52\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2021-11-02T02:28:13.355Z","path":"categories/index.html","comments":1,"_id":"ckvhrljlx000a5su49yrye1li","content":"","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":""},{"title":"tags","date":"2021-11-01T07:47:24.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-11-01 15:47:24\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2021-11-02T02:28:44.964Z","path":"tags/index.html","comments":1,"_id":"ckvhrljly000d5su49a3vd716","content":"","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":""}],"Post":[{"title":"事件机制","date":"2021-11-02T06:37:02.000Z","author":"dingpenxin","img":null,"top":false,"hide":false,"cover":false,"coverImg":null,"password":null,"toc":false,"mathjax":false,"summary":true,"_content":"\n## 仅代表个人理解\n\n- promise、async、setTimeout 执行顺序\n- 理解Event Loop（事件循环）\n\n<details>\n<summary>Event Loop（事件循环）</summary>\n<blockquote>\n <details>\n <summary>需要了解的一些点</summary>\n\n- 首先是js运行机制是什么？  \n\n  - JavaScript语言是单线程的，同一个时间只能做一件事；\n  - 遵循事件循环机制，当JS解析执行时，会被引擎分为两类任务，同步任务（synchronous） 和 异步任务（asynchronous）。对于同步任务来说，会被推到执行栈按顺序去执行这些任务。对于异步任务来说，当其可以被执行时，会被放到一个 任务队列（task queue） 里等待JS引擎去执行。当执行栈中的所有同步任务完成后，JS引擎才会去任务队列里查看是否有任务存在，并将任务放到执行栈中去执行，执行完了又会去任务队列里查看是否有已经可以执行的任务。这种循环检查的机制，就叫做事件循环(Event Loop)。对于任务队列，其实是有更细的分类。其被分为 微任务（microtask）队列 & 宏任务（macrotask）队列。\n  - **总结：同步任务是同步任务，异步任务分（微任务、宏任务）**\n\n- 任务队列是什么？\n\n  - 单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。\n  - 所有任务可以分成两种，一种是**同步任务（synchronous）**，另一种是**异步任务（asynchronous）**。同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；异步任务指的是，不进入主线程、而进入\"任务队列\"（task queue）的任务，只有\"任务队列\"通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。\n  - 异步任务可以分为（微任务、宏任务），微任务优先级高于宏任务。\n  - 异步执行的运行机制如下：\n    > （1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。\n\n    >（2）主线程之外，还存在一个\"任务队列\"（task queue）。只要异步任务有了运行结果，就在\"任务队列\"之中放置一个事件。\n\n    >（3）一旦\"执行栈\"中的所有同步任务执行完毕，系统就会读取\"任务队列\"，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。\n\n    >（4）主线程不断重复上面的第三步。\n\n\n![ \"eventloop\" ](https://pic1.zhimg.com/80/v2-59a1cbab9a259817f728849d60ede6ac_720w.jpg)\n\n\n- **宏任务**包括：script(整体代码)，I/O， setTimeout，setInterval，requestAnimationFrame，setImmediate。其中setImmediate只存在于Node中，requestAnimationFrame只存在于浏览器中。\n- **微任务**包括：Promise，Object.observe(已废弃)，MutationObserver(html5新特性)，process.nextTick。其中process.nextTick只存在于Node中，MutationObserver只存在于浏览器中。\n\n![图片](https://img-blog.csdnimg.cn/2020120520201083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxOTY3OTg1,size_16,color_FFFFFF,t_70)\n\n### 完整关系\n\n![图片](image.png)\n</details>\n</blockquote>\n</details>\n\n  <details>\n   <summary>问题？</summary>\n\n   ```js\n// -------------\n<script>\n  console.log(1);\n  setTimeout(() => {\n  console.log(2)\n}, 0);\n  new Promise((resolve) => {\n  console.log(3)\n  resolve();\n}).then(() => {\n  console.log(4)\n});\n  function delay(time) {\n  new Promise((resolve) => {\n    console.log(6);\n    setTimeout(resolve, time);\n  }).then(()=>{\n    console.log(15)\n  })\n}\n  (async function aa() {\n  console.log(12)\n  await delay(2000);\n  console.log(14);\n})();\n  console.log(5);\n  // 1 3 12 6 5 4 14 2 15\n  \n  \n</script>\n   ```\n\n</details>\n\n\n- 了解Promise\n\n> Promise是异步编程的一种解决方案，其实是一个构造函数，自己身上有all、reject、resolve这几个方法，原型上有then、catch等方法。\n- Promise运行顺序总结\n    - promise的构造函数是同步执行，promise.then中的函数是异步执行。\n    - 构造函数中的 resolve 或 reject 只有第一次执行有效，多次调用没有任何作用。promise状态一旦改变则不能再变。\n    - promise 的 .then 或者 .catch 可以被调用多次，但这里 Promise 构造函数只执行一次。或者说 promise 内部状态一经改变，并且有了一个值，那么后续每次调用 .then 或者 .catch 都会直接拿到该值。\n    - 如果在一个then（）中没有返回一个新的promise，则 return 什么下一个then就接受什么，如果then中没有return，则默认return的是 undefined.\n    - then()的嵌套会先将内部的then()执行完毕再继续执行外部的then();\n    - catch和then的连用，如果每一步都有可能出现错误，那么就可能出现catch后面接上then的情况。如果在catch中也抛出了错误，则后面的then的第一个函数不会执行，因为返回的 promise状态已经为rejected了\n\n\n\n\n\n### 注意\n\n**浏览器和Node环境下，microtask 任务队列的执行时机不同：Node 端，microtask 在事件循环的各个阶段之间执行；浏览器端，microtask 在事件循环的 macrotask 执行完之后执行；**\n\n","source":"_posts/10.29EventLoop.md","raw":"---\ntitle: 事件机制\ndate: 2021-11-02 14:37:02\nauthor: dingpenxin\nimg: \ntop: false\nhide: false\ncover: false\ncoverImg: \npassword: \ntoc: false\nmathjax: false\nsummary: true\ncategories: EventLoop\ntags:\n  - promise\n  - async\n  - setTimeout\n  - synchronous\n  - asynchronous\n---\n\n## 仅代表个人理解\n\n- promise、async、setTimeout 执行顺序\n- 理解Event Loop（事件循环）\n\n<details>\n<summary>Event Loop（事件循环）</summary>\n<blockquote>\n <details>\n <summary>需要了解的一些点</summary>\n\n- 首先是js运行机制是什么？  \n\n  - JavaScript语言是单线程的，同一个时间只能做一件事；\n  - 遵循事件循环机制，当JS解析执行时，会被引擎分为两类任务，同步任务（synchronous） 和 异步任务（asynchronous）。对于同步任务来说，会被推到执行栈按顺序去执行这些任务。对于异步任务来说，当其可以被执行时，会被放到一个 任务队列（task queue） 里等待JS引擎去执行。当执行栈中的所有同步任务完成后，JS引擎才会去任务队列里查看是否有任务存在，并将任务放到执行栈中去执行，执行完了又会去任务队列里查看是否有已经可以执行的任务。这种循环检查的机制，就叫做事件循环(Event Loop)。对于任务队列，其实是有更细的分类。其被分为 微任务（microtask）队列 & 宏任务（macrotask）队列。\n  - **总结：同步任务是同步任务，异步任务分（微任务、宏任务）**\n\n- 任务队列是什么？\n\n  - 单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。\n  - 所有任务可以分成两种，一种是**同步任务（synchronous）**，另一种是**异步任务（asynchronous）**。同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；异步任务指的是，不进入主线程、而进入\"任务队列\"（task queue）的任务，只有\"任务队列\"通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。\n  - 异步任务可以分为（微任务、宏任务），微任务优先级高于宏任务。\n  - 异步执行的运行机制如下：\n    > （1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。\n\n    >（2）主线程之外，还存在一个\"任务队列\"（task queue）。只要异步任务有了运行结果，就在\"任务队列\"之中放置一个事件。\n\n    >（3）一旦\"执行栈\"中的所有同步任务执行完毕，系统就会读取\"任务队列\"，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。\n\n    >（4）主线程不断重复上面的第三步。\n\n\n![ \"eventloop\" ](https://pic1.zhimg.com/80/v2-59a1cbab9a259817f728849d60ede6ac_720w.jpg)\n\n\n- **宏任务**包括：script(整体代码)，I/O， setTimeout，setInterval，requestAnimationFrame，setImmediate。其中setImmediate只存在于Node中，requestAnimationFrame只存在于浏览器中。\n- **微任务**包括：Promise，Object.observe(已废弃)，MutationObserver(html5新特性)，process.nextTick。其中process.nextTick只存在于Node中，MutationObserver只存在于浏览器中。\n\n![图片](https://img-blog.csdnimg.cn/2020120520201083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxOTY3OTg1,size_16,color_FFFFFF,t_70)\n\n### 完整关系\n\n![图片](image.png)\n</details>\n</blockquote>\n</details>\n\n  <details>\n   <summary>问题？</summary>\n\n   ```js\n// -------------\n<script>\n  console.log(1);\n  setTimeout(() => {\n  console.log(2)\n}, 0);\n  new Promise((resolve) => {\n  console.log(3)\n  resolve();\n}).then(() => {\n  console.log(4)\n});\n  function delay(time) {\n  new Promise((resolve) => {\n    console.log(6);\n    setTimeout(resolve, time);\n  }).then(()=>{\n    console.log(15)\n  })\n}\n  (async function aa() {\n  console.log(12)\n  await delay(2000);\n  console.log(14);\n})();\n  console.log(5);\n  // 1 3 12 6 5 4 14 2 15\n  \n  \n</script>\n   ```\n\n</details>\n\n\n- 了解Promise\n\n> Promise是异步编程的一种解决方案，其实是一个构造函数，自己身上有all、reject、resolve这几个方法，原型上有then、catch等方法。\n- Promise运行顺序总结\n    - promise的构造函数是同步执行，promise.then中的函数是异步执行。\n    - 构造函数中的 resolve 或 reject 只有第一次执行有效，多次调用没有任何作用。promise状态一旦改变则不能再变。\n    - promise 的 .then 或者 .catch 可以被调用多次，但这里 Promise 构造函数只执行一次。或者说 promise 内部状态一经改变，并且有了一个值，那么后续每次调用 .then 或者 .catch 都会直接拿到该值。\n    - 如果在一个then（）中没有返回一个新的promise，则 return 什么下一个then就接受什么，如果then中没有return，则默认return的是 undefined.\n    - then()的嵌套会先将内部的then()执行完毕再继续执行外部的then();\n    - catch和then的连用，如果每一步都有可能出现错误，那么就可能出现catch后面接上then的情况。如果在catch中也抛出了错误，则后面的then的第一个函数不会执行，因为返回的 promise状态已经为rejected了\n\n\n\n\n\n### 注意\n\n**浏览器和Node环境下，microtask 任务队列的执行时机不同：Node 端，microtask 在事件循环的各个阶段之间执行；浏览器端，microtask 在事件循环的 macrotask 执行完之后执行；**\n\n","slug":"10.29EventLoop","published":1,"updated":"2021-11-02T07:05:16.994Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvhrljli00015su47o4nab5w","content":"<h2 id=\"仅代表个人理解\"><a href=\"#仅代表个人理解\" class=\"headerlink\" title=\"仅代表个人理解\"></a>仅代表个人理解</h2><ul>\n<li>promise、async、setTimeout 执行顺序</li>\n<li>理解Event Loop（事件循环）</li>\n</ul>\n<details>\n<summary>Event Loop（事件循环）</summary>\n<blockquote>\n <details>\n <summary>需要了解的一些点</summary>\n\n<ul>\n<li><p>首先是js运行机制是什么？  </p>\n<ul>\n<li>JavaScript语言是单线程的，同一个时间只能做一件事；</li>\n<li>遵循事件循环机制，当JS解析执行时，会被引擎分为两类任务，同步任务（synchronous） 和 异步任务（asynchronous）。对于同步任务来说，会被推到执行栈按顺序去执行这些任务。对于异步任务来说，当其可以被执行时，会被放到一个 任务队列（task queue） 里等待JS引擎去执行。当执行栈中的所有同步任务完成后，JS引擎才会去任务队列里查看是否有任务存在，并将任务放到执行栈中去执行，执行完了又会去任务队列里查看是否有已经可以执行的任务。这种循环检查的机制，就叫做事件循环(Event Loop)。对于任务队列，其实是有更细的分类。其被分为 微任务（microtask）队列 &amp; 宏任务（macrotask）队列。</li>\n<li><strong>总结：同步任务是同步任务，异步任务分（微任务、宏任务）</strong></li>\n</ul>\n</li>\n<li><p>任务队列是什么？</p>\n<ul>\n<li><p>单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。</p>\n</li>\n<li><p>所有任务可以分成两种，一种是<strong>同步任务（synchronous）</strong>，另一种是<strong>异步任务（asynchronous）</strong>。同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；异步任务指的是，不进入主线程、而进入”任务队列”（task queue）的任务，只有”任务队列”通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。</p>\n</li>\n<li><p>异步任务可以分为（微任务、宏任务），微任务优先级高于宏任务。</p>\n</li>\n<li><p>异步执行的运行机制如下：</p>\n<blockquote>\n<p>（1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。</p>\n</blockquote>\n<blockquote>\n<p>（2）主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件。</p>\n</blockquote>\n<blockquote>\n<p>（3）一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。</p>\n</blockquote>\n<blockquote>\n<p>（4）主线程不断重复上面的第三步。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/80/v2-59a1cbab9a259817f728849d60ede6ac_720w.jpg\" alt=\" &quot;eventloop&quot; \"></p>\n<ul>\n<li><strong>宏任务</strong>包括：script(整体代码)，I/O， setTimeout，setInterval，requestAnimationFrame，setImmediate。其中setImmediate只存在于Node中，requestAnimationFrame只存在于浏览器中。</li>\n<li><strong>微任务</strong>包括：Promise，Object.observe(已废弃)，MutationObserver(html5新特性)，process.nextTick。其中process.nextTick只存在于Node中，MutationObserver只存在于浏览器中。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/2020120520201083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxOTY3OTg1,size_16,color_FFFFFF,t_70\" alt=\"图片\"></p>\n<h3 id=\"完整关系\"><a href=\"#完整关系\" class=\"headerlink\" title=\"完整关系\"></a>完整关系</h3><p><img src=\"image.png\" alt=\"图片\"></p>\n</details>\n</blockquote>\n</details>\n\n  <details>\n   <summary>问题？</summary>\n\n   <figure class=\"highlight js\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// -------------</span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>)</span><br><span class=\"line\">}, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>)</span><br><span class=\"line\">  resolve();</span><br><span class=\"line\">}).then(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>)</span><br><span class=\"line\">});</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delay</span>(<span class=\"params\">time</span>) </span>{</span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(resolve, time);</span><br><span class=\"line\">  }).then(<span class=\"function\">()=&gt;</span>{</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">15</span>)</span><br><span class=\"line\">  })</span><br><span class=\"line\">}</span><br><span class=\"line\">  (<span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">aa</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">12</span>)</span><br><span class=\"line\">  <span class=\"keyword\">await</span> delay(<span class=\"number\">2000</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">14</span>);</span><br><span class=\"line\">})();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 1 3 12 6 5 4 14 2 15</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure>\n\n</details>\n\n\n<ul>\n<li>了解Promise</li>\n</ul>\n<blockquote>\n<p>Promise是异步编程的一种解决方案，其实是一个构造函数，自己身上有all、reject、resolve这几个方法，原型上有then、catch等方法。</p>\n</blockquote>\n<ul>\n<li>Promise运行顺序总结<ul>\n<li>promise的构造函数是同步执行，promise.then中的函数是异步执行。</li>\n<li>构造函数中的 resolve 或 reject 只有第一次执行有效，多次调用没有任何作用。promise状态一旦改变则不能再变。</li>\n<li>promise 的 .then 或者 .catch 可以被调用多次，但这里 Promise 构造函数只执行一次。或者说 promise 内部状态一经改变，并且有了一个值，那么后续每次调用 .then 或者 .catch 都会直接拿到该值。</li>\n<li>如果在一个then（）中没有返回一个新的promise，则 return 什么下一个then就接受什么，如果then中没有return，则默认return的是 undefined.</li>\n<li>then()的嵌套会先将内部的then()执行完毕再继续执行外部的then();</li>\n<li>catch和then的连用，如果每一步都有可能出现错误，那么就可能出现catch后面接上then的情况。如果在catch中也抛出了错误，则后面的then的第一个函数不会执行，因为返回的 promise状态已经为rejected了</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p><strong>浏览器和Node环境下，microtask 任务队列的执行时机不同：Node 端，microtask 在事件循环的各个阶段之间执行；浏览器端，microtask 在事件循环的 macrotask 执行完之后执行；</strong></p>\n","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"仅代表个人理解\"><a href=\"#仅代表个人理解\" class=\"headerlink\" title=\"仅代表个人理解\"></a>仅代表个人理解</h2><ul>\n<li>promise、async、setTimeout 执行顺序</li>\n<li>理解Event Loop（事件循环）</li>\n</ul>\n<details>\n<summary>Event Loop（事件循环）</summary>\n<blockquote>\n <details>\n <summary>需要了解的一些点</summary>\n\n<ul>\n<li><p>首先是js运行机制是什么？  </p>\n<ul>\n<li>JavaScript语言是单线程的，同一个时间只能做一件事；</li>\n<li>遵循事件循环机制，当JS解析执行时，会被引擎分为两类任务，同步任务（synchronous） 和 异步任务（asynchronous）。对于同步任务来说，会被推到执行栈按顺序去执行这些任务。对于异步任务来说，当其可以被执行时，会被放到一个 任务队列（task queue） 里等待JS引擎去执行。当执行栈中的所有同步任务完成后，JS引擎才会去任务队列里查看是否有任务存在，并将任务放到执行栈中去执行，执行完了又会去任务队列里查看是否有已经可以执行的任务。这种循环检查的机制，就叫做事件循环(Event Loop)。对于任务队列，其实是有更细的分类。其被分为 微任务（microtask）队列 &amp; 宏任务（macrotask）队列。</li>\n<li><strong>总结：同步任务是同步任务，异步任务分（微任务、宏任务）</strong></li>\n</ul>\n</li>\n<li><p>任务队列是什么？</p>\n<ul>\n<li><p>单线程就意味着，所有任务需要排队，前一个任务结束，才会执行后一个任务。如果前一个任务耗时很长，后一个任务就不得不一直等着。</p>\n</li>\n<li><p>所有任务可以分成两种，一种是<strong>同步任务（synchronous）</strong>，另一种是<strong>异步任务（asynchronous）</strong>。同步任务指的是，在主线程上排队执行的任务，只有前一个任务执行完毕，才能执行后一个任务；异步任务指的是，不进入主线程、而进入”任务队列”（task queue）的任务，只有”任务队列”通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。</p>\n</li>\n<li><p>异步任务可以分为（微任务、宏任务），微任务优先级高于宏任务。</p>\n</li>\n<li><p>异步执行的运行机制如下：</p>\n<blockquote>\n<p>（1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。</p>\n</blockquote>\n<blockquote>\n<p>（2）主线程之外，还存在一个”任务队列”（task queue）。只要异步任务有了运行结果，就在”任务队列”之中放置一个事件。</p>\n</blockquote>\n<blockquote>\n<p>（3）一旦”执行栈”中的所有同步任务执行完毕，系统就会读取”任务队列”，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。</p>\n</blockquote>\n<blockquote>\n<p>（4）主线程不断重复上面的第三步。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/80/v2-59a1cbab9a259817f728849d60ede6ac_720w.jpg\" alt=\" &quot;eventloop&quot; \"></p>\n<ul>\n<li><strong>宏任务</strong>包括：script(整体代码)，I/O， setTimeout，setInterval，requestAnimationFrame，setImmediate。其中setImmediate只存在于Node中，requestAnimationFrame只存在于浏览器中。</li>\n<li><strong>微任务</strong>包括：Promise，Object.observe(已废弃)，MutationObserver(html5新特性)，process.nextTick。其中process.nextTick只存在于Node中，MutationObserver只存在于浏览器中。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/2020120520201083.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzMxOTY3OTg1,size_16,color_FFFFFF,t_70\" alt=\"图片\"></p>\n<h3 id=\"完整关系\"><a href=\"#完整关系\" class=\"headerlink\" title=\"完整关系\"></a>完整关系</h3><p><img src=\"image.png\" alt=\"图片\"></p>\n</details>\n</blockquote>\n</details>\n\n  <details>\n   <summary>问题？</summary>\n\n   <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// -------------</span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>)</span><br><span class=\"line\">&#125;, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>)</span><br><span class=\"line\">  resolve();</span><br><span class=\"line\">&#125;).then(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">4</span>)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">delay</span>(<span class=\"params\">time</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">6</span>);</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(resolve, time);</span><br><span class=\"line\">  &#125;).then(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">15</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  (<span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">aa</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">12</span>)</span><br><span class=\"line\">  <span class=\"keyword\">await</span> delay(<span class=\"number\">2000</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">14</span>);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">5</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 1 3 12 6 5 4 14 2 15</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n</details>\n\n\n<ul>\n<li>了解Promise</li>\n</ul>\n<blockquote>\n<p>Promise是异步编程的一种解决方案，其实是一个构造函数，自己身上有all、reject、resolve这几个方法，原型上有then、catch等方法。</p>\n</blockquote>\n<ul>\n<li>Promise运行顺序总结<ul>\n<li>promise的构造函数是同步执行，promise.then中的函数是异步执行。</li>\n<li>构造函数中的 resolve 或 reject 只有第一次执行有效，多次调用没有任何作用。promise状态一旦改变则不能再变。</li>\n<li>promise 的 .then 或者 .catch 可以被调用多次，但这里 Promise 构造函数只执行一次。或者说 promise 内部状态一经改变，并且有了一个值，那么后续每次调用 .then 或者 .catch 都会直接拿到该值。</li>\n<li>如果在一个then（）中没有返回一个新的promise，则 return 什么下一个then就接受什么，如果then中没有return，则默认return的是 undefined.</li>\n<li>then()的嵌套会先将内部的then()执行完毕再继续执行外部的then();</li>\n<li>catch和then的连用，如果每一步都有可能出现错误，那么就可能出现catch后面接上then的情况。如果在catch中也抛出了错误，则后面的then的第一个函数不会执行，因为返回的 promise状态已经为rejected了</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p><strong>浏览器和Node环境下，microtask 任务队列的执行时机不同：Node 端，microtask 在事件循环的各个阶段之间执行；浏览器端，microtask 在事件循环的 macrotask 执行完之后执行；</strong></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-11-02T02:08:15.393Z","updated":"1985-10-26T08:15:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvhrljln00035su44ufk0dev","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"在浏览器输入 URL 到页面加载发生了什么？","date":"2021-11-01T08:58:00.000Z","author":"zander","img":null,"top":true,"hide":false,"cover":true,"coverImg":null,"password":null,"toc":false,"mathjax":false,"summary":null,"keywords":null,"reprintPolicy":null,"_content":"\n`过程综述：`\n\n1. DNS 解析\n2. TCP 连接\n3. 发送 HTTP 请求\n4. 服务器处理请求并返回 HTTP 报文\n5. 浏览器解析渲染页面\n6. 连接结束\n\n## 一. DNS 解析\n\n1. `wiki`介绍:\n   > 域名系统（domain name system，缩写：DNS）是互联网的一项服务。它作为将域名和 ip 地址相互映射的一个分布式数据库，能够使人更方便的访问互联网。DNS 使用 TCP 和 UDP 端口 53.当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能朝服哦 253 个字符。<font color=red>最基本的作用就是将域名翻译成对应的 IP 地址</font>\n2. 域名解析过程\n\n   - 检查缓存\n     1. 浏览器缓存\n        > 用户通过浏览器访问某域名时，浏览器首先会在自己的缓存中查找是否有该域名对用的 ip 地址（若曾经访问过，没有被清除，就会存在）\n     2. 系统缓存\n        > 检查系统的 hosts 文件有没有这个域名的映射，如果有，直接返回\n   - ISP（互联网服务提供商）DNS 缓存\n     > 如果 hosts 与本地的 DNS 解析器缓存都没有相应的网址映射关系，首先会找 TCP/IP 参数中设置的首选 DNS 服务器，在此我们叫它 DNS 服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。\n   - 根域名服务器\n     > 当以上均未完成，则进入根服务器查询，全球仅有 13 台服务器，1 个根域名服务器，其余 12 台为辅助域名服务器。根域名收到请求后会查询域名文件记录，若无则将其管辖的顶级域名（如： .com）服务器 IP 告诉本地 DNS 服务器\n   - 顶级域名服务器\n     > 顶级域名服务器收到请求后查看区域文件记录，若无则将其管辖范围内主域名服务器 IP 地址告诉本地服务器\n   - 主域名服务器\n     > 主域名服务器接收到请求以后查询自己的缓存，如果没有则进入下一级域名服务器查找，并重复该步骤直至找到正确记录\n   - 保存结果到缓存\n\n     > 本地域名服务器吧返回的结果保存到缓存\n\n![DNS](/chintdev.github.io/images/dns.jpg)\n\n## 二. TCP 链接\n\n1. 第一次握手：CLient 将标识位 SYN 置为 1，随机产生一个值 seq=j，并将该数据包发送至 Server，Client 进入 SYN_SEND 状态，等待 Server 确认。\n\n2. 第二次握手：Server 收到数据包后由标志位 SYN=1 知道 Client 请求建立链接，Server 将标识位 SYN 和 ACK 都置为 1，ACK=j+1，随机产生一个值 seq=K，并将该数据包发送给 Client 以确认连接请求。\n\n3. 第三次握手：Client 收到确认后，检查 ACK 是否为 j+1，ACK 是否为 1，如果正确则将标志位 ACK 置为 1，ACK=k+1,并将该数据发送给 Server，Server 检查 ACK 是否为 k+1,ACK 是否为 1，如果正确则建立连接成功，Client 和 Server 进入 ESTABLISHED 状态，完成三次握手，随后 Client 与 Server 之间可以开始传输数据了。\n\n### 三. HTTP 请求\n\n> 发送 HTTP 请求的过程就是构建 HTTP 请求报文并通过 TCP 协议中发送服务器指定端口（HTTP 协议 80/8080，HTTPS 协议 443）.\n> HTTP 请求报文由三部分组成： 请求头，请求行，请求体\n\n#### 四. 服务器处理请求返回 HTTP 报文\n\n> 后端从在固定的端口接收到 TCP 报文开始，这一部分对于编程语言中的 socket。他会对 TCP 连接进行处理，对 HTTP 协议进行解析，并按照报文格式进一步封装成 HTTP Request 对象，供上层使用。\n> HTTP 响应报文包括三部分：状态码，响应报头，响应报文\n\n##### 五. 浏览器解析渲染页面\n\n> 浏览器是一个边间谍西边渲染的过程。首先浏览器解析 HTML 文件构成 DOM 树，然后解析 CSS 文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。这个过程比较复杂。\n\n###\n","source":"_posts/在浏览器中输入URl到页面加载发生了什么.md","raw":"---\ntitle: 在浏览器输入 URL 到页面加载发生了什么？ # 文章标题\ndate: 2021-11-01 16:58:00 # 发布时间\nauthor: zander # 文章作者\nimg: # 文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: http://xxx.com/xxx.jpg\ntop: true # 推荐文章（文章是否置顶）\nhide: false # 隐藏文章，如果hide值为true，则文章不会在首页显示\ncover: true # 文章是否需要加入到首页轮播封面中\ncoverImg: # 文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片\npassword:  # 文章阅读密码\ntoc: false # 是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能 `暂未开放`\nmathjax: false # 是否开启数学公式支持 \nsummary: # 文章摘要\ncategories: Browser # 文章分类\ntags: # 文章标签\n  - DNS\n  - HTTP\n  - TCP\n  - URL\nkeywords: # 文章关键字，SEO 时需要\nreprintPolicy: # 文章转载规则 `暂时不支持`\n---\n\n`过程综述：`\n\n1. DNS 解析\n2. TCP 连接\n3. 发送 HTTP 请求\n4. 服务器处理请求并返回 HTTP 报文\n5. 浏览器解析渲染页面\n6. 连接结束\n\n## 一. DNS 解析\n\n1. `wiki`介绍:\n   > 域名系统（domain name system，缩写：DNS）是互联网的一项服务。它作为将域名和 ip 地址相互映射的一个分布式数据库，能够使人更方便的访问互联网。DNS 使用 TCP 和 UDP 端口 53.当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能朝服哦 253 个字符。<font color=red>最基本的作用就是将域名翻译成对应的 IP 地址</font>\n2. 域名解析过程\n\n   - 检查缓存\n     1. 浏览器缓存\n        > 用户通过浏览器访问某域名时，浏览器首先会在自己的缓存中查找是否有该域名对用的 ip 地址（若曾经访问过，没有被清除，就会存在）\n     2. 系统缓存\n        > 检查系统的 hosts 文件有没有这个域名的映射，如果有，直接返回\n   - ISP（互联网服务提供商）DNS 缓存\n     > 如果 hosts 与本地的 DNS 解析器缓存都没有相应的网址映射关系，首先会找 TCP/IP 参数中设置的首选 DNS 服务器，在此我们叫它 DNS 服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。\n   - 根域名服务器\n     > 当以上均未完成，则进入根服务器查询，全球仅有 13 台服务器，1 个根域名服务器，其余 12 台为辅助域名服务器。根域名收到请求后会查询域名文件记录，若无则将其管辖的顶级域名（如： .com）服务器 IP 告诉本地 DNS 服务器\n   - 顶级域名服务器\n     > 顶级域名服务器收到请求后查看区域文件记录，若无则将其管辖范围内主域名服务器 IP 地址告诉本地服务器\n   - 主域名服务器\n     > 主域名服务器接收到请求以后查询自己的缓存，如果没有则进入下一级域名服务器查找，并重复该步骤直至找到正确记录\n   - 保存结果到缓存\n\n     > 本地域名服务器吧返回的结果保存到缓存\n\n![DNS](/chintdev.github.io/images/dns.jpg)\n\n## 二. TCP 链接\n\n1. 第一次握手：CLient 将标识位 SYN 置为 1，随机产生一个值 seq=j，并将该数据包发送至 Server，Client 进入 SYN_SEND 状态，等待 Server 确认。\n\n2. 第二次握手：Server 收到数据包后由标志位 SYN=1 知道 Client 请求建立链接，Server 将标识位 SYN 和 ACK 都置为 1，ACK=j+1，随机产生一个值 seq=K，并将该数据包发送给 Client 以确认连接请求。\n\n3. 第三次握手：Client 收到确认后，检查 ACK 是否为 j+1，ACK 是否为 1，如果正确则将标志位 ACK 置为 1，ACK=k+1,并将该数据发送给 Server，Server 检查 ACK 是否为 k+1,ACK 是否为 1，如果正确则建立连接成功，Client 和 Server 进入 ESTABLISHED 状态，完成三次握手，随后 Client 与 Server 之间可以开始传输数据了。\n\n### 三. HTTP 请求\n\n> 发送 HTTP 请求的过程就是构建 HTTP 请求报文并通过 TCP 协议中发送服务器指定端口（HTTP 协议 80/8080，HTTPS 协议 443）.\n> HTTP 请求报文由三部分组成： 请求头，请求行，请求体\n\n#### 四. 服务器处理请求返回 HTTP 报文\n\n> 后端从在固定的端口接收到 TCP 报文开始，这一部分对于编程语言中的 socket。他会对 TCP 连接进行处理，对 HTTP 协议进行解析，并按照报文格式进一步封装成 HTTP Request 对象，供上层使用。\n> HTTP 响应报文包括三部分：状态码，响应报头，响应报文\n\n##### 五. 浏览器解析渲染页面\n\n> 浏览器是一个边间谍西边渲染的过程。首先浏览器解析 HTML 文件构成 DOM 树，然后解析 CSS 文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。这个过程比较复杂。\n\n###\n","slug":"在浏览器中输入URl到页面加载发生了什么","published":1,"updated":"2021-11-02T07:19:59.200Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvhrljls00075su4agi75vto","content":"<p><code>过程综述：</code></p>\n<ol>\n<li>DNS 解析</li>\n<li>TCP 连接</li>\n<li>发送 HTTP 请求</li>\n<li>服务器处理请求并返回 HTTP 报文</li>\n<li>浏览器解析渲染页面</li>\n<li>连接结束</li>\n</ol>\n<h2 id=\"一-DNS-解析\"><a href=\"#一-DNS-解析\" class=\"headerlink\" title=\"一. DNS 解析\"></a>一. DNS 解析</h2><ol>\n<li><p><code>wiki</code>介绍:</p>\n<blockquote>\n<p>域名系统（domain name system，缩写：DNS）是互联网的一项服务。它作为将域名和 ip 地址相互映射的一个分布式数据库，能够使人更方便的访问互联网。DNS 使用 TCP 和 UDP 端口 53.当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能朝服哦 253 个字符。<font color=\"red\">最基本的作用就是将域名翻译成对应的 IP 地址</font></p>\n</blockquote>\n</li>\n<li><p>域名解析过程</p>\n<ul>\n<li><p>检查缓存</p>\n<ol>\n<li>浏览器缓存<blockquote>\n<p>用户通过浏览器访问某域名时，浏览器首先会在自己的缓存中查找是否有该域名对用的 ip 地址（若曾经访问过，没有被清除，就会存在）</p>\n</blockquote>\n</li>\n<li>系统缓存<blockquote>\n<p>检查系统的 hosts 文件有没有这个域名的映射，如果有，直接返回</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li><p>ISP（互联网服务提供商）DNS 缓存</p>\n<blockquote>\n<p>如果 hosts 与本地的 DNS 解析器缓存都没有相应的网址映射关系，首先会找 TCP/IP 参数中设置的首选 DNS 服务器，在此我们叫它 DNS 服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。</p>\n</blockquote>\n</li>\n<li><p>根域名服务器</p>\n<blockquote>\n<p>当以上均未完成，则进入根服务器查询，全球仅有 13 台服务器，1 个根域名服务器，其余 12 台为辅助域名服务器。根域名收到请求后会查询域名文件记录，若无则将其管辖的顶级域名（如： .com）服务器 IP 告诉本地 DNS 服务器</p>\n</blockquote>\n</li>\n<li><p>顶级域名服务器</p>\n<blockquote>\n<p>顶级域名服务器收到请求后查看区域文件记录，若无则将其管辖范围内主域名服务器 IP 地址告诉本地服务器</p>\n</blockquote>\n</li>\n<li><p>主域名服务器</p>\n<blockquote>\n<p>主域名服务器接收到请求以后查询自己的缓存，如果没有则进入下一级域名服务器查找，并重复该步骤直至找到正确记录</p>\n</blockquote>\n</li>\n<li><p>保存结果到缓存</p>\n<blockquote>\n<p>本地域名服务器吧返回的结果保存到缓存</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/chintdev.github.io/images/dns.jpg\" alt=\"DNS\"></p>\n<h2 id=\"二-TCP-链接\"><a href=\"#二-TCP-链接\" class=\"headerlink\" title=\"二. TCP 链接\"></a>二. TCP 链接</h2><ol>\n<li><p>第一次握手：CLient 将标识位 SYN 置为 1，随机产生一个值 seq=j，并将该数据包发送至 Server，Client 进入 SYN_SEND 状态，等待 Server 确认。</p>\n</li>\n<li><p>第二次握手：Server 收到数据包后由标志位 SYN=1 知道 Client 请求建立链接，Server 将标识位 SYN 和 ACK 都置为 1，ACK=j+1，随机产生一个值 seq=K，并将该数据包发送给 Client 以确认连接请求。</p>\n</li>\n<li><p>第三次握手：Client 收到确认后，检查 ACK 是否为 j+1，ACK 是否为 1，如果正确则将标志位 ACK 置为 1，ACK=k+1,并将该数据发送给 Server，Server 检查 ACK 是否为 k+1,ACK 是否为 1，如果正确则建立连接成功，Client 和 Server 进入 ESTABLISHED 状态，完成三次握手，随后 Client 与 Server 之间可以开始传输数据了。</p>\n</li>\n</ol>\n<h3 id=\"三-HTTP-请求\"><a href=\"#三-HTTP-请求\" class=\"headerlink\" title=\"三. HTTP 请求\"></a>三. HTTP 请求</h3><blockquote>\n<p>发送 HTTP 请求的过程就是构建 HTTP 请求报文并通过 TCP 协议中发送服务器指定端口（HTTP 协议 80/8080，HTTPS 协议 443）.<br>HTTP 请求报文由三部分组成： 请求头，请求行，请求体</p>\n</blockquote>\n<h4 id=\"四-服务器处理请求返回-HTTP-报文\"><a href=\"#四-服务器处理请求返回-HTTP-报文\" class=\"headerlink\" title=\"四. 服务器处理请求返回 HTTP 报文\"></a>四. 服务器处理请求返回 HTTP 报文</h4><blockquote>\n<p>后端从在固定的端口接收到 TCP 报文开始，这一部分对于编程语言中的 socket。他会对 TCP 连接进行处理，对 HTTP 协议进行解析，并按照报文格式进一步封装成 HTTP Request 对象，供上层使用。<br>HTTP 响应报文包括三部分：状态码，响应报头，响应报文</p>\n</blockquote>\n<h5 id=\"五-浏览器解析渲染页面\"><a href=\"#五-浏览器解析渲染页面\" class=\"headerlink\" title=\"五. 浏览器解析渲染页面\"></a>五. 浏览器解析渲染页面</h5><blockquote>\n<p>浏览器是一个边间谍西边渲染的过程。首先浏览器解析 HTML 文件构成 DOM 树，然后解析 CSS 文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。这个过程比较复杂。</p>\n</blockquote>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":"<p><code>过程综述：</code></p>\n<ol>\n<li>DNS 解析</li>\n<li>TCP 连接</li>\n<li>发送 HTTP 请求</li>\n<li>服务器处理请求并返回 HTTP 报文</li>\n<li>浏览器解析渲染页面</li>\n<li>连接结束</li>\n</ol>\n<h2 id=\"一-DNS-解析\"><a href=\"#一-DNS-解析\" class=\"headerlink\" title=\"一. DNS 解析\"></a>一. DNS 解析</h2><ol>\n<li><p><code>wiki</code>介绍:</p>\n<blockquote>\n<p>域名系统（domain name system，缩写：DNS）是互联网的一项服务。它作为将域名和 ip 地址相互映射的一个分布式数据库，能够使人更方便的访问互联网。DNS 使用 TCP 和 UDP 端口 53.当前，对于每一级域名长度的限制是 63 个字符，域名总长度则不能朝服哦 253 个字符。<font color=red>最基本的作用就是将域名翻译成对应的 IP 地址</font></p>\n</blockquote>\n</li>\n<li><p>域名解析过程</p>\n<ul>\n<li><p>检查缓存</p>\n<ol>\n<li>浏览器缓存<blockquote>\n<p>用户通过浏览器访问某域名时，浏览器首先会在自己的缓存中查找是否有该域名对用的 ip 地址（若曾经访问过，没有被清除，就会存在）</p>\n</blockquote>\n</li>\n<li>系统缓存<blockquote>\n<p>检查系统的 hosts 文件有没有这个域名的映射，如果有，直接返回</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li><p>ISP（互联网服务提供商）DNS 缓存</p>\n<blockquote>\n<p>如果 hosts 与本地的 DNS 解析器缓存都没有相应的网址映射关系，首先会找 TCP/IP 参数中设置的首选 DNS 服务器，在此我们叫它 DNS 服务器，此服务器收到查询时，如果要查询的域名，包含在本地配置区域资源中，则返回解析结果给客户机，完成域名解析，此解析具有权威性。</p>\n</blockquote>\n</li>\n<li><p>根域名服务器</p>\n<blockquote>\n<p>当以上均未完成，则进入根服务器查询，全球仅有 13 台服务器，1 个根域名服务器，其余 12 台为辅助域名服务器。根域名收到请求后会查询域名文件记录，若无则将其管辖的顶级域名（如： .com）服务器 IP 告诉本地 DNS 服务器</p>\n</blockquote>\n</li>\n<li><p>顶级域名服务器</p>\n<blockquote>\n<p>顶级域名服务器收到请求后查看区域文件记录，若无则将其管辖范围内主域名服务器 IP 地址告诉本地服务器</p>\n</blockquote>\n</li>\n<li><p>主域名服务器</p>\n<blockquote>\n<p>主域名服务器接收到请求以后查询自己的缓存，如果没有则进入下一级域名服务器查找，并重复该步骤直至找到正确记录</p>\n</blockquote>\n</li>\n<li><p>保存结果到缓存</p>\n<blockquote>\n<p>本地域名服务器吧返回的结果保存到缓存</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ol>\n<p><img src=\"/chintdev.github.io/images/dns.jpg\" alt=\"DNS\"></p>\n<h2 id=\"二-TCP-链接\"><a href=\"#二-TCP-链接\" class=\"headerlink\" title=\"二. TCP 链接\"></a>二. TCP 链接</h2><ol>\n<li><p>第一次握手：CLient 将标识位 SYN 置为 1，随机产生一个值 seq=j，并将该数据包发送至 Server，Client 进入 SYN_SEND 状态，等待 Server 确认。</p>\n</li>\n<li><p>第二次握手：Server 收到数据包后由标志位 SYN=1 知道 Client 请求建立链接，Server 将标识位 SYN 和 ACK 都置为 1，ACK=j+1，随机产生一个值 seq=K，并将该数据包发送给 Client 以确认连接请求。</p>\n</li>\n<li><p>第三次握手：Client 收到确认后，检查 ACK 是否为 j+1，ACK 是否为 1，如果正确则将标志位 ACK 置为 1，ACK=k+1,并将该数据发送给 Server，Server 检查 ACK 是否为 k+1,ACK 是否为 1，如果正确则建立连接成功，Client 和 Server 进入 ESTABLISHED 状态，完成三次握手，随后 Client 与 Server 之间可以开始传输数据了。</p>\n</li>\n</ol>\n<h3 id=\"三-HTTP-请求\"><a href=\"#三-HTTP-请求\" class=\"headerlink\" title=\"三. HTTP 请求\"></a>三. HTTP 请求</h3><blockquote>\n<p>发送 HTTP 请求的过程就是构建 HTTP 请求报文并通过 TCP 协议中发送服务器指定端口（HTTP 协议 80/8080，HTTPS 协议 443）.<br>HTTP 请求报文由三部分组成： 请求头，请求行，请求体</p>\n</blockquote>\n<h4 id=\"四-服务器处理请求返回-HTTP-报文\"><a href=\"#四-服务器处理请求返回-HTTP-报文\" class=\"headerlink\" title=\"四. 服务器处理请求返回 HTTP 报文\"></a>四. 服务器处理请求返回 HTTP 报文</h4><blockquote>\n<p>后端从在固定的端口接收到 TCP 报文开始，这一部分对于编程语言中的 socket。他会对 TCP 连接进行处理，对 HTTP 协议进行解析，并按照报文格式进一步封装成 HTTP Request 对象，供上层使用。<br>HTTP 响应报文包括三部分：状态码，响应报头，响应报文</p>\n</blockquote>\n<h5 id=\"五-浏览器解析渲染页面\"><a href=\"#五-浏览器解析渲染页面\" class=\"headerlink\" title=\"五. 浏览器解析渲染页面\"></a>五. 浏览器解析渲染页面</h5><blockquote>\n<p>浏览器是一个边间谍西边渲染的过程。首先浏览器解析 HTML 文件构成 DOM 树，然后解析 CSS 文件构建渲染树，等到渲染树构建完成后，浏览器开始布局渲染树并将其绘制到屏幕上。这个过程比较复杂。</p>\n</blockquote>\n<h3 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h3>"},{"title":"npm机制","date":"2021-11-02T06:37:02.000Z","author":"chenhaijia","img":null,"top":false,"hide":false,"cover":false,"coverImg":null,"password":null,"toc":false,"mathjax":false,"summary":true,"_content":"\n## 1. npm install 机制\n假设项目App中有如下三个依赖：\n```javascript\n\"dependencies\": {\n    A: \"1.0.0\",\n    B: \"1.0.0\",\n    C: \"1.0.0\"\n}\n```\nA、B、C三个模块又有如下依赖：\n```javascript\nA@1.0.0 -> D@1.0.0\nB@1.0.0 -> D@2.0.0\nC@1.0.0 -> D@2.0.0\n```\n### npm 2.x 时代 嵌套安装\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@2.0.0\n│   └── C@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@2.0.0\n\n```\n优点：\n\n- 层级结构明显\n- 简单的实现了多版本兼容\n- 保证了对依赖包无论是安装还是删除都会有统一的行为和结构\n\n缺点：\n\n- 可能造成相同模块大量冗余问题\n- 可能造成目录结构嵌套比较深的问题\n### npm 3.x开始 -扁平安装\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   ├── C@1.0.0\n│   └── D@2.0.0\n```\n可以看到，D@2.0.0模块被安装在一级node_modules中，而D@1.0.0仍被安装在A@1.0.0中。所以可以得出结论，**在执行npm install安装时，如果遇到相同依赖的包，会优先将高版本（大版本）的包放在一级node_modules中，低版本的包则会按照npm 2.x的方式依次挂在依赖包的node_modules中。**\n\n\n再在项目中安装模块E@1.0.0（依赖于模块D@1.0.0），目录结构变为：\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   ├── C@1.0.0\n│   ├── D@2.0.0\n│   ├── E@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n```\n再在项目中安装模块F@1.0.0（依赖于模块D@2.0.0），目录结构变为：\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   ├── C@1.0.0\n│   ├── D@2.0.0\n│   ├── E@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   └── F@1.0.0\n```\n可以看到，只会安装F模块。所以可以得出结论，**在一级node_moudles中已经存在依赖包的情况下，新安装的依赖包如果不存在版本冲突，则会忽略安装**。\n从以上示例可以看出，npm 3.x并没有完美的解决npm 2.x中的问题，甚至还会退化到npm 2.x的行为。\n### package-lock.json\n从npm 5.x开始，执行npm install时会自动生成一个[package-lock.json](https://link.juejin.cn/?target=https%3A%2F%2Fdocs.npmjs.com%2Ffiles%2Fpackage-lock.json) 文件。\n​\n\nnpm为了让开发者**在安全的前提下使用最新的依赖包**，在package.json中通常做了锁定大版本的操作，这样在每次npm install的时候都会拉取依赖包大版本下的最新的版本。这种机制最大的一个缺点就是当有依赖包有小版本更新时，可能会出现协同开发者的依赖包不一致的问题。\n\n\npackage-lock.json的详细描述主要由version、resolved、integrity、dev、requires、dependencies这几个字段构成\n\n- version：包唯一的版本号\n- resolved：安装源\n- integrity：表明包完整性的hash值（验证包是否已失效）\n- dev：如果为true，则此依赖关系仅是顶级模块的开发依赖关系或者是一个的传递依赖关系\n- requires：依赖包所需要的所有依赖项，对应依赖包package.json里dependencies中的依赖项\n- dependencies：依赖包node_modules中依赖的包，与顶层的dependencies一样的结构\n```javascript\n\"dependencies\": {\n  \"sass-loader\": {\n    \"version\": \"7.1.0\",\n    \"resolved\": \"http://registry.npm.taobao.org/sass-loader/download/sass-loader-7.1.0.tgz\",\n    \"integrity\": \"sha1-Fv1ROMuLQkv4p1lSihly1yqtBp0=\",\n    \"dev\": true,\n    \"requires\": {\n      \"clone-deep\": \"^2.0.1\",\n      \"loader-utils\": \"^1.0.1\",\n      \"lodash.tail\": \"^4.1.1\",\n      \"neo-async\": \"^2.5.0\",\n      \"pify\": \"^3.0.0\",\n      \"semver\": \"^5.5.0\"\n    },\n    \"dependencies\": {\n      \"pify\": {\n        \"version\": \"3.0.0\",\n        \"resolved\": \"http://registry.npm.taobao.org/pify/download/pify-3.0.0.tgz\",\n        \"integrity\": \"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\",\n        \"dev\": true\n      }\n    }\n  }\n}\n```\npackage-lock.json文件和node_modules目录结构是一一对应的，即项目目录下存在package-lock.json可以让每次安装生成的依赖目录结构保持相同。\n在开发一个应用时，建议把package-lock.json文件提交到代码版本仓库，从而让你的团队成员、运维部署人员或CI系统可以在执行npm install时安装的依赖版本都是一致的。\n但是在开发一个库时，则不应把package-lock.json文件发布到仓库中。实际上，npm也默认不会把package-lock.json文件发布出去。之所以这么做，是因为库项目一般是被其他项目依赖的，在不写死的情况下，就可以复用主项目已经加载过的包，而一旦库依赖的是精确的版本号那么可能会造成包的冗余。\n​\n\n## 2. npm 中的依赖包\n### 依赖包分类\n\n- **dependencies - 业务依赖**\n- **devDependencies - 开发依赖**\n- **peerDependencies - 同伴依赖**\n- **bundledDependencies / bundleDependencies - 打包依赖**\n- **optionalDependencies - 可选依赖**\n\n作为npm的使用者，我们常用的依赖是dependencies和devDependencies，剩下三种依赖则是作为包的发布者才会使用到的字段。\n#### **dependencies**\n这种依赖在项目最终上线或者发布npm包时所需要，即其中的依赖项应该属于线上代码的一部分。比如框架vue，第三方的组件库element-ui等，这些依赖包都是必须装在这个选项里供生产环境使用。\n通过命令npm install/i packageName -S/--save把包装在此依赖项里。如果没有指定版本，直接写一个包的名字，则安装当前npm仓库中这个包的最新版本。如果要指定版本的，可以把版本号写在包名后面，比如npm i vue@3.0.1 -S。\n```git\nnpm install/i packageName -S/--save\n\n// 从npm 5.x开始，可以不用手动添加-S/--save指令，直接执行npm i packageName把依赖包添加到dependencies中去。\n```\n​\n\n#### **devDependencies**\n这种依赖只在项目开发时所需要，即其中的依赖项不应该属于线上代码的一部分。比如构建工具webpack、gulp，预处理器babel-loader、scss-loader，测试工具e2e、chai等，这些都是辅助开发的工具包，无须在生产环境使用。\n```erlang\nnpm install/i -D/--save-dev\nnpm i --production // 线上机器（或者QA环境）上使用\n\n提示：千万别以为只有在dependencies中的模块才会被一起打包，而在devDependencies中的不会！模块能否被打包，取决于项目里是否被引入了该模块！\n```\n在业务项目中dependencies和devDependencies没有什么本质区别，只是单纯的一个规范作用，在执行npm i时两个依赖下的模块都会被下载；而在发布npm包的时候，包中的dependencies依赖项在安装该包的时候会被一起下载，devDependencies依赖项则不会。\n#### **peerDependencies**\n这种依赖的作用是提示宿主环境去安装插件在peerDependencies中所指定依赖的包，然后插件所依赖的包永远都是宿主环境统一安装的npm包，最终解决插件与所依赖包不一致的问题。\n这句话听起来可能有点拗口，举个例子来给大家说明下。element-ui@2.6.3只是提供一套基于vue的ui组件库，但它要求宿主环境需要安装指定的vue版本，所以你可以看到element项目中的package.json中具有一项配置：\n```javascript\n\"peerDependencies\": {\n    \"vue\": \"^2.5.16\"\n}\n```\n它要求宿主环境安装3.0.0 > vue@ >= 2.5.16的版本，也就是element-ui的运行依赖宿主环境提供的该版本范围的vue依赖包\n​\n\n总结：大白话：如果你安装我，那么你最好也要按照我的要求安装A、B和C。\n#### **bundledDependencies **\n这种依赖跟npm pack打包命令有关。假设package.json中有如下配置：\n```javascript\n{\n  \"name\": \"font-end\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"fe1\": \"^0.3.2\",\n    ...\n  },\n  \"devDependencies\": {\n    ...\n    \"fe2\": \"^1.0.0\"\n  },\n  \"bundledDependencies\": [\n    \"fe1\",\n    \"fe2\"\n  ]\n}\n```\n执行打包命令npm pack，会生成front-end-1.0.0.tgz压缩包，并且该压缩包中包含fe1和fe2两个安装包，这样使用者执行npm install front-end-1.0.0.tgz也会安装这两个依赖。\ntips: 在bundledDependencies中指定的依赖包，必须先在dependencies和devDependencies声明过，否则打包会报错。\n#### **optionalDependencies**\n这种依赖中的依赖项即使安装失败了，也不影响整个安装的过程。需要注意的是，如果一个依赖同时出现在dependencies和optionalDependencies中，那么optionalDependencies会获得更高的优先级，可能造成一些预期之外的效果，所以尽量要避免这种情况发生。\n​\n\ntips:  在实际项目中，如果某个包已经失效，我们通常会寻找它的替代者，或者换一个实现方案。不确定的依赖会增加代码判断和测试难度，所以这个依赖项还是尽量不要使用。\n\n\n### 依赖包版本号\nnpm采用了semver规范作为依赖版本管理方案。\n​\n\n一个npm依赖包的版本格式一般为：**主版本号.次版本号.修订号**（x.y.z），每个号的含义是：\n\n- **主版本号**（也叫大版本，major version）\n\n大版本的改动很可能是一次颠覆性的改动，也就意味着可能存在与低版本不兼容的API或者用法，（比如 vue 2 -> 3)。\n\n- **次版本号**（也叫小版本，minor version）\n\n小版本的改动应当兼容同一个大版本内的API和用法，因此应该让开发者无感。所以我们通常只说大版本号，很少会精确到小版本号。\ntips: 如果大版本号是 0 的话，表示软件处于开发初始阶段，一切都可能随时被改变，可能每个小版本之间也会存在不兼容性。所以在选择依赖时，尽量避开大版本号是 0 的包。\n\n- **修订号**（也叫补丁，patch）一般用于修复bug或者很细微的变更，也需要保持向前兼容。\n\n常见的几个版本格式如下：\n\n- **\"1.2.3\"**\n\n表示精确版本号。任何其他版本号都不匹配。在一些比较重要的线上项目中，建议使用这种方式锁定版本。\n\n- **\"^1.2.3\"**\n\n表示兼容补丁和小版本更新的版本号。官方的定义是“能够兼容除了最左侧的非 **0** 版本号之外的其他变化。\n```javascript\n\"^1.2.3\" 等价于 \">= 1.2.3 < 2.0.0\"。即只要最左侧的 \"1\" 不变，其他都可以改变。所以 \"1.2.4\", \"1.3.0\" 都可以兼容。\n\n\"^0.2.3\" 等价于 \">= 0.2.3 < 0.3.0\"。因为最左侧的是 \"0\"，那么只要第二位 \"2\" 不变，其他的都兼容，比如 \"0.2.4\" 和 \"0.2.99\"。\n\n\"^0.0.3\" 等价于 \">= 0.0.3 < 0.0.4\"。大版本号和小版本号都为 \"0\" ，所以也就等价于精确的 \"0.0.3\"。\n```\n\n- **\"~1.2.3\"**\n\n表示只兼容补丁更新的版本号。关于 ~ 的定义分为两部分：如果列出了小版本号（第二位），则只兼容补丁（第三位）的修改；如果没有列出小版本号，则兼容第二和第三位的修改。我们分两种情况理解一下这个定义：\n```javascript\n\"~1.2.3\" 列出了小版本号 \"2\"，因此只兼容第三位的修改，等价于 \">= 1.2.3 < 1.3.0\"。\n\n\"~1.2\" 也列出了小版本号 \"2\"，因此和上面一样兼容第三位的修改，等价于 \">= 1.2.0 < 1.3.0\"。\n\n\"~1\" 没有列出小版本号，可以兼容第二第三位的修改，因此等价于 \">= 1.0.0 < 2.0.0\"\n```\n\n- **\"1.x\" 、\"1.X\"、1.*\"、\"1\"、\"*\"**\n```javascript\n\"*\" 、\"x\" 或者 （空） 表示可以匹配任何版本。\n\n\"1.x\", \"1.*\" 和 \"1\" 表示匹配主版本号为 \"1\" 的所有版本，因此等价于 \">= 1.0.0 < 2.0.0\"。\n\n\"1.2.x\", \"1.2.*\" 和 \"1.2\" 表示匹配版本号以 \"1.2\" 开头的所有版本，因此等价于 \">= 1.2.0 < 1.3.0\"。\n```\n\n- **\"1.2.3-alpha.1\"、\"1.2.3-beta.1\"、\"1.2.3-rc.1\"**\n```javascript\nalpha(α)：预览版，或者叫内部测试版；一般不向外部发布，会有很多bug；一般只有测试人员使用。\n\nbeta(β)：测试版，或者叫公开测试版；这个阶段的版本会一直加入新的功能；在alpha版之后推出。\n\nrc(release candidate)：最终测试版本；可能成为最终产品的候选版本，如果未出现问题则可发布成为正式版本。\n```\n```javascript\n\"~1.2.4-alpha.1\" 表示 \">=1.2.4-alpha.1 < 1.3.0\"。这样 \"1.2.5\", \"1.2.4-alpha.2\" 都符合条件，而 \"1.2.5-alpha.1\", \"1.3.0\" 不符合。\n\n\"^1.2.4-alpha.1\" 表示 \">=1.2.4-alpha.1 < 2.0.0\"。这样 \"1.2.5\", \"1.2.4-alpha.2\", \"1.3.0\" 都符合条件，而 \"1.2.5-alpha.1\", \"2.0.0\" 不符合。\n\n// >1.2.4-alpha.1\"表示接受 \"1.2.4-alpha\" 版本下所有大于 1 的预发布版本。因此 \"1.2.4-alpha.7\" 是符合要求的，但 \"1.2.4-beta.1\" 和 \"1.2.5-alpha.2\" 都不符合。此外如果是正式版本（不带预发布关键词），只要版本号符合要求即可，不检查预发布版本号，例如 \"1.2.5\", \"1.3.0\" 都是认可的。\n```\n以包开发者的角度来考虑这个问题：假设当前线上版本是 \"1.2.3\"，如果我作了一些改动需要发布版本 \"1.2.4\"，但我不想直接上线（因为使用 \"~1.2.3\" 或者 \"^1.2.3\" 的用户都会直接静默更新），这就需要使用预发布功能。因此我可能会发布 \"1.2.4-alpha.1\" 或者 \"1.2.4-beta.1\" 等等。\n### 依赖包版本管理\n\n1. 在大版本相同的前提下，如果一个模块在package.json中的小版本要**大于**package-lock.json中的小版本，则在执行npm install时，会将该模块更新到大版本下的最新的版本，并将版本号更新至package-lock.json。如果**小于**，则被package-lock.json中的版本锁定。\n```javascript\n// package-lock.json 中原版本\n\"clipboard\": {\n  \"version\": \"1.5.10\", \n},\n\"vue\": {\n  \"version\": \"2.6.10\",\n}\n// package.json 中修改版本\n\"dependencies\": {\n  \"clipboard\": \"^1.5.12\",\n  \"vue\": \"^2.5.6\"\n  ...\n}\n\n// 执行完 npm install 后，package-lock.json 中\n\"clipboard\": {\n  \"version\": \"1.7.1\", // 更新到大版本下的最新版本\n},\n\"vue\": {\n  \"version\": \"2.6.10\", // 版本没发生改变\n}\n```\n\n2. 如果一个模块在package.json和package-lock.json中的大版本不相同，则在执行npm install时，都将根据package.json中大版本下的最新版本进行更新，并将版本号更新至package-lock.json。\n```javascript\n// package-lock.json 中原版本\n\"clipboard\": {\n  \"version\": \"2.0.4\",\n}\n// package.json 中修改版本\n\"dependencies\": {\n  \"clipboard\": \"^1.6.1\",\n}\n\n// 执行完npm install后，package-lock.json 中\n\"clipboard\": {\n  \"version\": \"1.7.1\", // 更新到大版本下的最新版本\n}\n```\n\n3. 如果一个模块在package.json中有记录，而在package-lock.json中无记录，执行npm install后，则会在package-lock.json生成该模块的详细记录。同理，一个模块在package.json中无记录，而在package-lock.json中有记录，执行npm install后，则会在package-lock.json删除该模块的详细记录。\n\n\n\n## 3. npm scripts 脚本\npackage.json中的 [scripts](https://link.juejin.cn/?target=https%3A%2F%2Fdocs.npmjs.com%2Fmisc%2Fscripts) 字段可以用来自定义脚本命令，它的每一个属性，对应一段脚本。以vue-cli3为例：\n```javascript\n\"scripts\": {\n  \"serve\": \"vue-cli-service serve\",\n  ...\n}\n```\n这样就可以通过npm run serve脚本代替vue-cli-service serve脚本来启动项目，而无需每次敲一遍这么冗长的脚本。\n### 工作原理\n#### package.json 中的 bin 字段\npackage.json中的字段 [bin](https://link.juejin.cn/?target=https%3A%2F%2Fdocs.npmjs.com%2Ffiles%2Fpackage.json.html%23bin) 表示的是一个**可执行文件到指定文件源的映射**。通过npm bin指令显示当前项目的bin目录的路径。例如在@vue/cli的package.json中：\n例如:在chj-ip-tool的package.json中：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1634778717199-d5160d94-06bf-4a78-bc8b-cee18b0967e8.png#clientId=ubcbcb43a-f3df-4&from=paste&height=75&id=u78df9db5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=75&originWidth=259&originalType=binary&ratio=1&size=2649&status=done&style=none&taskId=u3ca378d9-3c35-4301-a6b8-c398725a4a1&width=259)\n全局安装: \n如果全局安装chj-ip-tool的话， npm会在全局可执行bin文件安装目录\t\t\tC:\\Users\\Administrator\\AppData\\Roaming\\npm下创建一个指向C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\chj-ip-tool\\bin\\cli.js文件的名为my-ip的软链接，这样就可以直接在终端输入my-ip来执行相关命令。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032050100-a436e440-cf65-4a1b-a1e8-88eae7c7d5d8.png#clientId=ue2a260f2-efff-4&from=paste&height=40&id=u73dbfd80&margin=%5Bobject%20Object%5D&name=image.png&originHeight=62&originWidth=907&originalType=binary&ratio=1&size=29245&status=done&style=none&taskId=u7f4aa3cd-80fb-439e-80b7-18c11e136b2&width=588.4977722167969)\n局部安装:\n如果局部安装chj-ip-tool的话，npm则会在本地项目./node_modules/.bin目录下创建一个指向./node_moudles/haijia-tool/bin/cli.js名为my-ip的软链接，这个时候如果想要执行my-ip命令有三种方式：\n```javascript\n1. 直接输入.\\node_modules\\.bin\\my-ip来执行。 \n2. 使用npx vue命令来执行（npx 的作用就是为了方便调用项目内部安装的模块） \t\n3. 使用npm run命令来执行（npm run会将当前项目的./node_modules/.bin的绝对路径加入全局环境变量中）\n```\n#### PATH 环境变量\n在terminal中执行命令时，**命令会在PATH环境变量里包含的路径中去寻找相同名字的可执行文件**。局部安装的包只在./node_modules/.bin中注册了它们的可执行文件，不会被包含在PATH环境变量中，这个时候在terminal中输入命令将会报无法找到的错误。\n**那为什么通过npm run可以执行局部安装的命令行包呢？**\n​\n\nnpm 脚本的原理非常简单。每当执行npm run，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。\n比较特别的是，npm run新建的这个 Shell，会将当前目录的node_modules/.bin子目录加入PATH变量，执行结束后，再将PATH变量恢复原样。\n我们来验证下这个说法。首先执行 cmd =>path 查看当前所有的环境变量，可以看到PATH环境变量为：\n```javascript\nPATH=C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm\n```\n\t再在当前项目下执行npm run env查看脚本运行时的环境变量，可以看到PATH环境变量为：\n```javascript\nPath=D:\\前端软件\\node\\node_modules\\npm\\node_modules\\npm-lifecycle\\node-gyp-bin;D:\\project-demo\\ip-tool\\node_modules\\.bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软 \n件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm\n```\n这意味着，当前目录的node_modules/.bin子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写mocha test就可以了。\n```javascript\n\"test\": \"mocha test\"\n\"test\": \"./node_modules/.bin/mocha test\" // 不必带上路径\n```\n由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。\nnpm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是0，npm 就认为这个脚本执行失败。\n​\n\nPATH环境变量，是告诉系统，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到哪些目录下去寻找。\n​\n\n### 用法指南\n#### 传入参数\nnode处理scripts参数其实很简单，比如：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032201141-537a223f-f405-4a01-989f-fd10365bc906.png#clientId=ue2a260f2-efff-4&from=paste&height=132&id=u6bc9ef8c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=150&originWidth=631&originalType=binary&ratio=1&size=24772&status=done&style=none&taskId=u9e4d9430-50ea-428a-a084-4784028eb23&width=553.4920349121094)\n除了第一个可执行的命令，以空格分割的任何字符串都是参数，并且都能通过process.argv属性访问。执行npm run serve3命令，process.argv的具体内容为：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032241556-ac230118-702b-4ca3-a0ea-f2e66fbaae7f.png#clientId=ue2a260f2-efff-4&from=paste&height=176&id=u21b3f8d9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=200&originWidth=631&originalType=binary&ratio=1&size=29444&status=done&style=none&taskId=u1dbb903d-9093-4da8-aa23-7cfc9594ad1&width=554.4859008789062)\n很多命令行包之所以这么写，都是依赖了 minimist 或者  yargs ，coa等参数解析工具来对命令行参数进行解析。以minimist对vue-cli-service serve --mode=dev --mobile -config build/example.js解析为例，解析后的结果为：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032274531-2b333d35-2c45-47c5-aa23-9589eff91557.png#clientId=ue2a260f2-efff-4&from=paste&height=84&id=u5742ba09&margin=%5Bobject%20Object%5D&name=image.png&originHeight=167&originWidth=777&originalType=binary&ratio=1&size=11794&status=done&style=none&taskId=ub57736d4-bd43-4121-8ea8-3599438e970&width=388.5)\n我们还可以通过命令行传参的形式来进行参数传递：\n```javascript\nnpm run serve --params  // 参数params将转化成process.env.npm_config_params = true\nnpm run serve --params=123 // 参数params将转化成process.env.npm_config_params = 123\nnpm run serve -params  // 等同于--params参数\n\nnpm run serve -- --params  // 将--params参数添加到process.argv数组中\nnpm run serve params  // 将params参数添加到process.argv数组中\nnpm run serve -- params  // 将params参数添加到process.argv数组中\n```\n#### 多命令运行\n##### 串行执行\n串行执行，要求前一个任务执行成功以后才能执行下一个任务，使用&&符号来连接。\n```javascript\nnpm run script1 && npm run script2\n串行命令执行过程中，只要一个命令执行失败，则整个脚本终止。\n```\n##### 并行执行\n并行执行，就是多个命令可以同时的平行执行，使用&符号来连接。\n```javascript\nnpm run script1 & npm run script2\n// 这两个符号是Bash的内置功能。此外，还可以使用第三方的任务管理器模块：script-runner、npm-run-all、redrun。\n```\n## 4.实用技巧\n### 模块管理\n```javascript\nnpm list/ls <packageName>\n// 检查当前项目依赖的所有模块，包括子模块以及子模块的子模块;\n  \nnpm view/info <packageName> version\n// 模块已经发布的最新的版本信息（不包括预发布版本）\n\nnpm view/info <packageName> versions \n// 模块所有的历史版本信息（包括预发布版本）\n\nnpm view/info <packageName> <package.json中的key值> \n // 还能查看package.json中字段对应的值\n  \nnpm view/info <packageName>\n// 查看某个模块的所有信息，包括它的依赖、关键字、更新日期、贡献者、仓库地址和许可证等：\n  \nnpm outdated\n// 查看当前项目中可升级的模块：\n```\n### 查看模块文档\n```javascript\n打开模块的主页：npm home <packageName> \n```\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031781587-128c4c69-8fd0-46eb-aa47-9ac493bba51e.png#clientId=ue2a260f2-efff-4&from=paste&height=40&id=ua9be24f4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=42&originWidth=419&originalType=binary&ratio=1&size=2988&status=done&style=none&taskId=u1ba823a5-c6a0-4b2b-8e05-7d71ffa0f4b&width=396.4918670654297)\n```javascript\n打开模块的代码仓库：npm repo <packageName> \n```\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031812795-184e7b19-ebcd-419d-922d-eff34ed70de5.png#clientId=ue2a260f2-efff-4&from=paste&height=70&id=ua720c18e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=98&originWidth=569&originalType=binary&ratio=1&size=6405&status=done&style=none&taskId=ucfef75a1-157a-4f70-b349-a10fa3ffc20&width=407.493896484375)\n```javascript\n打开模块的 issues 地址：npm bugs <packageName>\n```\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031842936-4c11d87c-7132-4d06-b237-be77ee85ac9d.png#clientId=ue2a260f2-efff-4&from=paste&height=61&id=ua2b9f783&margin=%5Bobject%20Object%5D&name=image.png&originHeight=77&originWidth=543&originalType=binary&ratio=1&size=4683&status=done&style=none&taskId=u21710b30-ef8a-4bba-b6f3-50cacfb4dcf&width=428.49822998046875)\n\n\n### 本地开发模块调试\n方案一：本地打包引用     \n```javascript\n本地包：npm pack\n项目：npm i < package >（本地路径）\n```\n方案二：npm发布引用\n```javascript\nnpm i  < packageName >\n```\n方案三：npm link（重点）    本地包：npm link这会创建一个软连接，并保存到目录\nC:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules 下面\n```javascript\nnpm link < packageName >\n```\n这就将这个公共的项目通过软连接的方式引入到项目里面来了;\n这时修改common项目下面的任意代码都会实时生效，不用打包，不用更新引入包，也不用重启。需要注意的是，当项目包依赖更新后，也就是执行了 npm install xxx 之后，需要重新link项目。\n","source":"_posts/npm机制.md","raw":"---\ntitle: npm机制\ndate: 2021-11-02 14:37:02\nauthor: chenhaijia\nimg: \ntop: false\nhide: false\ncover: false\ncoverImg: \npassword: \ntoc: false\nmathjax: false\nsummary: true\ncategories: npm\ntags:\n  - npm\n  - node\n  - dependencies\n  - script\n---\n\n## 1. npm install 机制\n假设项目App中有如下三个依赖：\n```javascript\n\"dependencies\": {\n    A: \"1.0.0\",\n    B: \"1.0.0\",\n    C: \"1.0.0\"\n}\n```\nA、B、C三个模块又有如下依赖：\n```javascript\nA@1.0.0 -> D@1.0.0\nB@1.0.0 -> D@2.0.0\nC@1.0.0 -> D@2.0.0\n```\n### npm 2.x 时代 嵌套安装\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@2.0.0\n│   └── C@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@2.0.0\n\n```\n优点：\n\n- 层级结构明显\n- 简单的实现了多版本兼容\n- 保证了对依赖包无论是安装还是删除都会有统一的行为和结构\n\n缺点：\n\n- 可能造成相同模块大量冗余问题\n- 可能造成目录结构嵌套比较深的问题\n### npm 3.x开始 -扁平安装\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   ├── C@1.0.0\n│   └── D@2.0.0\n```\n可以看到，D@2.0.0模块被安装在一级node_modules中，而D@1.0.0仍被安装在A@1.0.0中。所以可以得出结论，**在执行npm install安装时，如果遇到相同依赖的包，会优先将高版本（大版本）的包放在一级node_modules中，低版本的包则会按照npm 2.x的方式依次挂在依赖包的node_modules中。**\n\n\n再在项目中安装模块E@1.0.0（依赖于模块D@1.0.0），目录结构变为：\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   ├── C@1.0.0\n│   ├── D@2.0.0\n│   ├── E@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n```\n再在项目中安装模块F@1.0.0（依赖于模块D@2.0.0），目录结构变为：\n```javascript\n├── node_modules\n│   ├── A@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   ├── B@1.0.0\n│   ├── C@1.0.0\n│   ├── D@2.0.0\n│   ├── E@1.0.0\n│   │   └── node_modules\n│   │   │   └── D@1.0.0\n│   └── F@1.0.0\n```\n可以看到，只会安装F模块。所以可以得出结论，**在一级node_moudles中已经存在依赖包的情况下，新安装的依赖包如果不存在版本冲突，则会忽略安装**。\n从以上示例可以看出，npm 3.x并没有完美的解决npm 2.x中的问题，甚至还会退化到npm 2.x的行为。\n### package-lock.json\n从npm 5.x开始，执行npm install时会自动生成一个[package-lock.json](https://link.juejin.cn/?target=https%3A%2F%2Fdocs.npmjs.com%2Ffiles%2Fpackage-lock.json) 文件。\n​\n\nnpm为了让开发者**在安全的前提下使用最新的依赖包**，在package.json中通常做了锁定大版本的操作，这样在每次npm install的时候都会拉取依赖包大版本下的最新的版本。这种机制最大的一个缺点就是当有依赖包有小版本更新时，可能会出现协同开发者的依赖包不一致的问题。\n\n\npackage-lock.json的详细描述主要由version、resolved、integrity、dev、requires、dependencies这几个字段构成\n\n- version：包唯一的版本号\n- resolved：安装源\n- integrity：表明包完整性的hash值（验证包是否已失效）\n- dev：如果为true，则此依赖关系仅是顶级模块的开发依赖关系或者是一个的传递依赖关系\n- requires：依赖包所需要的所有依赖项，对应依赖包package.json里dependencies中的依赖项\n- dependencies：依赖包node_modules中依赖的包，与顶层的dependencies一样的结构\n```javascript\n\"dependencies\": {\n  \"sass-loader\": {\n    \"version\": \"7.1.0\",\n    \"resolved\": \"http://registry.npm.taobao.org/sass-loader/download/sass-loader-7.1.0.tgz\",\n    \"integrity\": \"sha1-Fv1ROMuLQkv4p1lSihly1yqtBp0=\",\n    \"dev\": true,\n    \"requires\": {\n      \"clone-deep\": \"^2.0.1\",\n      \"loader-utils\": \"^1.0.1\",\n      \"lodash.tail\": \"^4.1.1\",\n      \"neo-async\": \"^2.5.0\",\n      \"pify\": \"^3.0.0\",\n      \"semver\": \"^5.5.0\"\n    },\n    \"dependencies\": {\n      \"pify\": {\n        \"version\": \"3.0.0\",\n        \"resolved\": \"http://registry.npm.taobao.org/pify/download/pify-3.0.0.tgz\",\n        \"integrity\": \"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\",\n        \"dev\": true\n      }\n    }\n  }\n}\n```\npackage-lock.json文件和node_modules目录结构是一一对应的，即项目目录下存在package-lock.json可以让每次安装生成的依赖目录结构保持相同。\n在开发一个应用时，建议把package-lock.json文件提交到代码版本仓库，从而让你的团队成员、运维部署人员或CI系统可以在执行npm install时安装的依赖版本都是一致的。\n但是在开发一个库时，则不应把package-lock.json文件发布到仓库中。实际上，npm也默认不会把package-lock.json文件发布出去。之所以这么做，是因为库项目一般是被其他项目依赖的，在不写死的情况下，就可以复用主项目已经加载过的包，而一旦库依赖的是精确的版本号那么可能会造成包的冗余。\n​\n\n## 2. npm 中的依赖包\n### 依赖包分类\n\n- **dependencies - 业务依赖**\n- **devDependencies - 开发依赖**\n- **peerDependencies - 同伴依赖**\n- **bundledDependencies / bundleDependencies - 打包依赖**\n- **optionalDependencies - 可选依赖**\n\n作为npm的使用者，我们常用的依赖是dependencies和devDependencies，剩下三种依赖则是作为包的发布者才会使用到的字段。\n#### **dependencies**\n这种依赖在项目最终上线或者发布npm包时所需要，即其中的依赖项应该属于线上代码的一部分。比如框架vue，第三方的组件库element-ui等，这些依赖包都是必须装在这个选项里供生产环境使用。\n通过命令npm install/i packageName -S/--save把包装在此依赖项里。如果没有指定版本，直接写一个包的名字，则安装当前npm仓库中这个包的最新版本。如果要指定版本的，可以把版本号写在包名后面，比如npm i vue@3.0.1 -S。\n```git\nnpm install/i packageName -S/--save\n\n// 从npm 5.x开始，可以不用手动添加-S/--save指令，直接执行npm i packageName把依赖包添加到dependencies中去。\n```\n​\n\n#### **devDependencies**\n这种依赖只在项目开发时所需要，即其中的依赖项不应该属于线上代码的一部分。比如构建工具webpack、gulp，预处理器babel-loader、scss-loader，测试工具e2e、chai等，这些都是辅助开发的工具包，无须在生产环境使用。\n```erlang\nnpm install/i -D/--save-dev\nnpm i --production // 线上机器（或者QA环境）上使用\n\n提示：千万别以为只有在dependencies中的模块才会被一起打包，而在devDependencies中的不会！模块能否被打包，取决于项目里是否被引入了该模块！\n```\n在业务项目中dependencies和devDependencies没有什么本质区别，只是单纯的一个规范作用，在执行npm i时两个依赖下的模块都会被下载；而在发布npm包的时候，包中的dependencies依赖项在安装该包的时候会被一起下载，devDependencies依赖项则不会。\n#### **peerDependencies**\n这种依赖的作用是提示宿主环境去安装插件在peerDependencies中所指定依赖的包，然后插件所依赖的包永远都是宿主环境统一安装的npm包，最终解决插件与所依赖包不一致的问题。\n这句话听起来可能有点拗口，举个例子来给大家说明下。element-ui@2.6.3只是提供一套基于vue的ui组件库，但它要求宿主环境需要安装指定的vue版本，所以你可以看到element项目中的package.json中具有一项配置：\n```javascript\n\"peerDependencies\": {\n    \"vue\": \"^2.5.16\"\n}\n```\n它要求宿主环境安装3.0.0 > vue@ >= 2.5.16的版本，也就是element-ui的运行依赖宿主环境提供的该版本范围的vue依赖包\n​\n\n总结：大白话：如果你安装我，那么你最好也要按照我的要求安装A、B和C。\n#### **bundledDependencies **\n这种依赖跟npm pack打包命令有关。假设package.json中有如下配置：\n```javascript\n{\n  \"name\": \"font-end\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"fe1\": \"^0.3.2\",\n    ...\n  },\n  \"devDependencies\": {\n    ...\n    \"fe2\": \"^1.0.0\"\n  },\n  \"bundledDependencies\": [\n    \"fe1\",\n    \"fe2\"\n  ]\n}\n```\n执行打包命令npm pack，会生成front-end-1.0.0.tgz压缩包，并且该压缩包中包含fe1和fe2两个安装包，这样使用者执行npm install front-end-1.0.0.tgz也会安装这两个依赖。\ntips: 在bundledDependencies中指定的依赖包，必须先在dependencies和devDependencies声明过，否则打包会报错。\n#### **optionalDependencies**\n这种依赖中的依赖项即使安装失败了，也不影响整个安装的过程。需要注意的是，如果一个依赖同时出现在dependencies和optionalDependencies中，那么optionalDependencies会获得更高的优先级，可能造成一些预期之外的效果，所以尽量要避免这种情况发生。\n​\n\ntips:  在实际项目中，如果某个包已经失效，我们通常会寻找它的替代者，或者换一个实现方案。不确定的依赖会增加代码判断和测试难度，所以这个依赖项还是尽量不要使用。\n\n\n### 依赖包版本号\nnpm采用了semver规范作为依赖版本管理方案。\n​\n\n一个npm依赖包的版本格式一般为：**主版本号.次版本号.修订号**（x.y.z），每个号的含义是：\n\n- **主版本号**（也叫大版本，major version）\n\n大版本的改动很可能是一次颠覆性的改动，也就意味着可能存在与低版本不兼容的API或者用法，（比如 vue 2 -> 3)。\n\n- **次版本号**（也叫小版本，minor version）\n\n小版本的改动应当兼容同一个大版本内的API和用法，因此应该让开发者无感。所以我们通常只说大版本号，很少会精确到小版本号。\ntips: 如果大版本号是 0 的话，表示软件处于开发初始阶段，一切都可能随时被改变，可能每个小版本之间也会存在不兼容性。所以在选择依赖时，尽量避开大版本号是 0 的包。\n\n- **修订号**（也叫补丁，patch）一般用于修复bug或者很细微的变更，也需要保持向前兼容。\n\n常见的几个版本格式如下：\n\n- **\"1.2.3\"**\n\n表示精确版本号。任何其他版本号都不匹配。在一些比较重要的线上项目中，建议使用这种方式锁定版本。\n\n- **\"^1.2.3\"**\n\n表示兼容补丁和小版本更新的版本号。官方的定义是“能够兼容除了最左侧的非 **0** 版本号之外的其他变化。\n```javascript\n\"^1.2.3\" 等价于 \">= 1.2.3 < 2.0.0\"。即只要最左侧的 \"1\" 不变，其他都可以改变。所以 \"1.2.4\", \"1.3.0\" 都可以兼容。\n\n\"^0.2.3\" 等价于 \">= 0.2.3 < 0.3.0\"。因为最左侧的是 \"0\"，那么只要第二位 \"2\" 不变，其他的都兼容，比如 \"0.2.4\" 和 \"0.2.99\"。\n\n\"^0.0.3\" 等价于 \">= 0.0.3 < 0.0.4\"。大版本号和小版本号都为 \"0\" ，所以也就等价于精确的 \"0.0.3\"。\n```\n\n- **\"~1.2.3\"**\n\n表示只兼容补丁更新的版本号。关于 ~ 的定义分为两部分：如果列出了小版本号（第二位），则只兼容补丁（第三位）的修改；如果没有列出小版本号，则兼容第二和第三位的修改。我们分两种情况理解一下这个定义：\n```javascript\n\"~1.2.3\" 列出了小版本号 \"2\"，因此只兼容第三位的修改，等价于 \">= 1.2.3 < 1.3.0\"。\n\n\"~1.2\" 也列出了小版本号 \"2\"，因此和上面一样兼容第三位的修改，等价于 \">= 1.2.0 < 1.3.0\"。\n\n\"~1\" 没有列出小版本号，可以兼容第二第三位的修改，因此等价于 \">= 1.0.0 < 2.0.0\"\n```\n\n- **\"1.x\" 、\"1.X\"、1.*\"、\"1\"、\"*\"**\n```javascript\n\"*\" 、\"x\" 或者 （空） 表示可以匹配任何版本。\n\n\"1.x\", \"1.*\" 和 \"1\" 表示匹配主版本号为 \"1\" 的所有版本，因此等价于 \">= 1.0.0 < 2.0.0\"。\n\n\"1.2.x\", \"1.2.*\" 和 \"1.2\" 表示匹配版本号以 \"1.2\" 开头的所有版本，因此等价于 \">= 1.2.0 < 1.3.0\"。\n```\n\n- **\"1.2.3-alpha.1\"、\"1.2.3-beta.1\"、\"1.2.3-rc.1\"**\n```javascript\nalpha(α)：预览版，或者叫内部测试版；一般不向外部发布，会有很多bug；一般只有测试人员使用。\n\nbeta(β)：测试版，或者叫公开测试版；这个阶段的版本会一直加入新的功能；在alpha版之后推出。\n\nrc(release candidate)：最终测试版本；可能成为最终产品的候选版本，如果未出现问题则可发布成为正式版本。\n```\n```javascript\n\"~1.2.4-alpha.1\" 表示 \">=1.2.4-alpha.1 < 1.3.0\"。这样 \"1.2.5\", \"1.2.4-alpha.2\" 都符合条件，而 \"1.2.5-alpha.1\", \"1.3.0\" 不符合。\n\n\"^1.2.4-alpha.1\" 表示 \">=1.2.4-alpha.1 < 2.0.0\"。这样 \"1.2.5\", \"1.2.4-alpha.2\", \"1.3.0\" 都符合条件，而 \"1.2.5-alpha.1\", \"2.0.0\" 不符合。\n\n// >1.2.4-alpha.1\"表示接受 \"1.2.4-alpha\" 版本下所有大于 1 的预发布版本。因此 \"1.2.4-alpha.7\" 是符合要求的，但 \"1.2.4-beta.1\" 和 \"1.2.5-alpha.2\" 都不符合。此外如果是正式版本（不带预发布关键词），只要版本号符合要求即可，不检查预发布版本号，例如 \"1.2.5\", \"1.3.0\" 都是认可的。\n```\n以包开发者的角度来考虑这个问题：假设当前线上版本是 \"1.2.3\"，如果我作了一些改动需要发布版本 \"1.2.4\"，但我不想直接上线（因为使用 \"~1.2.3\" 或者 \"^1.2.3\" 的用户都会直接静默更新），这就需要使用预发布功能。因此我可能会发布 \"1.2.4-alpha.1\" 或者 \"1.2.4-beta.1\" 等等。\n### 依赖包版本管理\n\n1. 在大版本相同的前提下，如果一个模块在package.json中的小版本要**大于**package-lock.json中的小版本，则在执行npm install时，会将该模块更新到大版本下的最新的版本，并将版本号更新至package-lock.json。如果**小于**，则被package-lock.json中的版本锁定。\n```javascript\n// package-lock.json 中原版本\n\"clipboard\": {\n  \"version\": \"1.5.10\", \n},\n\"vue\": {\n  \"version\": \"2.6.10\",\n}\n// package.json 中修改版本\n\"dependencies\": {\n  \"clipboard\": \"^1.5.12\",\n  \"vue\": \"^2.5.6\"\n  ...\n}\n\n// 执行完 npm install 后，package-lock.json 中\n\"clipboard\": {\n  \"version\": \"1.7.1\", // 更新到大版本下的最新版本\n},\n\"vue\": {\n  \"version\": \"2.6.10\", // 版本没发生改变\n}\n```\n\n2. 如果一个模块在package.json和package-lock.json中的大版本不相同，则在执行npm install时，都将根据package.json中大版本下的最新版本进行更新，并将版本号更新至package-lock.json。\n```javascript\n// package-lock.json 中原版本\n\"clipboard\": {\n  \"version\": \"2.0.4\",\n}\n// package.json 中修改版本\n\"dependencies\": {\n  \"clipboard\": \"^1.6.1\",\n}\n\n// 执行完npm install后，package-lock.json 中\n\"clipboard\": {\n  \"version\": \"1.7.1\", // 更新到大版本下的最新版本\n}\n```\n\n3. 如果一个模块在package.json中有记录，而在package-lock.json中无记录，执行npm install后，则会在package-lock.json生成该模块的详细记录。同理，一个模块在package.json中无记录，而在package-lock.json中有记录，执行npm install后，则会在package-lock.json删除该模块的详细记录。\n\n\n\n## 3. npm scripts 脚本\npackage.json中的 [scripts](https://link.juejin.cn/?target=https%3A%2F%2Fdocs.npmjs.com%2Fmisc%2Fscripts) 字段可以用来自定义脚本命令，它的每一个属性，对应一段脚本。以vue-cli3为例：\n```javascript\n\"scripts\": {\n  \"serve\": \"vue-cli-service serve\",\n  ...\n}\n```\n这样就可以通过npm run serve脚本代替vue-cli-service serve脚本来启动项目，而无需每次敲一遍这么冗长的脚本。\n### 工作原理\n#### package.json 中的 bin 字段\npackage.json中的字段 [bin](https://link.juejin.cn/?target=https%3A%2F%2Fdocs.npmjs.com%2Ffiles%2Fpackage.json.html%23bin) 表示的是一个**可执行文件到指定文件源的映射**。通过npm bin指令显示当前项目的bin目录的路径。例如在@vue/cli的package.json中：\n例如:在chj-ip-tool的package.json中：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1634778717199-d5160d94-06bf-4a78-bc8b-cee18b0967e8.png#clientId=ubcbcb43a-f3df-4&from=paste&height=75&id=u78df9db5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=75&originWidth=259&originalType=binary&ratio=1&size=2649&status=done&style=none&taskId=u3ca378d9-3c35-4301-a6b8-c398725a4a1&width=259)\n全局安装: \n如果全局安装chj-ip-tool的话， npm会在全局可执行bin文件安装目录\t\t\tC:\\Users\\Administrator\\AppData\\Roaming\\npm下创建一个指向C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\chj-ip-tool\\bin\\cli.js文件的名为my-ip的软链接，这样就可以直接在终端输入my-ip来执行相关命令。\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032050100-a436e440-cf65-4a1b-a1e8-88eae7c7d5d8.png#clientId=ue2a260f2-efff-4&from=paste&height=40&id=u73dbfd80&margin=%5Bobject%20Object%5D&name=image.png&originHeight=62&originWidth=907&originalType=binary&ratio=1&size=29245&status=done&style=none&taskId=u7f4aa3cd-80fb-439e-80b7-18c11e136b2&width=588.4977722167969)\n局部安装:\n如果局部安装chj-ip-tool的话，npm则会在本地项目./node_modules/.bin目录下创建一个指向./node_moudles/haijia-tool/bin/cli.js名为my-ip的软链接，这个时候如果想要执行my-ip命令有三种方式：\n```javascript\n1. 直接输入.\\node_modules\\.bin\\my-ip来执行。 \n2. 使用npx vue命令来执行（npx 的作用就是为了方便调用项目内部安装的模块） \t\n3. 使用npm run命令来执行（npm run会将当前项目的./node_modules/.bin的绝对路径加入全局环境变量中）\n```\n#### PATH 环境变量\n在terminal中执行命令时，**命令会在PATH环境变量里包含的路径中去寻找相同名字的可执行文件**。局部安装的包只在./node_modules/.bin中注册了它们的可执行文件，不会被包含在PATH环境变量中，这个时候在terminal中输入命令将会报无法找到的错误。\n**那为什么通过npm run可以执行局部安装的命令行包呢？**\n​\n\nnpm 脚本的原理非常简单。每当执行npm run，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。\n比较特别的是，npm run新建的这个 Shell，会将当前目录的node_modules/.bin子目录加入PATH变量，执行结束后，再将PATH变量恢复原样。\n我们来验证下这个说法。首先执行 cmd =>path 查看当前所有的环境变量，可以看到PATH环境变量为：\n```javascript\nPATH=C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm\n```\n\t再在当前项目下执行npm run env查看脚本运行时的环境变量，可以看到PATH环境变量为：\n```javascript\nPath=D:\\前端软件\\node\\node_modules\\npm\\node_modules\\npm-lifecycle\\node-gyp-bin;D:\\project-demo\\ip-tool\\node_modules\\.bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软 \n件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm\n```\n这意味着，当前目录的node_modules/.bin子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写mocha test就可以了。\n```javascript\n\"test\": \"mocha test\"\n\"test\": \"./node_modules/.bin/mocha test\" // 不必带上路径\n```\n由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。\nnpm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是0，npm 就认为这个脚本执行失败。\n​\n\nPATH环境变量，是告诉系统，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到哪些目录下去寻找。\n​\n\n### 用法指南\n#### 传入参数\nnode处理scripts参数其实很简单，比如：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032201141-537a223f-f405-4a01-989f-fd10365bc906.png#clientId=ue2a260f2-efff-4&from=paste&height=132&id=u6bc9ef8c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=150&originWidth=631&originalType=binary&ratio=1&size=24772&status=done&style=none&taskId=u9e4d9430-50ea-428a-a084-4784028eb23&width=553.4920349121094)\n除了第一个可执行的命令，以空格分割的任何字符串都是参数，并且都能通过process.argv属性访问。执行npm run serve3命令，process.argv的具体内容为：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032241556-ac230118-702b-4ca3-a0ea-f2e66fbaae7f.png#clientId=ue2a260f2-efff-4&from=paste&height=176&id=u21b3f8d9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=200&originWidth=631&originalType=binary&ratio=1&size=29444&status=done&style=none&taskId=u1dbb903d-9093-4da8-aa23-7cfc9594ad1&width=554.4859008789062)\n很多命令行包之所以这么写，都是依赖了 minimist 或者  yargs ，coa等参数解析工具来对命令行参数进行解析。以minimist对vue-cli-service serve --mode=dev --mobile -config build/example.js解析为例，解析后的结果为：\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032274531-2b333d35-2c45-47c5-aa23-9589eff91557.png#clientId=ue2a260f2-efff-4&from=paste&height=84&id=u5742ba09&margin=%5Bobject%20Object%5D&name=image.png&originHeight=167&originWidth=777&originalType=binary&ratio=1&size=11794&status=done&style=none&taskId=ub57736d4-bd43-4121-8ea8-3599438e970&width=388.5)\n我们还可以通过命令行传参的形式来进行参数传递：\n```javascript\nnpm run serve --params  // 参数params将转化成process.env.npm_config_params = true\nnpm run serve --params=123 // 参数params将转化成process.env.npm_config_params = 123\nnpm run serve -params  // 等同于--params参数\n\nnpm run serve -- --params  // 将--params参数添加到process.argv数组中\nnpm run serve params  // 将params参数添加到process.argv数组中\nnpm run serve -- params  // 将params参数添加到process.argv数组中\n```\n#### 多命令运行\n##### 串行执行\n串行执行，要求前一个任务执行成功以后才能执行下一个任务，使用&&符号来连接。\n```javascript\nnpm run script1 && npm run script2\n串行命令执行过程中，只要一个命令执行失败，则整个脚本终止。\n```\n##### 并行执行\n并行执行，就是多个命令可以同时的平行执行，使用&符号来连接。\n```javascript\nnpm run script1 & npm run script2\n// 这两个符号是Bash的内置功能。此外，还可以使用第三方的任务管理器模块：script-runner、npm-run-all、redrun。\n```\n## 4.实用技巧\n### 模块管理\n```javascript\nnpm list/ls <packageName>\n// 检查当前项目依赖的所有模块，包括子模块以及子模块的子模块;\n  \nnpm view/info <packageName> version\n// 模块已经发布的最新的版本信息（不包括预发布版本）\n\nnpm view/info <packageName> versions \n// 模块所有的历史版本信息（包括预发布版本）\n\nnpm view/info <packageName> <package.json中的key值> \n // 还能查看package.json中字段对应的值\n  \nnpm view/info <packageName>\n// 查看某个模块的所有信息，包括它的依赖、关键字、更新日期、贡献者、仓库地址和许可证等：\n  \nnpm outdated\n// 查看当前项目中可升级的模块：\n```\n### 查看模块文档\n```javascript\n打开模块的主页：npm home <packageName> \n```\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031781587-128c4c69-8fd0-46eb-aa47-9ac493bba51e.png#clientId=ue2a260f2-efff-4&from=paste&height=40&id=ua9be24f4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=42&originWidth=419&originalType=binary&ratio=1&size=2988&status=done&style=none&taskId=u1ba823a5-c6a0-4b2b-8e05-7d71ffa0f4b&width=396.4918670654297)\n```javascript\n打开模块的代码仓库：npm repo <packageName> \n```\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031812795-184e7b19-ebcd-419d-922d-eff34ed70de5.png#clientId=ue2a260f2-efff-4&from=paste&height=70&id=ua720c18e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=98&originWidth=569&originalType=binary&ratio=1&size=6405&status=done&style=none&taskId=ucfef75a1-157a-4f70-b349-a10fa3ffc20&width=407.493896484375)\n```javascript\n打开模块的 issues 地址：npm bugs <packageName>\n```\n![image.png](https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031842936-4c11d87c-7132-4d06-b237-be77ee85ac9d.png#clientId=ue2a260f2-efff-4&from=paste&height=61&id=ua2b9f783&margin=%5Bobject%20Object%5D&name=image.png&originHeight=77&originWidth=543&originalType=binary&ratio=1&size=4683&status=done&style=none&taskId=u21710b30-ef8a-4bba-b6f3-50cacfb4dcf&width=428.49822998046875)\n\n\n### 本地开发模块调试\n方案一：本地打包引用     \n```javascript\n本地包：npm pack\n项目：npm i < package >（本地路径）\n```\n方案二：npm发布引用\n```javascript\nnpm i  < packageName >\n```\n方案三：npm link（重点）    本地包：npm link这会创建一个软连接，并保存到目录\nC:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules 下面\n```javascript\nnpm link < packageName >\n```\n这就将这个公共的项目通过软连接的方式引入到项目里面来了;\n这时修改common项目下面的任意代码都会实时生效，不用打包，不用更新引入包，也不用重启。需要注意的是，当项目包依赖更新后，也就是执行了 npm install xxx 之后，需要重新link项目。\n","slug":"npm机制","published":1,"updated":"2021-11-02T07:05:22.736Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckvhrljlv00095su471xi4cac","content":"<h2 id=\"1-npm-install-机制\"><a href=\"#1-npm-install-机制\" class=\"headerlink\" title=\"1. npm install 机制\"></a>1. npm install 机制</h2><p>假设项目App中有如下三个依赖：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: {</span><br><span class=\"line\">    <span class=\"attr\">A</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">B</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">C</span>: <span class=\"string\">\"1.0.0\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>A、B、C三个模块又有如下依赖：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A@<span class=\"number\">1.0</span><span class=\"number\">.0</span> -&gt; D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">B@<span class=\"number\">1.0</span><span class=\"number\">.0</span> -&gt; D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">C@<span class=\"number\">1.0</span><span class=\"number\">.0</span> -&gt; D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"npm-2-x-时代-嵌套安装\"><a href=\"#npm-2-x-时代-嵌套安装\" class=\"headerlink\" title=\"npm 2.x 时代 嵌套安装\"></a>npm 2.x 时代 嵌套安装</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; └── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<p>优点：</p>\n<ul>\n<li>层级结构明显</li>\n<li>简单的实现了多版本兼容</li>\n<li>保证了对依赖包无论是安装还是删除都会有统一的行为和结构</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>可能造成相同模块大量冗余问题</li>\n<li>可能造成目录结构嵌套比较深的问题<h3 id=\"npm-3-x开始-扁平安装\"><a href=\"#npm-3-x开始-扁平安装\" class=\"headerlink\" title=\"npm 3.x开始 -扁平安装\"></a>npm 3.x开始 -扁平安装</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; └── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></tbody></table></figure>\n可以看到，<a href=\"mailto:D@2.0.0\">D@2.0.0</a>模块被安装在一级node_modules中，而<a href=\"mailto:D@1.0.0\">D@1.0.0</a>仍被安装在<a href=\"mailto:A@1.0.0\">A@1.0.0</a>中。所以可以得出结论，<strong>在执行npm install安装时，如果遇到相同依赖的包，会优先将高版本（大版本）的包放在一级node_modules中，低版本的包则会按照npm 2.x的方式依次挂在依赖包的node_modules中。</strong></li>\n</ul>\n<p>再在项目中安装模块<a href=\"mailto:E@1.0.0\">E@1.0.0</a>（依赖于模块<a href=\"mailto:D@1.0.0\">D@1.0.0</a>），目录结构变为：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── E@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></tbody></table></figure>\n<p>再在项目中安装模块<a href=\"mailto:F@1.0.0\">F@1.0.0</a>（依赖于模块<a href=\"mailto:D@2.0.0\">D@2.0.0</a>），目录结构变为：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; ├── E@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; └── node_modules</span><br><span class=\"line\">│&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│&nbsp;&nbsp; └── F@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></tbody></table></figure>\n<p>可以看到，只会安装F模块。所以可以得出结论，<strong>在一级node_moudles中已经存在依赖包的情况下，新安装的依赖包如果不存在版本冲突，则会忽略安装</strong>。<br>从以上示例可以看出，npm 3.x并没有完美的解决npm 2.x中的问题，甚至还会退化到npm 2.x的行为。</p>\n<h3 id=\"package-lock-json\"><a href=\"#package-lock-json\" class=\"headerlink\" title=\"package-lock.json\"></a>package-lock.json</h3><p>从npm 5.x开始，执行npm install时会自动生成一个<a href=\"https://link.juejin.cn/?target=https://docs.npmjs.com/files/package-lock.json\">package-lock.json</a> 文件。<br>​</p>\n<p>npm为了让开发者<strong>在安全的前提下使用最新的依赖包</strong>，在package.json中通常做了锁定大版本的操作，这样在每次npm install的时候都会拉取依赖包大版本下的最新的版本。这种机制最大的一个缺点就是当有依赖包有小版本更新时，可能会出现协同开发者的依赖包不一致的问题。</p>\n<p>package-lock.json的详细描述主要由version、resolved、integrity、dev、requires、dependencies这几个字段构成</p>\n<ul>\n<li>version：包唯一的版本号</li>\n<li>resolved：安装源</li>\n<li>integrity：表明包完整性的hash值（验证包是否已失效）</li>\n<li>dev：如果为true，则此依赖关系仅是顶级模块的开发依赖关系或者是一个的传递依赖关系</li>\n<li>requires：依赖包所需要的所有依赖项，对应依赖包package.json里dependencies中的依赖项</li>\n<li>dependencies：依赖包node_modules中依赖的包，与顶层的dependencies一样的结构<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"sass-loader\"</span>: {</span><br><span class=\"line\">    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"7.1.0\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"resolved\"</span>: <span class=\"string\">\"http://registry.npm.taobao.org/sass-loader/download/sass-loader-7.1.0.tgz\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"integrity\"</span>: <span class=\"string\">\"sha1-Fv1ROMuLQkv4p1lSihly1yqtBp0=\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"string\">\"requires\"</span>: {</span><br><span class=\"line\">      <span class=\"string\">\"clone-deep\"</span>: <span class=\"string\">\"^2.0.1\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"loader-utils\"</span>: <span class=\"string\">\"^1.0.1\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"lodash.tail\"</span>: <span class=\"string\">\"^4.1.1\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"neo-async\"</span>: <span class=\"string\">\"^2.5.0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"pify\"</span>: <span class=\"string\">\"^3.0.0\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"semver\"</span>: <span class=\"string\">\"^5.5.0\"</span></span><br><span class=\"line\">    },</span><br><span class=\"line\">    <span class=\"string\">\"dependencies\"</span>: {</span><br><span class=\"line\">      <span class=\"string\">\"pify\"</span>: {</span><br><span class=\"line\">        <span class=\"string\">\"version\"</span>: <span class=\"string\">\"3.0.0\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"resolved\"</span>: <span class=\"string\">\"http://registry.npm.taobao.org/pify/download/pify-3.0.0.tgz\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"integrity\"</span>: <span class=\"string\">\"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"dev\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      }</span><br><span class=\"line\">    }</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\npackage-lock.json文件和node_modules目录结构是一一对应的，即项目目录下存在package-lock.json可以让每次安装生成的依赖目录结构保持相同。<br>在开发一个应用时，建议把package-lock.json文件提交到代码版本仓库，从而让你的团队成员、运维部署人员或CI系统可以在执行npm install时安装的依赖版本都是一致的。<br>但是在开发一个库时，则不应把package-lock.json文件发布到仓库中。实际上，npm也默认不会把package-lock.json文件发布出去。之所以这么做，是因为库项目一般是被其他项目依赖的，在不写死的情况下，就可以复用主项目已经加载过的包，而一旦库依赖的是精确的版本号那么可能会造成包的冗余。<br>​</li>\n</ul>\n<h2 id=\"2-npm-中的依赖包\"><a href=\"#2-npm-中的依赖包\" class=\"headerlink\" title=\"2. npm 中的依赖包\"></a>2. npm 中的依赖包</h2><h3 id=\"依赖包分类\"><a href=\"#依赖包分类\" class=\"headerlink\" title=\"依赖包分类\"></a>依赖包分类</h3><ul>\n<li><strong>dependencies - 业务依赖</strong></li>\n<li><strong>devDependencies - 开发依赖</strong></li>\n<li><strong>peerDependencies - 同伴依赖</strong></li>\n<li><strong>bundledDependencies / bundleDependencies - 打包依赖</strong></li>\n<li><strong>optionalDependencies - 可选依赖</strong></li>\n</ul>\n<p>作为npm的使用者，我们常用的依赖是dependencies和devDependencies，剩下三种依赖则是作为包的发布者才会使用到的字段。</p>\n<h4 id=\"dependencies\"><a href=\"#dependencies\" class=\"headerlink\" title=\"dependencies\"></a><strong>dependencies</strong></h4><p>这种依赖在项目最终上线或者发布npm包时所需要，即其中的依赖项应该属于线上代码的一部分。比如框架vue，第三方的组件库element-ui等，这些依赖包都是必须装在这个选项里供生产环境使用。<br>通过命令npm install/i packageName -S/–save把包装在此依赖项里。如果没有指定版本，直接写一个包的名字，则安装当前npm仓库中这个包的最新版本。如果要指定版本的，可以把版本号写在包名后面，比如npm i <a href=\"mailto:vue@3.0.1\">vue@3.0.1</a> -S。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install/i packageName -S/--save</span><br><span class=\"line\"></span><br><span class=\"line\">// 从npm 5.x开始，可以不用手动添加-S/--save指令，直接执行npm i packageName把依赖包添加到dependencies中去。</span><br></pre></td></tr></tbody></table></figure>\n<p>​</p>\n<h4 id=\"devDependencies\"><a href=\"#devDependencies\" class=\"headerlink\" title=\"devDependencies\"></a><strong>devDependencies</strong></h4><p>这种依赖只在项目开发时所需要，即其中的依赖项不应该属于线上代码的一部分。比如构建工具webpack、gulp，预处理器babel-loader、scss-loader，测试工具e2e、chai等，这些都是辅助开发的工具包，无须在生产环境使用。</p>\n<figure class=\"highlight erlang\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install/i -D/--save-dev</span><br><span class=\"line\">npm i --production // 线上机器（或者QA环境）上使用</span><br><span class=\"line\"></span><br><span class=\"line\">提示：千万别以为只有在dependencies中的模块才会被一起打包，而在devDependencies中的不会！模块能否被打包，取决于项目里是否被引入了该模块！</span><br></pre></td></tr></tbody></table></figure>\n<p>在业务项目中dependencies和devDependencies没有什么本质区别，只是单纯的一个规范作用，在执行npm i时两个依赖下的模块都会被下载；而在发布npm包的时候，包中的dependencies依赖项在安装该包的时候会被一起下载，devDependencies依赖项则不会。</p>\n<h4 id=\"peerDependencies\"><a href=\"#peerDependencies\" class=\"headerlink\" title=\"peerDependencies\"></a><strong>peerDependencies</strong></h4><p>这种依赖的作用是提示宿主环境去安装插件在peerDependencies中所指定依赖的包，然后插件所依赖的包永远都是宿主环境统一安装的npm包，最终解决插件与所依赖包不一致的问题。<br>这句话听起来可能有点拗口，举个例子来给大家说明下。<a href=\"mailto:element-ui@2.6.3\">element-ui@2.6.3</a>只是提供一套基于vue的ui组件库，但它要求宿主环境需要安装指定的vue版本，所以你可以看到element项目中的package.json中具有一项配置：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"peerDependencies\"</span>: {</span><br><span class=\"line\">    <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"^2.5.16\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>它要求宿主环境安装3.0.0 &gt; vue@ &gt;= 2.5.16的版本，也就是element-ui的运行依赖宿主环境提供的该版本范围的vue依赖包<br>​</p>\n<p>总结：大白话：如果你安装我，那么你最好也要按照我的要求安装A、B和C。</p>\n<h4 id=\"bundledDependencies\"><a href=\"#bundledDependencies\" class=\"headerlink\" title=\"**bundledDependencies **\"></a>**bundledDependencies **</h4><p>这种依赖跟npm pack打包命令有关。假设package.json中有如下配置：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"font-end\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"dependencies\"</span>: {</span><br><span class=\"line\">    <span class=\"string\">\"fe1\"</span>: <span class=\"string\">\"^0.3.2\"</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"string\">\"devDependencies\"</span>: {</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"string\">\"fe2\"</span>: <span class=\"string\">\"^1.0.0\"</span></span><br><span class=\"line\">  },</span><br><span class=\"line\">  <span class=\"string\">\"bundledDependencies\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"fe1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"fe2\"</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>执行打包命令npm pack，会生成front-end-1.0.0.tgz压缩包，并且该压缩包中包含fe1和fe2两个安装包，这样使用者执行npm install front-end-1.0.0.tgz也会安装这两个依赖。<br>tips: 在bundledDependencies中指定的依赖包，必须先在dependencies和devDependencies声明过，否则打包会报错。</p>\n<h4 id=\"optionalDependencies\"><a href=\"#optionalDependencies\" class=\"headerlink\" title=\"optionalDependencies\"></a><strong>optionalDependencies</strong></h4><p>这种依赖中的依赖项即使安装失败了，也不影响整个安装的过程。需要注意的是，如果一个依赖同时出现在dependencies和optionalDependencies中，那么optionalDependencies会获得更高的优先级，可能造成一些预期之外的效果，所以尽量要避免这种情况发生。<br>​</p>\n<p>tips:  在实际项目中，如果某个包已经失效，我们通常会寻找它的替代者，或者换一个实现方案。不确定的依赖会增加代码判断和测试难度，所以这个依赖项还是尽量不要使用。</p>\n<h3 id=\"依赖包版本号\"><a href=\"#依赖包版本号\" class=\"headerlink\" title=\"依赖包版本号\"></a>依赖包版本号</h3><p>npm采用了semver规范作为依赖版本管理方案。<br>​</p>\n<p>一个npm依赖包的版本格式一般为：<strong>主版本号.次版本号.修订号</strong>（x.y.z），每个号的含义是：</p>\n<ul>\n<li><strong>主版本号</strong>（也叫大版本，major version）</li>\n</ul>\n<p>大版本的改动很可能是一次颠覆性的改动，也就意味着可能存在与低版本不兼容的API或者用法，（比如 vue 2 -&gt; 3)。</p>\n<ul>\n<li><strong>次版本号</strong>（也叫小版本，minor version）</li>\n</ul>\n<p>小版本的改动应当兼容同一个大版本内的API和用法，因此应该让开发者无感。所以我们通常只说大版本号，很少会精确到小版本号。<br>tips: 如果大版本号是 0 的话，表示软件处于开发初始阶段，一切都可能随时被改变，可能每个小版本之间也会存在不兼容性。所以在选择依赖时，尽量避开大版本号是 0 的包。</p>\n<ul>\n<li><strong>修订号</strong>（也叫补丁，patch）一般用于修复bug或者很细微的变更，也需要保持向前兼容。</li>\n</ul>\n<p>常见的几个版本格式如下：</p>\n<ul>\n<li><strong>“1.2.3”</strong></li>\n</ul>\n<p>表示精确版本号。任何其他版本号都不匹配。在一些比较重要的线上项目中，建议使用这种方式锁定版本。</p>\n<ul>\n<li><strong>“^1.2.3”</strong></li>\n</ul>\n<p>表示兼容补丁和小版本更新的版本号。官方的定义是“能够兼容除了最左侧的非 <strong>0</strong> 版本号之外的其他变化。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"^1.2.3\"</span> 等价于 <span class=\"string\">\"&gt;= 1.2.3 &lt; 2.0.0\"</span>。即只要最左侧的 <span class=\"string\">\"1\"</span> 不变，其他都可以改变。所以 <span class=\"string\">\"1.2.4\"</span>, <span class=\"string\">\"1.3.0\"</span> 都可以兼容。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"^0.2.3\"</span> 等价于 <span class=\"string\">\"&gt;= 0.2.3 &lt; 0.3.0\"</span>。因为最左侧的是 <span class=\"string\">\"0\"</span>，那么只要第二位 <span class=\"string\">\"2\"</span> 不变，其他的都兼容，比如 <span class=\"string\">\"0.2.4\"</span> 和 <span class=\"string\">\"0.2.99\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"^0.0.3\"</span> 等价于 <span class=\"string\">\"&gt;= 0.0.3 &lt; 0.0.4\"</span>。大版本号和小版本号都为 <span class=\"string\">\"0\"</span> ，所以也就等价于精确的 <span class=\"string\">\"0.0.3\"</span>。</span><br></pre></td></tr></tbody></table></figure>\n\n<ul>\n<li><strong>“~1.2.3”</strong></li>\n</ul>\n<p>表示只兼容补丁更新的版本号。关于 ~ 的定义分为两部分：如果列出了小版本号（第二位），则只兼容补丁（第三位）的修改；如果没有列出小版本号，则兼容第二和第三位的修改。我们分两种情况理解一下这个定义：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"~1.2.3\"</span> 列出了小版本号 <span class=\"string\">\"2\"</span>，因此只兼容第三位的修改，等价于 <span class=\"string\">\"&gt;= 1.2.3 &lt; 1.3.0\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"~1.2\"</span> 也列出了小版本号 <span class=\"string\">\"2\"</span>，因此和上面一样兼容第三位的修改，等价于 <span class=\"string\">\"&gt;= 1.2.0 &lt; 1.3.0\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"~1\"</span> 没有列出小版本号，可以兼容第二第三位的修改，因此等价于 <span class=\"string\">\"&gt;= 1.0.0 &lt; 2.0.0\"</span></span><br></pre></td></tr></tbody></table></figure>\n\n<ul>\n<li><p><strong>“1.x” 、”1.X”、1.<em>“、”1”、”</em>“</strong></p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"*\"</span> 、<span class=\"string\">\"x\"</span> 或者 （空） 表示可以匹配任何版本。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"1.x\"</span>, <span class=\"string\">\"1.*\"</span> 和 <span class=\"string\">\"1\"</span> 表示匹配主版本号为 <span class=\"string\">\"1\"</span> 的所有版本，因此等价于 <span class=\"string\">\"&gt;= 1.0.0 &lt; 2.0.0\"</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"1.2.x\"</span>, <span class=\"string\">\"1.2.*\"</span> 和 <span class=\"string\">\"1.2\"</span> 表示匹配版本号以 <span class=\"string\">\"1.2\"</span> 开头的所有版本，因此等价于 <span class=\"string\">\"&gt;= 1.2.0 &lt; 1.3.0\"</span>。</span><br></pre></td></tr></tbody></table></figure></li>\n<li><p><strong>“1.2.3-alpha.1”、”1.2.3-beta.1”、”1.2.3-rc.1”</strong></p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alpha(α)：预览版，或者叫内部测试版；一般不向外部发布，会有很多bug；一般只有测试人员使用。</span><br><span class=\"line\"></span><br><span class=\"line\">beta(β)：测试版，或者叫公开测试版；这个阶段的版本会一直加入新的功能；在alpha版之后推出。</span><br><span class=\"line\"></span><br><span class=\"line\">rc(release candidate)：最终测试版本；可能成为最终产品的候选版本，如果未出现问题则可发布成为正式版本。</span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"~1.2.4-alpha.1\"</span> 表示 <span class=\"string\">\"&gt;=1.2.4-alpha.1 &lt; 1.3.0\"</span>。这样 <span class=\"string\">\"1.2.5\"</span>, <span class=\"string\">\"1.2.4-alpha.2\"</span> 都符合条件，而 <span class=\"string\">\"1.2.5-alpha.1\"</span>, <span class=\"string\">\"1.3.0\"</span> 不符合。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"^1.2.4-alpha.1\"</span> 表示 <span class=\"string\">\"&gt;=1.2.4-alpha.1 &lt; 2.0.0\"</span>。这样 <span class=\"string\">\"1.2.5\"</span>, <span class=\"string\">\"1.2.4-alpha.2\"</span>, <span class=\"string\">\"1.3.0\"</span> 都符合条件，而 <span class=\"string\">\"1.2.5-alpha.1\"</span>, <span class=\"string\">\"2.0.0\"</span> 不符合。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &gt;1.2.4-alpha.1\"表示接受 \"1.2.4-alpha\" 版本下所有大于 1 的预发布版本。因此 \"1.2.4-alpha.7\" 是符合要求的，但 \"1.2.4-beta.1\" 和 \"1.2.5-alpha.2\" 都不符合。此外如果是正式版本（不带预发布关键词），只要版本号符合要求即可，不检查预发布版本号，例如 \"1.2.5\", \"1.3.0\" 都是认可的。</span></span><br></pre></td></tr></tbody></table></figure>\n<p>以包开发者的角度来考虑这个问题：假设当前线上版本是 “1.2.3”，如果我作了一些改动需要发布版本 “1.2.4”，但我不想直接上线（因为使用 “~1.2.3” 或者 “^1.2.3” 的用户都会直接静默更新），这就需要使用预发布功能。因此我可能会发布 “1.2.4-alpha.1” 或者 “1.2.4-beta.1” 等等。</p>\n<h3 id=\"依赖包版本管理\"><a href=\"#依赖包版本管理\" class=\"headerlink\" title=\"依赖包版本管理\"></a>依赖包版本管理</h3></li>\n</ul>\n<ol>\n<li><p>在大版本相同的前提下，如果一个模块在package.json中的小版本要<strong>大于</strong>package-lock.json中的小版本，则在执行npm install时，会将该模块更新到大版本下的最新的版本，并将版本号更新至package-lock.json。如果<strong>小于</strong>，则被package-lock.json中的版本锁定。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package-lock.json 中原版本</span></span><br><span class=\"line\"><span class=\"string\">\"clipboard\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.5.10\"</span>, </span><br><span class=\"line\">},</span><br><span class=\"line\"><span class=\"string\">\"vue\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.6.10\"</span>,</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// package.json 中修改版本</span></span><br><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"clipboard\"</span>: <span class=\"string\">\"^1.5.12\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"vue\"</span>: <span class=\"string\">\"^2.5.6\"</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行完 npm install 后，package-lock.json 中</span></span><br><span class=\"line\"><span class=\"string\">\"clipboard\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.7.1\"</span>, <span class=\"comment\">// 更新到大版本下的最新版本</span></span><br><span class=\"line\">},</span><br><span class=\"line\"><span class=\"string\">\"vue\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.6.10\"</span>, <span class=\"comment\">// 版本没发生改变</span></span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure></li>\n<li><p>如果一个模块在package.json和package-lock.json中的大版本不相同，则在执行npm install时，都将根据package.json中大版本下的最新版本进行更新，并将版本号更新至package-lock.json。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package-lock.json 中原版本</span></span><br><span class=\"line\"><span class=\"string\">\"clipboard\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"2.0.4\"</span>,</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// package.json 中修改版本</span></span><br><span class=\"line\"><span class=\"string\">\"dependencies\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"clipboard\"</span>: <span class=\"string\">\"^1.6.1\"</span>,</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行完npm install后，package-lock.json 中</span></span><br><span class=\"line\"><span class=\"string\">\"clipboard\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.7.1\"</span>, <span class=\"comment\">// 更新到大版本下的最新版本</span></span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure></li>\n<li><p>如果一个模块在package.json中有记录，而在package-lock.json中无记录，执行npm install后，则会在package-lock.json生成该模块的详细记录。同理，一个模块在package.json中无记录，而在package-lock.json中有记录，执行npm install后，则会在package-lock.json删除该模块的详细记录。</p>\n</li>\n</ol>\n<h2 id=\"3-npm-scripts-脚本\"><a href=\"#3-npm-scripts-脚本\" class=\"headerlink\" title=\"3. npm scripts 脚本\"></a>3. npm scripts 脚本</h2><p>package.json中的 <a href=\"https://link.juejin.cn/?target=https://docs.npmjs.com/misc/scripts\">scripts</a> 字段可以用来自定义脚本命令，它的每一个属性，对应一段脚本。以vue-cli3为例：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: {</span><br><span class=\"line\">  <span class=\"string\">\"serve\"</span>: <span class=\"string\">\"vue-cli-service serve\"</span>,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>这样就可以通过npm run serve脚本代替vue-cli-service serve脚本来启动项目，而无需每次敲一遍这么冗长的脚本。</p>\n<h3 id=\"工作原理\"><a href=\"#工作原理\" class=\"headerlink\" title=\"工作原理\"></a>工作原理</h3><h4 id=\"package-json-中的-bin-字段\"><a href=\"#package-json-中的-bin-字段\" class=\"headerlink\" title=\"package.json 中的 bin 字段\"></a>package.json 中的 bin 字段</h4><p>package.json中的字段 <a href=\"https://link.juejin.cn/?target=https://docs.npmjs.com/files/package.json.html%23bin\">bin</a> 表示的是一个<strong>可执行文件到指定文件源的映射</strong>。通过npm bin指令显示当前项目的bin目录的路径。例如在@vue/cli的package.json中：<br>例如:在chj-ip-tool的package.json中：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1634778717199-d5160d94-06bf-4a78-bc8b-cee18b0967e8.png#clientId=ubcbcb43a-f3df-4&amp;from=paste&amp;height=75&amp;id=u78df9db5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=75&amp;originWidth=259&amp;originalType=binary&amp;ratio=1&amp;size=2649&amp;status=done&amp;style=none&amp;taskId=u3ca378d9-3c35-4301-a6b8-c398725a4a1&amp;width=259\" alt=\"image.png\"><br>全局安装:<br>如果全局安装chj-ip-tool的话， npm会在全局可执行bin文件安装目录            C:\\Users\\Administrator\\AppData\\Roaming\\npm下创建一个指向C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\chj-ip-tool\\bin\\cli.js文件的名为my-ip的软链接，这样就可以直接在终端输入my-ip来执行相关命令。<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032050100-a436e440-cf65-4a1b-a1e8-88eae7c7d5d8.png#clientId=ue2a260f2-efff-4&amp;from=paste&amp;height=40&amp;id=u73dbfd80&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=62&amp;originWidth=907&amp;originalType=binary&amp;ratio=1&amp;size=29245&amp;status=done&amp;style=none&amp;taskId=u7f4aa3cd-80fb-439e-80b7-18c11e136b2&amp;width=588.4977722167969\" alt=\"image.png\"><br>局部安装:<br>如果局部安装chj-ip-tool的话，npm则会在本地项目./node_modules/.bin目录下创建一个指向./node_moudles/haijia-tool/bin/cli.js名为my-ip的软链接，这个时候如果想要执行my-ip命令有三种方式：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 直接输入.\\node_modules\\.bin\\my-ip来执行。 </span><br><span class=\"line\"><span class=\"number\">2.</span> 使用npx vue命令来执行（npx 的作用就是为了方便调用项目内部安装的模块） \t</span><br><span class=\"line\"><span class=\"number\">3.</span> 使用npm run命令来执行（npm run会将当前项目的./node_modules/.bin的绝对路径加入全局环境变量中）</span><br></pre></td></tr></tbody></table></figure>\n<h4 id=\"PATH-环境变量\"><a href=\"#PATH-环境变量\" class=\"headerlink\" title=\"PATH 环境变量\"></a>PATH 环境变量</h4><p>在terminal中执行命令时，<strong>命令会在PATH环境变量里包含的路径中去寻找相同名字的可执行文件</strong>。局部安装的包只在./node_modules/.bin中注册了它们的可执行文件，不会被包含在PATH环境变量中，这个时候在terminal中输入命令将会报无法找到的错误。<br><strong>那为什么通过npm run可以执行局部安装的命令行包呢？</strong><br>​</p>\n<p>npm 脚本的原理非常简单。每当执行npm run，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。<br>比较特别的是，npm run新建的这个 Shell，会将当前目录的node_modules/.bin子目录加入PATH变量，执行结束后，再将PATH变量恢复原样。<br>我们来验证下这个说法。首先执行 cmd =&gt;path 查看当前所有的环境变量，可以看到PATH环境变量为：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PATH=C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1<span class=\"number\">.0</span>\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm</span><br></pre></td></tr></tbody></table></figure>\n<pre><code>再在当前项目下执行npm run env查看脚本运行时的环境变量，可以看到PATH环境变量为：\n</code></pre>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Path=D:\\前端软件\\node\\node_modules\\npm\\node_modules\\npm-lifecycle\\node-gyp-bin;D:\\project-demo\\ip-tool\\node_modules\\.bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1<span class=\"number\">.0</span>\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软 </span><br><span class=\"line\">件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm</span><br></pre></td></tr></tbody></table></figure>\n<p>这意味着，当前目录的node_modules/.bin子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写mocha test就可以了。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"mocha test\"</span></span><br><span class=\"line\"><span class=\"string\">\"test\"</span>: <span class=\"string\">\"./node_modules/.bin/mocha test\"</span> <span class=\"comment\">// 不必带上路径</span></span><br></pre></td></tr></tbody></table></figure>\n<p>由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。<br>npm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是0，npm 就认为这个脚本执行失败。<br>​</p>\n<p>PATH环境变量，是告诉系统，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到哪些目录下去寻找。<br>​</p>\n<h3 id=\"用法指南\"><a href=\"#用法指南\" class=\"headerlink\" title=\"用法指南\"></a>用法指南</h3><h4 id=\"传入参数\"><a href=\"#传入参数\" class=\"headerlink\" title=\"传入参数\"></a>传入参数</h4><p>node处理scripts参数其实很简单，比如：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032201141-537a223f-f405-4a01-989f-fd10365bc906.png#clientId=ue2a260f2-efff-4&amp;from=paste&amp;height=132&amp;id=u6bc9ef8c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=150&amp;originWidth=631&amp;originalType=binary&amp;ratio=1&amp;size=24772&amp;status=done&amp;style=none&amp;taskId=u9e4d9430-50ea-428a-a084-4784028eb23&amp;width=553.4920349121094\" alt=\"image.png\"><br>除了第一个可执行的命令，以空格分割的任何字符串都是参数，并且都能通过process.argv属性访问。执行npm run serve3命令，process.argv的具体内容为：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032241556-ac230118-702b-4ca3-a0ea-f2e66fbaae7f.png#clientId=ue2a260f2-efff-4&amp;from=paste&amp;height=176&amp;id=u21b3f8d9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=200&amp;originWidth=631&amp;originalType=binary&amp;ratio=1&amp;size=29444&amp;status=done&amp;style=none&amp;taskId=u1dbb903d-9093-4da8-aa23-7cfc9594ad1&amp;width=554.4859008789062\" alt=\"image.png\"><br>很多命令行包之所以这么写，都是依赖了 minimist 或者  yargs ，coa等参数解析工具来对命令行参数进行解析。以minimist对vue-cli-service serve –mode=dev –mobile -config build/example.js解析为例，解析后的结果为：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032274531-2b333d35-2c45-47c5-aa23-9589eff91557.png#clientId=ue2a260f2-efff-4&amp;from=paste&amp;height=84&amp;id=u5742ba09&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=167&amp;originWidth=777&amp;originalType=binary&amp;ratio=1&amp;size=11794&amp;status=done&amp;style=none&amp;taskId=ub57736d4-bd43-4121-8ea8-3599438e970&amp;width=388.5\" alt=\"image.png\"><br>我们还可以通过命令行传参的形式来进行参数传递：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run serve --params  <span class=\"comment\">// 参数params将转化成process.env.npm_config_params = true</span></span><br><span class=\"line\">npm run serve --params=<span class=\"number\">123</span> <span class=\"comment\">// 参数params将转化成process.env.npm_config_params = 123</span></span><br><span class=\"line\">npm run serve -params  <span class=\"comment\">// 等同于--params参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm run serve -- --params  <span class=\"comment\">// 将--params参数添加到process.argv数组中</span></span><br><span class=\"line\">npm run serve params  <span class=\"comment\">// 将params参数添加到process.argv数组中</span></span><br><span class=\"line\">npm run serve -- params  <span class=\"comment\">// 将params参数添加到process.argv数组中</span></span><br></pre></td></tr></tbody></table></figure>\n<h4 id=\"多命令运行\"><a href=\"#多命令运行\" class=\"headerlink\" title=\"多命令运行\"></a>多命令运行</h4><h5 id=\"串行执行\"><a href=\"#串行执行\" class=\"headerlink\" title=\"串行执行\"></a>串行执行</h5><p>串行执行，要求前一个任务执行成功以后才能执行下一个任务，使用&amp;&amp;符号来连接。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run script1 &amp;&amp; npm run script2</span><br><span class=\"line\">串行命令执行过程中，只要一个命令执行失败，则整个脚本终止。</span><br></pre></td></tr></tbody></table></figure>\n<h5 id=\"并行执行\"><a href=\"#并行执行\" class=\"headerlink\" title=\"并行执行\"></a>并行执行</h5><p>并行执行，就是多个命令可以同时的平行执行，使用&amp;符号来连接。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run script1 &amp; npm run script2</span><br><span class=\"line\"><span class=\"comment\">// 这两个符号是Bash的内置功能。此外，还可以使用第三方的任务管理器模块：script-runner、npm-run-all、redrun。</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"4-实用技巧\"><a href=\"#4-实用技巧\" class=\"headerlink\" title=\"4.实用技巧\"></a>4.实用技巧</h2><h3 id=\"模块管理\"><a href=\"#模块管理\" class=\"headerlink\" title=\"模块管理\"></a>模块管理</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm list/ls &lt;packageName&gt;</span><br><span class=\"line\"><span class=\"comment\">// 检查当前项目依赖的所有模块，包括子模块以及子模块的子模块;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">npm view/info &lt;packageName&gt; version</span><br><span class=\"line\"><span class=\"comment\">// 模块已经发布的最新的版本信息（不包括预发布版本）</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm view/info &lt;packageName&gt; versions </span><br><span class=\"line\"><span class=\"comment\">// 模块所有的历史版本信息（包括预发布版本）</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm view/info &lt;packageName&gt; &lt;package.json中的key值&gt; </span><br><span class=\"line\"> // 还能查看package.json中字段对应的值</span><br><span class=\"line\">  </span><br><span class=\"line\">npm view/info &lt;packageName&gt;</span><br><span class=\"line\">// 查看某个模块的所有信息，包括它的依赖、关键字、更新日期、贡献者、仓库地址和许可证等：</span><br><span class=\"line\">  </span><br><span class=\"line\">npm outdated</span><br><span class=\"line\">// 查看当前项目中可升级的模块：</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"查看模块文档\"><a href=\"#查看模块文档\" class=\"headerlink\" title=\"查看模块文档\"></a>查看模块文档</h3><figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开模块的主页：npm home &lt;packageName&gt; </span><br></pre></td></tr></tbody></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031781587-128c4c69-8fd0-46eb-aa47-9ac493bba51e.png#clientId=ue2a260f2-efff-4&amp;from=paste&amp;height=40&amp;id=ua9be24f4&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=42&amp;originWidth=419&amp;originalType=binary&amp;ratio=1&amp;size=2988&amp;status=done&amp;style=none&amp;taskId=u1ba823a5-c6a0-4b2b-8e05-7d71ffa0f4b&amp;width=396.4918670654297\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开模块的代码仓库：npm repo &lt;packageName&gt; </span><br></pre></td></tr></tbody></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031812795-184e7b19-ebcd-419d-922d-eff34ed70de5.png#clientId=ue2a260f2-efff-4&amp;from=paste&amp;height=70&amp;id=ua720c18e&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=98&amp;originWidth=569&amp;originalType=binary&amp;ratio=1&amp;size=6405&amp;status=done&amp;style=none&amp;taskId=ucfef75a1-157a-4f70-b349-a10fa3ffc20&amp;width=407.493896484375\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开模块的 issues 地址：npm bugs &lt;packageName&gt;</span><br></pre></td></tr></tbody></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031842936-4c11d87c-7132-4d06-b237-be77ee85ac9d.png#clientId=ue2a260f2-efff-4&amp;from=paste&amp;height=61&amp;id=ua2b9f783&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=77&amp;originWidth=543&amp;originalType=binary&amp;ratio=1&amp;size=4683&amp;status=done&amp;style=none&amp;taskId=u21710b30-ef8a-4bba-b6f3-50cacfb4dcf&amp;width=428.49822998046875\" alt=\"image.png\"></p>\n<h3 id=\"本地开发模块调试\"><a href=\"#本地开发模块调试\" class=\"headerlink\" title=\"本地开发模块调试\"></a>本地开发模块调试</h3><p>方案一：本地打包引用     </p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本地包：npm pack</span><br><span class=\"line\">项目：npm i &lt; package &gt;（本地路径）</span><br></pre></td></tr></tbody></table></figure>\n<p>方案二：npm发布引用</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i  &lt; packageName &gt;</span><br></pre></td></tr></tbody></table></figure>\n<p>方案三：npm link（重点）    本地包：npm link这会创建一个软连接，并保存到目录<br>C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules 下面</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm link &lt; packageName &gt;</span><br></pre></td></tr></tbody></table></figure>\n<p>这就将这个公共的项目通过软连接的方式引入到项目里面来了;<br>这时修改common项目下面的任意代码都会实时生效，不用打包，不用更新引入包，也不用重启。需要注意的是，当项目包依赖更新后，也就是执行了 npm install xxx 之后，需要重新link项目。</p>\n","site":{"data":{"friends":[{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"单相表","introduction":"我不是大佬，只是在追寻大佬的脚步","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"导轨表","introduction":"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬","url":"","title":"前去学习"},{"avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.7a52eb3fee7fd73812c788f3a47df447?rik=82hIkfMgqXJbOA&riu=http%3a%2f%2fbpic.588ku.com%2felement_pic%2f01%2f29%2f32%2f72573adeec190b5.jpg&ehk=8opiOglSg5avjNaVX9DlmPq1PyrN5mJiQ7rC3rlFeOU%3d&risl=&pid=ImgRaw&r=0","name":"昆仑表","introduction":"平凡的脚步也可以走出伟大的行程","url":"","title":"前去学习"}]}},"excerpt":"","more":"<h2 id=\"1-npm-install-机制\"><a href=\"#1-npm-install-机制\" class=\"headerlink\" title=\"1. npm install 机制\"></a>1. npm install 机制</h2><p>假设项目App中有如下三个依赖：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">A</span>: <span class=\"string\">&quot;1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">B</span>: <span class=\"string\">&quot;1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">C</span>: <span class=\"string\">&quot;1.0.0&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A、B、C三个模块又有如下依赖：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A@<span class=\"number\">1.0</span><span class=\"number\">.0</span> -&gt; D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">B@<span class=\"number\">1.0</span><span class=\"number\">.0</span> -&gt; D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">C@<span class=\"number\">1.0</span><span class=\"number\">.0</span> -&gt; D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"npm-2-x-时代-嵌套安装\"><a href=\"#npm-2-x-时代-嵌套安装\" class=\"headerlink\" title=\"npm 2.x 时代 嵌套安装\"></a>npm 2.x 时代 嵌套安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│   ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   └── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>优点：</p>\n<ul>\n<li>层级结构明显</li>\n<li>简单的实现了多版本兼容</li>\n<li>保证了对依赖包无论是安装还是删除都会有统一的行为和结构</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>可能造成相同模块大量冗余问题</li>\n<li>可能造成目录结构嵌套比较深的问题<h3 id=\"npm-3-x开始-扁平安装\"><a href=\"#npm-3-x开始-扁平安装\" class=\"headerlink\" title=\"npm 3.x开始 -扁平安装\"></a>npm 3.x开始 -扁平安装</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│   ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   └── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n可以看到，<a href=\"mailto:&#68;&#x40;&#x32;&#46;&#x30;&#x2e;&#48;\">&#68;&#x40;&#x32;&#46;&#x30;&#x2e;&#48;</a>模块被安装在一级node_modules中，而<a href=\"mailto:&#68;&#64;&#49;&#x2e;&#x30;&#x2e;&#x30;\">&#68;&#64;&#49;&#x2e;&#x30;&#x2e;&#x30;</a>仍被安装在<a href=\"mailto:&#x41;&#x40;&#x31;&#x2e;&#x30;&#46;&#x30;\">&#x41;&#x40;&#x31;&#x2e;&#x30;&#46;&#x30;</a>中。所以可以得出结论，<strong>在执行npm install安装时，如果遇到相同依赖的包，会优先将高版本（大版本）的包放在一级node_modules中，低版本的包则会按照npm 2.x的方式依次挂在依赖包的node_modules中。</strong></li>\n</ul>\n<p>再在项目中安装模块<a href=\"mailto:&#69;&#x40;&#x31;&#46;&#x30;&#x2e;&#48;\">&#69;&#x40;&#x31;&#46;&#x30;&#x2e;&#48;</a>（依赖于模块<a href=\"mailto:&#x44;&#x40;&#x31;&#46;&#48;&#x2e;&#48;\">&#x44;&#x40;&#x31;&#46;&#48;&#x2e;&#48;</a>），目录结构变为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│   ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── E@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<p>再在项目中安装模块<a href=\"mailto:&#x46;&#64;&#49;&#46;&#48;&#x2e;&#48;\">&#x46;&#64;&#49;&#46;&#48;&#x2e;&#48;</a>（依赖于模块<a href=\"mailto:&#68;&#64;&#x32;&#46;&#x30;&#46;&#x30;\">&#68;&#64;&#x32;&#46;&#x30;&#46;&#x30;</a>），目录结构变为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── node_modules</span><br><span class=\"line\">│   ├── A@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── B@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── C@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── D@<span class=\"number\">2.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   ├── E@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   │   └── node_modules</span><br><span class=\"line\">│   │   │   └── D@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br><span class=\"line\">│   └── F@<span class=\"number\">1.0</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<p>可以看到，只会安装F模块。所以可以得出结论，<strong>在一级node_moudles中已经存在依赖包的情况下，新安装的依赖包如果不存在版本冲突，则会忽略安装</strong>。<br>从以上示例可以看出，npm 3.x并没有完美的解决npm 2.x中的问题，甚至还会退化到npm 2.x的行为。</p>\n<h3 id=\"package-lock-json\"><a href=\"#package-lock-json\" class=\"headerlink\" title=\"package-lock.json\"></a>package-lock.json</h3><p>从npm 5.x开始，执行npm install时会自动生成一个<a href=\"https://link.juejin.cn/?target=https://docs.npmjs.com/files/package-lock.json\">package-lock.json</a> 文件。<br>​</p>\n<p>npm为了让开发者<strong>在安全的前提下使用最新的依赖包</strong>，在package.json中通常做了锁定大版本的操作，这样在每次npm install的时候都会拉取依赖包大版本下的最新的版本。这种机制最大的一个缺点就是当有依赖包有小版本更新时，可能会出现协同开发者的依赖包不一致的问题。</p>\n<p>package-lock.json的详细描述主要由version、resolved、integrity、dev、requires、dependencies这几个字段构成</p>\n<ul>\n<li>version：包唯一的版本号</li>\n<li>resolved：安装源</li>\n<li>integrity：表明包完整性的hash值（验证包是否已失效）</li>\n<li>dev：如果为true，则此依赖关系仅是顶级模块的开发依赖关系或者是一个的传递依赖关系</li>\n<li>requires：依赖包所需要的所有依赖项，对应依赖包package.json里dependencies中的依赖项</li>\n<li>dependencies：依赖包node_modules中依赖的包，与顶层的dependencies一样的结构<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;sass-loader&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;7.1.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;resolved&quot;</span>: <span class=\"string\">&quot;http://registry.npm.taobao.org/sass-loader/download/sass-loader-7.1.0.tgz&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;integrity&quot;</span>: <span class=\"string\">&quot;sha1-Fv1ROMuLQkv4p1lSihly1yqtBp0=&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;dev&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;requires&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;clone-deep&quot;</span>: <span class=\"string\">&quot;^2.0.1&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;loader-utils&quot;</span>: <span class=\"string\">&quot;^1.0.1&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;lodash.tail&quot;</span>: <span class=\"string\">&quot;^4.1.1&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;neo-async&quot;</span>: <span class=\"string\">&quot;^2.5.0&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;pify&quot;</span>: <span class=\"string\">&quot;^3.0.0&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;semver&quot;</span>: <span class=\"string\">&quot;^5.5.0&quot;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;pify&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;3.0.0&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;resolved&quot;</span>: <span class=\"string\">&quot;http://registry.npm.taobao.org/pify/download/pify-3.0.0.tgz&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;integrity&quot;</span>: <span class=\"string\">&quot;sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;dev&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\npackage-lock.json文件和node_modules目录结构是一一对应的，即项目目录下存在package-lock.json可以让每次安装生成的依赖目录结构保持相同。<br>在开发一个应用时，建议把package-lock.json文件提交到代码版本仓库，从而让你的团队成员、运维部署人员或CI系统可以在执行npm install时安装的依赖版本都是一致的。<br>但是在开发一个库时，则不应把package-lock.json文件发布到仓库中。实际上，npm也默认不会把package-lock.json文件发布出去。之所以这么做，是因为库项目一般是被其他项目依赖的，在不写死的情况下，就可以复用主项目已经加载过的包，而一旦库依赖的是精确的版本号那么可能会造成包的冗余。<br>​</li>\n</ul>\n<h2 id=\"2-npm-中的依赖包\"><a href=\"#2-npm-中的依赖包\" class=\"headerlink\" title=\"2. npm 中的依赖包\"></a>2. npm 中的依赖包</h2><h3 id=\"依赖包分类\"><a href=\"#依赖包分类\" class=\"headerlink\" title=\"依赖包分类\"></a>依赖包分类</h3><ul>\n<li><strong>dependencies - 业务依赖</strong></li>\n<li><strong>devDependencies - 开发依赖</strong></li>\n<li><strong>peerDependencies - 同伴依赖</strong></li>\n<li><strong>bundledDependencies / bundleDependencies - 打包依赖</strong></li>\n<li><strong>optionalDependencies - 可选依赖</strong></li>\n</ul>\n<p>作为npm的使用者，我们常用的依赖是dependencies和devDependencies，剩下三种依赖则是作为包的发布者才会使用到的字段。</p>\n<h4 id=\"dependencies\"><a href=\"#dependencies\" class=\"headerlink\" title=\"dependencies\"></a><strong>dependencies</strong></h4><p>这种依赖在项目最终上线或者发布npm包时所需要，即其中的依赖项应该属于线上代码的一部分。比如框架vue，第三方的组件库element-ui等，这些依赖包都是必须装在这个选项里供生产环境使用。<br>通过命令npm install/i packageName -S/–save把包装在此依赖项里。如果没有指定版本，直接写一个包的名字，则安装当前npm仓库中这个包的最新版本。如果要指定版本的，可以把版本号写在包名后面，比如npm i <a href=\"mailto:&#x76;&#x75;&#101;&#x40;&#x33;&#x2e;&#48;&#x2e;&#x31;\">&#x76;&#x75;&#101;&#x40;&#x33;&#x2e;&#48;&#x2e;&#x31;</a> -S。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install/i packageName -S/--save</span><br><span class=\"line\"></span><br><span class=\"line\">// 从npm 5.x开始，可以不用手动添加-S/--save指令，直接执行npm i packageName把依赖包添加到dependencies中去。</span><br></pre></td></tr></table></figure>\n<p>​</p>\n<h4 id=\"devDependencies\"><a href=\"#devDependencies\" class=\"headerlink\" title=\"devDependencies\"></a><strong>devDependencies</strong></h4><p>这种依赖只在项目开发时所需要，即其中的依赖项不应该属于线上代码的一部分。比如构建工具webpack、gulp，预处理器babel-loader、scss-loader，测试工具e2e、chai等，这些都是辅助开发的工具包，无须在生产环境使用。</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install/i -D/--save-dev</span><br><span class=\"line\">npm i --production // 线上机器（或者QA环境）上使用</span><br><span class=\"line\"></span><br><span class=\"line\">提示：千万别以为只有在dependencies中的模块才会被一起打包，而在devDependencies中的不会！模块能否被打包，取决于项目里是否被引入了该模块！</span><br></pre></td></tr></table></figure>\n<p>在业务项目中dependencies和devDependencies没有什么本质区别，只是单纯的一个规范作用，在执行npm i时两个依赖下的模块都会被下载；而在发布npm包的时候，包中的dependencies依赖项在安装该包的时候会被一起下载，devDependencies依赖项则不会。</p>\n<h4 id=\"peerDependencies\"><a href=\"#peerDependencies\" class=\"headerlink\" title=\"peerDependencies\"></a><strong>peerDependencies</strong></h4><p>这种依赖的作用是提示宿主环境去安装插件在peerDependencies中所指定依赖的包，然后插件所依赖的包永远都是宿主环境统一安装的npm包，最终解决插件与所依赖包不一致的问题。<br>这句话听起来可能有点拗口，举个例子来给大家说明下。<a href=\"mailto:&#101;&#108;&#x65;&#109;&#x65;&#x6e;&#116;&#x2d;&#x75;&#x69;&#64;&#50;&#46;&#54;&#46;&#51;\">&#101;&#108;&#x65;&#109;&#x65;&#x6e;&#116;&#x2d;&#x75;&#x69;&#64;&#50;&#46;&#54;&#46;&#51;</a>只是提供一套基于vue的ui组件库，但它要求宿主环境需要安装指定的vue版本，所以你可以看到element项目中的package.json中具有一项配置：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;peerDependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;vue&quot;</span>: <span class=\"string\">&quot;^2.5.16&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>它要求宿主环境安装3.0.0 &gt; vue@ &gt;= 2.5.16的版本，也就是element-ui的运行依赖宿主环境提供的该版本范围的vue依赖包<br>​</p>\n<p>总结：大白话：如果你安装我，那么你最好也要按照我的要求安装A、B和C。</p>\n<h4 id=\"bundledDependencies\"><a href=\"#bundledDependencies\" class=\"headerlink\" title=\"**bundledDependencies **\"></a>**bundledDependencies **</h4><p>这种依赖跟npm pack打包命令有关。假设package.json中有如下配置：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;font-end&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;1.0.0&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;fe1&quot;</span>: <span class=\"string\">&quot;^0.3.2&quot;</span>,</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;devDependencies&quot;</span>: &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"string\">&quot;fe2&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;bundledDependencies&quot;</span>: [</span><br><span class=\"line\">    <span class=\"string\">&quot;fe1&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;fe2&quot;</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行打包命令npm pack，会生成front-end-1.0.0.tgz压缩包，并且该压缩包中包含fe1和fe2两个安装包，这样使用者执行npm install front-end-1.0.0.tgz也会安装这两个依赖。<br>tips: 在bundledDependencies中指定的依赖包，必须先在dependencies和devDependencies声明过，否则打包会报错。</p>\n<h4 id=\"optionalDependencies\"><a href=\"#optionalDependencies\" class=\"headerlink\" title=\"optionalDependencies\"></a><strong>optionalDependencies</strong></h4><p>这种依赖中的依赖项即使安装失败了，也不影响整个安装的过程。需要注意的是，如果一个依赖同时出现在dependencies和optionalDependencies中，那么optionalDependencies会获得更高的优先级，可能造成一些预期之外的效果，所以尽量要避免这种情况发生。<br>​</p>\n<p>tips:  在实际项目中，如果某个包已经失效，我们通常会寻找它的替代者，或者换一个实现方案。不确定的依赖会增加代码判断和测试难度，所以这个依赖项还是尽量不要使用。</p>\n<h3 id=\"依赖包版本号\"><a href=\"#依赖包版本号\" class=\"headerlink\" title=\"依赖包版本号\"></a>依赖包版本号</h3><p>npm采用了semver规范作为依赖版本管理方案。<br>​</p>\n<p>一个npm依赖包的版本格式一般为：<strong>主版本号.次版本号.修订号</strong>（x.y.z），每个号的含义是：</p>\n<ul>\n<li><strong>主版本号</strong>（也叫大版本，major version）</li>\n</ul>\n<p>大版本的改动很可能是一次颠覆性的改动，也就意味着可能存在与低版本不兼容的API或者用法，（比如 vue 2 -&gt; 3)。</p>\n<ul>\n<li><strong>次版本号</strong>（也叫小版本，minor version）</li>\n</ul>\n<p>小版本的改动应当兼容同一个大版本内的API和用法，因此应该让开发者无感。所以我们通常只说大版本号，很少会精确到小版本号。<br>tips: 如果大版本号是 0 的话，表示软件处于开发初始阶段，一切都可能随时被改变，可能每个小版本之间也会存在不兼容性。所以在选择依赖时，尽量避开大版本号是 0 的包。</p>\n<ul>\n<li><strong>修订号</strong>（也叫补丁，patch）一般用于修复bug或者很细微的变更，也需要保持向前兼容。</li>\n</ul>\n<p>常见的几个版本格式如下：</p>\n<ul>\n<li><strong>“1.2.3”</strong></li>\n</ul>\n<p>表示精确版本号。任何其他版本号都不匹配。在一些比较重要的线上项目中，建议使用这种方式锁定版本。</p>\n<ul>\n<li><strong>“^1.2.3”</strong></li>\n</ul>\n<p>表示兼容补丁和小版本更新的版本号。官方的定义是“能够兼容除了最左侧的非 <strong>0</strong> 版本号之外的其他变化。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;^1.2.3&quot;</span> 等价于 <span class=\"string\">&quot;&gt;= 1.2.3 &lt; 2.0.0&quot;</span>。即只要最左侧的 <span class=\"string\">&quot;1&quot;</span> 不变，其他都可以改变。所以 <span class=\"string\">&quot;1.2.4&quot;</span>, <span class=\"string\">&quot;1.3.0&quot;</span> 都可以兼容。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;^0.2.3&quot;</span> 等价于 <span class=\"string\">&quot;&gt;= 0.2.3 &lt; 0.3.0&quot;</span>。因为最左侧的是 <span class=\"string\">&quot;0&quot;</span>，那么只要第二位 <span class=\"string\">&quot;2&quot;</span> 不变，其他的都兼容，比如 <span class=\"string\">&quot;0.2.4&quot;</span> 和 <span class=\"string\">&quot;0.2.99&quot;</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;^0.0.3&quot;</span> 等价于 <span class=\"string\">&quot;&gt;= 0.0.3 &lt; 0.0.4&quot;</span>。大版本号和小版本号都为 <span class=\"string\">&quot;0&quot;</span> ，所以也就等价于精确的 <span class=\"string\">&quot;0.0.3&quot;</span>。</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>“~1.2.3”</strong></li>\n</ul>\n<p>表示只兼容补丁更新的版本号。关于 ~ 的定义分为两部分：如果列出了小版本号（第二位），则只兼容补丁（第三位）的修改；如果没有列出小版本号，则兼容第二和第三位的修改。我们分两种情况理解一下这个定义：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;~1.2.3&quot;</span> 列出了小版本号 <span class=\"string\">&quot;2&quot;</span>，因此只兼容第三位的修改，等价于 <span class=\"string\">&quot;&gt;= 1.2.3 &lt; 1.3.0&quot;</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;~1.2&quot;</span> 也列出了小版本号 <span class=\"string\">&quot;2&quot;</span>，因此和上面一样兼容第三位的修改，等价于 <span class=\"string\">&quot;&gt;= 1.2.0 &lt; 1.3.0&quot;</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;~1&quot;</span> 没有列出小版本号，可以兼容第二第三位的修改，因此等价于 <span class=\"string\">&quot;&gt;= 1.0.0 &lt; 2.0.0&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p><strong>“1.x” 、”1.X”、1.<em>“、”1”、”</em>“</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;*&quot;</span> 、<span class=\"string\">&quot;x&quot;</span> 或者 （空） 表示可以匹配任何版本。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;1.x&quot;</span>, <span class=\"string\">&quot;1.*&quot;</span> 和 <span class=\"string\">&quot;1&quot;</span> 表示匹配主版本号为 <span class=\"string\">&quot;1&quot;</span> 的所有版本，因此等价于 <span class=\"string\">&quot;&gt;= 1.0.0 &lt; 2.0.0&quot;</span>。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;1.2.x&quot;</span>, <span class=\"string\">&quot;1.2.*&quot;</span> 和 <span class=\"string\">&quot;1.2&quot;</span> 表示匹配版本号以 <span class=\"string\">&quot;1.2&quot;</span> 开头的所有版本，因此等价于 <span class=\"string\">&quot;&gt;= 1.2.0 &lt; 1.3.0&quot;</span>。</span><br></pre></td></tr></table></figure></li>\n<li><p><strong>“1.2.3-alpha.1”、”1.2.3-beta.1”、”1.2.3-rc.1”</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alpha(α)：预览版，或者叫内部测试版；一般不向外部发布，会有很多bug；一般只有测试人员使用。</span><br><span class=\"line\"></span><br><span class=\"line\">beta(β)：测试版，或者叫公开测试版；这个阶段的版本会一直加入新的功能；在alpha版之后推出。</span><br><span class=\"line\"></span><br><span class=\"line\">rc(release candidate)：最终测试版本；可能成为最终产品的候选版本，如果未出现问题则可发布成为正式版本。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;~1.2.4-alpha.1&quot;</span> 表示 <span class=\"string\">&quot;&gt;=1.2.4-alpha.1 &lt; 1.3.0&quot;</span>。这样 <span class=\"string\">&quot;1.2.5&quot;</span>, <span class=\"string\">&quot;1.2.4-alpha.2&quot;</span> 都符合条件，而 <span class=\"string\">&quot;1.2.5-alpha.1&quot;</span>, <span class=\"string\">&quot;1.3.0&quot;</span> 不符合。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;^1.2.4-alpha.1&quot;</span> 表示 <span class=\"string\">&quot;&gt;=1.2.4-alpha.1 &lt; 2.0.0&quot;</span>。这样 <span class=\"string\">&quot;1.2.5&quot;</span>, <span class=\"string\">&quot;1.2.4-alpha.2&quot;</span>, <span class=\"string\">&quot;1.3.0&quot;</span> 都符合条件，而 <span class=\"string\">&quot;1.2.5-alpha.1&quot;</span>, <span class=\"string\">&quot;2.0.0&quot;</span> 不符合。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// &gt;1.2.4-alpha.1&quot;表示接受 &quot;1.2.4-alpha&quot; 版本下所有大于 1 的预发布版本。因此 &quot;1.2.4-alpha.7&quot; 是符合要求的，但 &quot;1.2.4-beta.1&quot; 和 &quot;1.2.5-alpha.2&quot; 都不符合。此外如果是正式版本（不带预发布关键词），只要版本号符合要求即可，不检查预发布版本号，例如 &quot;1.2.5&quot;, &quot;1.3.0&quot; 都是认可的。</span></span><br></pre></td></tr></table></figure>\n<p>以包开发者的角度来考虑这个问题：假设当前线上版本是 “1.2.3”，如果我作了一些改动需要发布版本 “1.2.4”，但我不想直接上线（因为使用 “~1.2.3” 或者 “^1.2.3” 的用户都会直接静默更新），这就需要使用预发布功能。因此我可能会发布 “1.2.4-alpha.1” 或者 “1.2.4-beta.1” 等等。</p>\n<h3 id=\"依赖包版本管理\"><a href=\"#依赖包版本管理\" class=\"headerlink\" title=\"依赖包版本管理\"></a>依赖包版本管理</h3></li>\n</ul>\n<ol>\n<li><p>在大版本相同的前提下，如果一个模块在package.json中的小版本要<strong>大于</strong>package-lock.json中的小版本，则在执行npm install时，会将该模块更新到大版本下的最新的版本，并将版本号更新至package-lock.json。如果<strong>小于</strong>，则被package-lock.json中的版本锁定。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package-lock.json 中原版本</span></span><br><span class=\"line\"><span class=\"string\">&quot;clipboard&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;1.5.10&quot;</span>, </span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"string\">&quot;vue&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;2.6.10&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// package.json 中修改版本</span></span><br><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;clipboard&quot;</span>: <span class=\"string\">&quot;^1.5.12&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;vue&quot;</span>: <span class=\"string\">&quot;^2.5.6&quot;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行完 npm install 后，package-lock.json 中</span></span><br><span class=\"line\"><span class=\"string\">&quot;clipboard&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;1.7.1&quot;</span>, <span class=\"comment\">// 更新到大版本下的最新版本</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"><span class=\"string\">&quot;vue&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;2.6.10&quot;</span>, <span class=\"comment\">// 版本没发生改变</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>如果一个模块在package.json和package-lock.json中的大版本不相同，则在执行npm install时，都将根据package.json中大版本下的最新版本进行更新，并将版本号更新至package-lock.json。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// package-lock.json 中原版本</span></span><br><span class=\"line\"><span class=\"string\">&quot;clipboard&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;2.0.4&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// package.json 中修改版本</span></span><br><span class=\"line\"><span class=\"string\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;clipboard&quot;</span>: <span class=\"string\">&quot;^1.6.1&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行完npm install后，package-lock.json 中</span></span><br><span class=\"line\"><span class=\"string\">&quot;clipboard&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;version&quot;</span>: <span class=\"string\">&quot;1.7.1&quot;</span>, <span class=\"comment\">// 更新到大版本下的最新版本</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>如果一个模块在package.json中有记录，而在package-lock.json中无记录，执行npm install后，则会在package-lock.json生成该模块的详细记录。同理，一个模块在package.json中无记录，而在package-lock.json中有记录，执行npm install后，则会在package-lock.json删除该模块的详细记录。</p>\n</li>\n</ol>\n<h2 id=\"3-npm-scripts-脚本\"><a href=\"#3-npm-scripts-脚本\" class=\"headerlink\" title=\"3. npm scripts 脚本\"></a>3. npm scripts 脚本</h2><p>package.json中的 <a href=\"https://link.juejin.cn/?target=https://docs.npmjs.com/misc/scripts\">scripts</a> 字段可以用来自定义脚本命令，它的每一个属性，对应一段脚本。以vue-cli3为例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;serve&quot;</span>: <span class=\"string\">&quot;vue-cli-service serve&quot;</span>,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就可以通过npm run serve脚本代替vue-cli-service serve脚本来启动项目，而无需每次敲一遍这么冗长的脚本。</p>\n<h3 id=\"工作原理\"><a href=\"#工作原理\" class=\"headerlink\" title=\"工作原理\"></a>工作原理</h3><h4 id=\"package-json-中的-bin-字段\"><a href=\"#package-json-中的-bin-字段\" class=\"headerlink\" title=\"package.json 中的 bin 字段\"></a>package.json 中的 bin 字段</h4><p>package.json中的字段 <a href=\"https://link.juejin.cn/?target=https://docs.npmjs.com/files/package.json.html%23bin\">bin</a> 表示的是一个<strong>可执行文件到指定文件源的映射</strong>。通过npm bin指令显示当前项目的bin目录的路径。例如在@vue/cli的package.json中：<br>例如:在chj-ip-tool的package.json中：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1634778717199-d5160d94-06bf-4a78-bc8b-cee18b0967e8.png#clientId=ubcbcb43a-f3df-4&from=paste&height=75&id=u78df9db5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=75&originWidth=259&originalType=binary&ratio=1&size=2649&status=done&style=none&taskId=u3ca378d9-3c35-4301-a6b8-c398725a4a1&width=259\" alt=\"image.png\"><br>全局安装:<br>如果全局安装chj-ip-tool的话， npm会在全局可执行bin文件安装目录            C:\\Users\\Administrator\\AppData\\Roaming\\npm下创建一个指向C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules\\chj-ip-tool\\bin\\cli.js文件的名为my-ip的软链接，这样就可以直接在终端输入my-ip来执行相关命令。<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032050100-a436e440-cf65-4a1b-a1e8-88eae7c7d5d8.png#clientId=ue2a260f2-efff-4&from=paste&height=40&id=u73dbfd80&margin=%5Bobject%20Object%5D&name=image.png&originHeight=62&originWidth=907&originalType=binary&ratio=1&size=29245&status=done&style=none&taskId=u7f4aa3cd-80fb-439e-80b7-18c11e136b2&width=588.4977722167969\" alt=\"image.png\"><br>局部安装:<br>如果局部安装chj-ip-tool的话，npm则会在本地项目./node_modules/.bin目录下创建一个指向./node_moudles/haijia-tool/bin/cli.js名为my-ip的软链接，这个时候如果想要执行my-ip命令有三种方式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span> 直接输入.\\node_modules\\.bin\\my-ip来执行。 </span><br><span class=\"line\"><span class=\"number\">2.</span> 使用npx vue命令来执行（npx 的作用就是为了方便调用项目内部安装的模块） \t</span><br><span class=\"line\"><span class=\"number\">3.</span> 使用npm run命令来执行（npm run会将当前项目的./node_modules/.bin的绝对路径加入全局环境变量中）</span><br></pre></td></tr></table></figure>\n<h4 id=\"PATH-环境变量\"><a href=\"#PATH-环境变量\" class=\"headerlink\" title=\"PATH 环境变量\"></a>PATH 环境变量</h4><p>在terminal中执行命令时，<strong>命令会在PATH环境变量里包含的路径中去寻找相同名字的可执行文件</strong>。局部安装的包只在./node_modules/.bin中注册了它们的可执行文件，不会被包含在PATH环境变量中，这个时候在terminal中输入命令将会报无法找到的错误。<br><strong>那为什么通过npm run可以执行局部安装的命令行包呢？</strong><br>​</p>\n<p>npm 脚本的原理非常简单。每当执行npm run，就会自动新建一个 Shell，在这个 Shell 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。<br>比较特别的是，npm run新建的这个 Shell，会将当前目录的node_modules/.bin子目录加入PATH变量，执行结束后，再将PATH变量恢复原样。<br>我们来验证下这个说法。首先执行 cmd =&gt;path 查看当前所有的环境变量，可以看到PATH环境变量为：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PATH=C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1<span class=\"number\">.0</span>\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm</span><br></pre></td></tr></table></figure>\n<pre><code>再在当前项目下执行npm run env查看脚本运行时的环境变量，可以看到PATH环境变量为：\n</code></pre>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Path=D:\\前端软件\\node\\node_modules\\npm\\node_modules\\npm-lifecycle\\node-gyp-bin;D:\\project-demo\\ip-tool\\node_modules\\.bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1<span class=\"number\">.0</span>\\;C:\\Windows\\System32\\OpenSSH\\;D:\\前端软 </span><br><span class=\"line\">件\\Microsoft VS Code\\bin;;D:\\前端软件\\Git\\cmd;D:\\前端软件\\node\\;C:\\Users\\ybchjia\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\ybchjia\\AppData\\Roaming\\npm</span><br></pre></td></tr></table></figure>\n<p>这意味着，当前目录的node_modules/.bin子目录里面的所有脚本，都可以直接用脚本名调用，而不必加上路径。比如，当前项目的依赖里面有 Mocha，只要直接写mocha test就可以了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;test&quot;</span>: <span class=\"string\">&quot;mocha test&quot;</span></span><br><span class=\"line\"><span class=\"string\">&quot;test&quot;</span>: <span class=\"string\">&quot;./node_modules/.bin/mocha test&quot;</span> <span class=\"comment\">// 不必带上路径</span></span><br></pre></td></tr></table></figure>\n<p>由于 npm 脚本的唯一要求就是可以在 Shell 执行，因此它不一定是 Node 脚本，任何可执行文件都可以写在里面。<br>npm 脚本的退出码，也遵守 Shell 脚本规则。如果退出码不是0，npm 就认为这个脚本执行失败。<br>​</p>\n<p>PATH环境变量，是告诉系统，当要求系统运行一个程序而没有告诉它程序所在的完整路径时，系统除了在当前目录下面寻找此程序外，还应到哪些目录下去寻找。<br>​</p>\n<h3 id=\"用法指南\"><a href=\"#用法指南\" class=\"headerlink\" title=\"用法指南\"></a>用法指南</h3><h4 id=\"传入参数\"><a href=\"#传入参数\" class=\"headerlink\" title=\"传入参数\"></a>传入参数</h4><p>node处理scripts参数其实很简单，比如：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032201141-537a223f-f405-4a01-989f-fd10365bc906.png#clientId=ue2a260f2-efff-4&from=paste&height=132&id=u6bc9ef8c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=150&originWidth=631&originalType=binary&ratio=1&size=24772&status=done&style=none&taskId=u9e4d9430-50ea-428a-a084-4784028eb23&width=553.4920349121094\" alt=\"image.png\"><br>除了第一个可执行的命令，以空格分割的任何字符串都是参数，并且都能通过process.argv属性访问。执行npm run serve3命令，process.argv的具体内容为：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032241556-ac230118-702b-4ca3-a0ea-f2e66fbaae7f.png#clientId=ue2a260f2-efff-4&from=paste&height=176&id=u21b3f8d9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=200&originWidth=631&originalType=binary&ratio=1&size=29444&status=done&style=none&taskId=u1dbb903d-9093-4da8-aa23-7cfc9594ad1&width=554.4859008789062\" alt=\"image.png\"><br>很多命令行包之所以这么写，都是依赖了 minimist 或者  yargs ，coa等参数解析工具来对命令行参数进行解析。以minimist对vue-cli-service serve –mode=dev –mobile -config build/example.js解析为例，解析后的结果为：<br><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629032274531-2b333d35-2c45-47c5-aa23-9589eff91557.png#clientId=ue2a260f2-efff-4&from=paste&height=84&id=u5742ba09&margin=%5Bobject%20Object%5D&name=image.png&originHeight=167&originWidth=777&originalType=binary&ratio=1&size=11794&status=done&style=none&taskId=ub57736d4-bd43-4121-8ea8-3599438e970&width=388.5\" alt=\"image.png\"><br>我们还可以通过命令行传参的形式来进行参数传递：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run serve --params  <span class=\"comment\">// 参数params将转化成process.env.npm_config_params = true</span></span><br><span class=\"line\">npm run serve --params=<span class=\"number\">123</span> <span class=\"comment\">// 参数params将转化成process.env.npm_config_params = 123</span></span><br><span class=\"line\">npm run serve -params  <span class=\"comment\">// 等同于--params参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm run serve -- --params  <span class=\"comment\">// 将--params参数添加到process.argv数组中</span></span><br><span class=\"line\">npm run serve params  <span class=\"comment\">// 将params参数添加到process.argv数组中</span></span><br><span class=\"line\">npm run serve -- params  <span class=\"comment\">// 将params参数添加到process.argv数组中</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"多命令运行\"><a href=\"#多命令运行\" class=\"headerlink\" title=\"多命令运行\"></a>多命令运行</h4><h5 id=\"串行执行\"><a href=\"#串行执行\" class=\"headerlink\" title=\"串行执行\"></a>串行执行</h5><p>串行执行，要求前一个任务执行成功以后才能执行下一个任务，使用&amp;&amp;符号来连接。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run script1 &amp;&amp; npm run script2</span><br><span class=\"line\">串行命令执行过程中，只要一个命令执行失败，则整个脚本终止。</span><br></pre></td></tr></table></figure>\n<h5 id=\"并行执行\"><a href=\"#并行执行\" class=\"headerlink\" title=\"并行执行\"></a>并行执行</h5><p>并行执行，就是多个命令可以同时的平行执行，使用&amp;符号来连接。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run script1 &amp; npm run script2</span><br><span class=\"line\"><span class=\"comment\">// 这两个符号是Bash的内置功能。此外，还可以使用第三方的任务管理器模块：script-runner、npm-run-all、redrun。</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-实用技巧\"><a href=\"#4-实用技巧\" class=\"headerlink\" title=\"4.实用技巧\"></a>4.实用技巧</h2><h3 id=\"模块管理\"><a href=\"#模块管理\" class=\"headerlink\" title=\"模块管理\"></a>模块管理</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm list/ls &lt;packageName&gt;</span><br><span class=\"line\"><span class=\"comment\">// 检查当前项目依赖的所有模块，包括子模块以及子模块的子模块;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">npm view/info &lt;packageName&gt; version</span><br><span class=\"line\"><span class=\"comment\">// 模块已经发布的最新的版本信息（不包括预发布版本）</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm view/info &lt;packageName&gt; versions </span><br><span class=\"line\"><span class=\"comment\">// 模块所有的历史版本信息（包括预发布版本）</span></span><br><span class=\"line\"></span><br><span class=\"line\">npm view/info &lt;packageName&gt; &lt;package.json中的key值&gt; </span><br><span class=\"line\"> // 还能查看package.json中字段对应的值</span><br><span class=\"line\">  </span><br><span class=\"line\">npm view/info &lt;packageName&gt;</span><br><span class=\"line\">// 查看某个模块的所有信息，包括它的依赖、关键字、更新日期、贡献者、仓库地址和许可证等：</span><br><span class=\"line\">  </span><br><span class=\"line\">npm outdated</span><br><span class=\"line\">// 查看当前项目中可升级的模块：</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看模块文档\"><a href=\"#查看模块文档\" class=\"headerlink\" title=\"查看模块文档\"></a>查看模块文档</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开模块的主页：npm home &lt;packageName&gt; </span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031781587-128c4c69-8fd0-46eb-aa47-9ac493bba51e.png#clientId=ue2a260f2-efff-4&from=paste&height=40&id=ua9be24f4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=42&originWidth=419&originalType=binary&ratio=1&size=2988&status=done&style=none&taskId=u1ba823a5-c6a0-4b2b-8e05-7d71ffa0f4b&width=396.4918670654297\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开模块的代码仓库：npm repo &lt;packageName&gt; </span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031812795-184e7b19-ebcd-419d-922d-eff34ed70de5.png#clientId=ue2a260f2-efff-4&from=paste&height=70&id=ua720c18e&margin=%5Bobject%20Object%5D&name=image.png&originHeight=98&originWidth=569&originalType=binary&ratio=1&size=6405&status=done&style=none&taskId=ucfef75a1-157a-4f70-b349-a10fa3ffc20&width=407.493896484375\" alt=\"image.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开模块的 issues 地址：npm bugs &lt;packageName&gt;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/12582850/1629031842936-4c11d87c-7132-4d06-b237-be77ee85ac9d.png#clientId=ue2a260f2-efff-4&from=paste&height=61&id=ua2b9f783&margin=%5Bobject%20Object%5D&name=image.png&originHeight=77&originWidth=543&originalType=binary&ratio=1&size=4683&status=done&style=none&taskId=u21710b30-ef8a-4bba-b6f3-50cacfb4dcf&width=428.49822998046875\" alt=\"image.png\"></p>\n<h3 id=\"本地开发模块调试\"><a href=\"#本地开发模块调试\" class=\"headerlink\" title=\"本地开发模块调试\"></a>本地开发模块调试</h3><p>方案一：本地打包引用     </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本地包：npm pack</span><br><span class=\"line\">项目：npm i &lt; package &gt;（本地路径）</span><br></pre></td></tr></table></figure>\n<p>方案二：npm发布引用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i  &lt; packageName &gt;</span><br></pre></td></tr></table></figure>\n<p>方案三：npm link（重点）    本地包：npm link这会创建一个软连接，并保存到目录<br>C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules 下面</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm link &lt; packageName &gt;</span><br></pre></td></tr></table></figure>\n<p>这就将这个公共的项目通过软连接的方式引入到项目里面来了;<br>这时修改common项目下面的任意代码都会实时生效，不用打包，不用更新引入包，也不用重启。需要注意的是，当项目包依赖更新后，也就是执行了 npm install xxx 之后，需要重新link项目。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckvhrljli00015su47o4nab5w","category_id":"ckvhrljlp00045su4dq9v69b3","_id":"ckvhrljlz000e5su4d5h1co38"},{"post_id":"ckvhrljls00075su4agi75vto","category_id":"ckvhrljlx000b5su4arqn4qro","_id":"ckvhrljm0000h5su48wqbe6tb"},{"post_id":"ckvhrljlv00095su471xi4cac","category_id":"ckvhrljlz000f5su400m5fjxd","_id":"ckvhrljm0000j5su48pasdo80"}],"PostTag":[{"post_id":"ckvhrljli00015su47o4nab5w","tag_id":"ckvhrljlr00055su46fpl63zs","_id":"ckvhrljm1000m5su4basuai4h"},{"post_id":"ckvhrljli00015su47o4nab5w","tag_id":"ckvhrljly000c5su419efdw2v","_id":"ckvhrljm1000n5su4bh42frly"},{"post_id":"ckvhrljli00015su47o4nab5w","tag_id":"ckvhrljlz000g5su4agr80p4r","_id":"ckvhrljm2000p5su45r9daz6t"},{"post_id":"ckvhrljli00015su47o4nab5w","tag_id":"ckvhrljm0000i5su4ayqzhdtt","_id":"ckvhrljm2000q5su4631280w7"},{"post_id":"ckvhrljli00015su47o4nab5w","tag_id":"ckvhrljm0000k5su47pqyd7b4","_id":"ckvhrljm2000s5su48q9r0zus"},{"post_id":"ckvhrljls00075su4agi75vto","tag_id":"ckvhrljm1000l5su4dhv30ar8","_id":"ckvhrljm4000v5su4e8j3fufm"},{"post_id":"ckvhrljls00075su4agi75vto","tag_id":"ckvhrljm1000o5su4e6olbdaf","_id":"ckvhrljm4000w5su41gft0n8l"},{"post_id":"ckvhrljls00075su4agi75vto","tag_id":"ckvhrljm2000r5su4ehaagism","_id":"ckvhrljm4000y5su4b0oihzn8"},{"post_id":"ckvhrljls00075su4agi75vto","tag_id":"ckvhrljm2000t5su4ey3qfawm","_id":"ckvhrljm4000z5su45z0ufx7a"},{"post_id":"ckvhrljlv00095su471xi4cac","tag_id":"ckvhrljm3000u5su4bgpq9buh","_id":"ckvhrljm500125su44o6s289b"},{"post_id":"ckvhrljlv00095su471xi4cac","tag_id":"ckvhrljm4000x5su46lvk40zs","_id":"ckvhrljm600135su45iuqb2f4"},{"post_id":"ckvhrljlv00095su471xi4cac","tag_id":"ckvhrljm400105su41ryhfmbw","_id":"ckvhrljm600145su4flqu6bu8"},{"post_id":"ckvhrljlv00095su471xi4cac","tag_id":"ckvhrljm500115su447qodjd1","_id":"ckvhrljm600155su4135r1uue"}],"Tag":[{"name":"promise","_id":"ckvhrljlr00055su46fpl63zs"},{"name":"async","_id":"ckvhrljly000c5su419efdw2v"},{"name":"setTimeout","_id":"ckvhrljlz000g5su4agr80p4r"},{"name":"synchronous","_id":"ckvhrljm0000i5su4ayqzhdtt"},{"name":"asynchronous","_id":"ckvhrljm0000k5su47pqyd7b4"},{"name":"DNS","_id":"ckvhrljm1000l5su4dhv30ar8"},{"name":"HTTP","_id":"ckvhrljm1000o5su4e6olbdaf"},{"name":"TCP","_id":"ckvhrljm2000r5su4ehaagism"},{"name":"URL","_id":"ckvhrljm2000t5su4ey3qfawm"},{"name":"npm","_id":"ckvhrljm3000u5su4bgpq9buh"},{"name":"node","_id":"ckvhrljm4000x5su46lvk40zs"},{"name":"dependencies","_id":"ckvhrljm400105su41ryhfmbw"},{"name":"script","_id":"ckvhrljm500115su447qodjd1"}]}}